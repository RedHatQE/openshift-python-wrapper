{
  "description": "SubjectPermission is the Schema for the subjectpermissions API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.\nSubjectPermissionSpec defines the desired state of SubjectPermission",
      "type": "object",
      "required": [
        "subjectKind",
        "subjectName"
      ],
      "properties": {
        "clusterPermissions": {
          "description": "List of permissions applied at Cluster scope",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "description": "List of permissions applied at Namespace scope",
          "type": "array",
          "items": {
            "description": "Permission defines a Role that is bound to the Subject\nAllowed in specific Namespaces",
            "type": "object",
            "required": [
              "clusterRoleName"
            ],
            "properties": {
              "clusterRoleName": {
                "description": "ClusterRoleName to bind to the Subject as a RoleBindings in allowed Namespaces",
                "type": "string"
              },
              "namespacesAllowedRegex": {
                "description": "NamespacesAllowedRegex representing allowed Namespaces",
                "type": "string"
              },
              "namespacesDeniedRegex": {
                "description": "NamespacesDeniedRegex representing denied Namespaces",
                "type": "string"
              }
            }
          }
        },
        "subjectKind": {
          "description": "Important: Run \"make\" to regenerate code after modifying this file\nKind of the Subject that is being granted permissions by the operator",
          "type": "string"
        },
        "subjectName": {
          "description": "Name of the Subject granted permissions by the operator",
          "type": "string"
        },
        "subjectNamespace": {
          "description": "Namespace of the Subject granted permissions by the operator",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "SubjectPermissionStatus defines the observed state of SubjectPermission",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Important: Run \"make\" to regenerate code after modifying this file\nList of conditions for the CR",
          "type": "array",
          "items": {
            "description": "Condition defines a single condition of running the operator against an instance of the SubjectPermission CR",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "state",
              "status"
            ],
            "properties": {
              "clusterRoleName": {
                "description": "ClusterRoleName in which this condition is true",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition was active for the CR",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message related to the condition",
                "type": "string"
              },
              "state": {
                "description": "State that this condition represents",
                "type": "string"
              },
              "status": {
                "description": "Flag to indicate if condition status is currently active",
                "type": "boolean"
              },
              "type": {
                "description": "Type is the type of the condition",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "managed.openshift.io",
      "kind": "SubjectPermission",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}