{
  "description": "VirtualMachineInstanceMigration represents the object tracking a VMI's migration\nto another host in the cluster",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": "object",
      "properties": {
        "vmiName": {
          "description": "The name of the VMI to perform the migration on. VMI must exist in the migration objects namespace",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "VirtualMachineInstanceMigration reprents information pertaining to a VMI's migration.",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastProbeTime": {
                "format": "date-time"
              },
              "lastTransitionTime": {
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "migrationState": {
          "description": "Represents the status of a live migration",
          "type": "object",
          "properties": {
            "abortRequested": {
              "description": "Indicates that the migration has been requested to abort",
              "type": "boolean"
            },
            "abortStatus": {
              "description": "Indicates the final status of the live migration abortion",
              "type": "string"
            },
            "completed": {
              "description": "Indicates the migration completed",
              "type": "boolean"
            },
            "endTimestamp": {
              "description": "The time the migration action ended",
              "format": "date-time"
            },
            "failed": {
              "description": "Indicates that the migration failed",
              "type": "boolean"
            },
            "failureReason": {
              "description": "Contains the reason why the migration failed",
              "type": "string"
            },
            "migrationConfiguration": {
              "description": "Migration configurations to apply",
              "type": "object",
              "properties": {
                "allowAutoConverge": {
                  "description": "AllowAutoConverge allows the platform to compromise performance/availability of VMIs to\nguarantee successful VMI live migrations. Defaults to false",
                  "type": "boolean"
                },
                "allowPostCopy": {
                  "description": "AllowPostCopy enables post-copy live migrations. Such migrations allow even the busiest VMIs\nto successfully live-migrate. However, events like a network failure can cause a VMI crash.\nIf set to true, migrations will still start in pre-copy, but switch to post-copy when\nCompletionTimeoutPerGiB triggers. Defaults to false",
                  "type": "boolean"
                },
                "bandwidthPerMigration": {
                  "description": "BandwidthPerMigration limits the amount of network bandwidth live migrations are allowed to use.\nThe value is in quantity per second. Defaults to 0 (no limit)",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                },
                "completionTimeoutPerGiB": {
                  "description": "CompletionTimeoutPerGiB is the maximum number of seconds per GiB a migration is allowed to take.\nIf a live-migration takes longer to migrate than this value multiplied by the size of the VMI,\nthe migration will be cancelled, unless AllowPostCopy is true. Defaults to 800",
                  "type": "integer",
                  "format": "int64"
                },
                "disableTLS": {
                  "description": "When set to true, DisableTLS will disable the additional layer of live migration encryption\nprovided by KubeVirt. This is usually a bad idea. Defaults to false",
                  "type": "boolean"
                },
                "matchSELinuxLevelOnMigration": {
                  "description": "By default, the SELinux level of target virt-launcher pods is forced to the level of the source virt-launcher.\nWhen set to true, MatchSELinuxLevelOnMigration lets the CRI auto-assign a random level to the target.\nThat will ensure the target virt-launcher doesn't share categories with another pod on the node.\nHowever, migrations will fail when using RWX volumes that don't automatically deal with SELinux levels.",
                  "type": "boolean"
                },
                "network": {
                  "description": "Network is the name of the CNI network to use for live migrations. By default, migrations go\nthrough the pod network.",
                  "type": "string"
                },
                "nodeDrainTaintKey": {
                  "description": "NodeDrainTaintKey defines the taint key that indicates a node should be drained.\nNote: this option relies on the deprecated node taint feature. Default: kubevirt.io/drain",
                  "type": "string"
                },
                "parallelMigrationsPerCluster": {
                  "description": "ParallelMigrationsPerCluster is the total number of concurrent live migrations\nallowed cluster-wide. Defaults to 5",
                  "type": "integer",
                  "format": "int32"
                },
                "parallelOutboundMigrationsPerNode": {
                  "description": "ParallelOutboundMigrationsPerNode is the maximum number of concurrent outgoing live migrations\nallowed per node. Defaults to 2",
                  "type": "integer",
                  "format": "int32"
                },
                "progressTimeout": {
                  "description": "ProgressTimeout is the maximum number of seconds a live migration is allowed to make no progress.\nHitting this timeout means a migration transferred 0 data for that many seconds. The migration is\nthen considered stuck and therefore cancelled. Defaults to 150",
                  "type": "integer",
                  "format": "int64"
                },
                "unsafeMigrationOverride": {
                  "description": "UnsafeMigrationOverride allows live migrations to occur even if the compatibility check\nindicates the migration will be unsafe to the guest. Defaults to false",
                  "type": "boolean"
                }
              }
            },
            "migrationPolicyName": {
              "description": "Name of the migration policy. If string is empty, no policy is matched",
              "type": "string"
            },
            "migrationUid": {
              "description": "The VirtualMachineInstanceMigration object associated with this migration",
              "type": "string"
            },
            "mode": {
              "description": "Lets us know if the vmi is currently running pre or post copy migration",
              "type": "string"
            },
            "sourceNode": {
              "description": "The source node that the VMI originated on",
              "type": "string"
            },
            "sourcePod": {
              "type": "string"
            },
            "startTimestamp": {
              "description": "The time the migration action began",
              "format": "date-time"
            },
            "targetAttachmentPodUID": {
              "description": "The UID of the target attachment pod for hotplug volumes",
              "type": "string"
            },
            "targetCPUSet": {
              "description": "If the VMI requires dedicated CPUs, this field will\nhold the dedicated CPU set on the target node",
              "type": "array",
              "items": {
                "type": "integer"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "targetDirectMigrationNodePorts": {
              "description": "The list of ports opened for live migration on the destination node",
              "type": "object",
              "additionalProperties": {
                "type": "integer"
              }
            },
            "targetNode": {
              "description": "The target node that the VMI is moving to",
              "type": "string"
            },
            "targetNodeAddress": {
              "description": "The address of the target node to use for the migration",
              "type": "string"
            },
            "targetNodeDomainDetected": {
              "description": "The Target Node has seen the Domain Start Event",
              "type": "boolean"
            },
            "targetNodeDomainReadyTimestamp": {
              "description": "The timestamp at which the target node detects the domain is active",
              "type": "string",
              "format": "date-time"
            },
            "targetNodeTopology": {
              "description": "If the VMI requires dedicated CPUs, this field will\nhold the numa topology on the target node",
              "type": "string"
            },
            "targetPod": {
              "description": "The target pod that the VMI is moving to",
              "type": "string"
            }
          }
        },
        "phase": {
          "description": "VirtualMachineInstanceMigrationPhase is a label for the condition of a VirtualMachineInstanceMigration at the current time.",
          "type": "string"
        },
        "phaseTransitionTimestamps": {
          "description": "PhaseTransitionTimestamp is the timestamp of when the last phase change occurred",
          "type": "array",
          "items": {
            "description": "VirtualMachineInstanceMigrationPhaseTransitionTimestamp gives a timestamp in relation to when a phase is set on a vmi",
            "type": "object",
            "properties": {
              "phase": {
                "description": "Phase is the status of the VirtualMachineInstanceMigrationPhase in kubernetes world. It is not the VirtualMachineInstanceMigrationPhase status, but partially correlates to it.",
                "type": "string"
              },
              "phaseTransitionTimestamp": {
                "description": "PhaseTransitionTimestamp is the timestamp of when the phase change occurred",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kubevirt.io",
      "kind": "VirtualMachineInstanceMigration",
      "version": "v1alpha3"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}