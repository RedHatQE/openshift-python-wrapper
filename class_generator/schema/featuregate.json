{
  "description": "Feature holds cluster-wide information about feature gates.  The canonical name is `cluster`\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec holds user settable values for configuration",
      "type": "object",
      "properties": {
        "customNoUpgrade": {
          "description": "customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES.\nBecause of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations\nyour cluster may fail in an unrecoverable way.  featureSet must equal \"CustomNoUpgrade\" must be set to use this field."
        },
        "featureSet": {
          "description": "featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting.\nTurning on or off features may cause irreversible changes in your cluster which cannot be undone.",
          "type": "string",
          "enum": [
            "CustomNoUpgrade",
            "DevPreviewNoUpgrade",
            "TechPreviewNoUpgrade",
            ""
          ],
          "x-kubernetes-validations": [
            {
              "message": "CustomNoUpgrade may not be changed",
              "rule": "oldSelf == 'CustomNoUpgrade' ? self == 'CustomNoUpgrade' : true"
            },
            {
              "message": "TechPreviewNoUpgrade may not be changed",
              "rule": "oldSelf == 'TechPreviewNoUpgrade' ? self == 'TechPreviewNoUpgrade' : true"
            },
            {
              "message": "DevPreviewNoUpgrade may not be changed",
              "rule": "oldSelf == 'DevPreviewNoUpgrade' ? self == 'DevPreviewNoUpgrade' : true"
            }
          ]
        }
      },
      "x-kubernetes-validations": [
        {
          "message": ".spec.featureSet cannot be removed",
          "rule": "has(oldSelf.featureSet) ? has(self.featureSet) : true"
        }
      ]
    },
    "status": {
      "description": "status holds observed values from the cluster. They may not be overridden.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions represent the observations of the current state.\nKnown .status.conditions.type are: \"DeterminationDegraded\"",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "featureGates": {
          "description": "featureGates contains a list of enabled and disabled featureGates that are keyed by payloadVersion.\nOperators other than the CVO and cluster-config-operator, must read the .status.featureGates, locate\nthe version they are managing, find the enabled/disabled featuregates and make the operand and operator match.\nThe enabled/disabled values for a particular version may change during the life of the cluster as various\n.spec.featureSet values are selected.\nOperators may choose to restart their processes to pick up these changes, but remembering past enable/disable\nlists is beyond the scope of this API and is the responsibility of individual operators.\nOnly featureGates with .version in the ClusterVersion.status will be present in this list.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "version"
            ],
            "properties": {
              "disabled": {
                "description": "disabled is a list of all feature gates that are disabled in the cluster for the named version.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the name of the FeatureGate.",
                      "type": "string",
                      "pattern": "^([A-Za-z0-9-]+\\.)*[A-Za-z0-9-]+\\.?$"
                    }
                  }
                }
              },
              "enabled": {
                "description": "enabled is a list of all feature gates that are enabled in the cluster for the named version.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the name of the FeatureGate.",
                      "type": "string",
                      "pattern": "^([A-Za-z0-9-]+\\.)*[A-Za-z0-9-]+\\.?$"
                    }
                  }
                }
              },
              "version": {
                "description": "version matches the version provided by the ClusterVersion and in the ClusterOperator.Status.Versions field.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "version"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "config.openshift.io",
      "kind": "FeatureGate",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}