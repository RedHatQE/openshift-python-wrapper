{
  "description": "Build configures the behavior of OpenShift builds for the entire cluster.\nThis includes default settings that can be overridden in BuildConfig objects, and overrides which are applied to all builds.\n\nThe canonical name is \"cluster\"\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Spec holds user-settable values for the build controller configuration",
      "type": "object",
      "properties": {
        "additionalTrustedCA": {
          "description": "AdditionalTrustedCA is a reference to a ConfigMap containing additional CAs that\nshould be trusted for image pushes and pulls during builds.\nThe namespace for this config map is openshift-config.\n\nDEPRECATED: Additional CAs for image pull and push should be set on\nimage.config.openshift.io/cluster instead.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "name is the metadata.name of the referenced config map",
              "type": "string"
            }
          }
        },
        "buildDefaults": {
          "description": "BuildDefaults controls the default information for Builds",
          "type": "object",
          "properties": {
            "defaultProxy": {
              "description": "DefaultProxy contains the default proxy settings for all build operations, including image pull/push\nand source download.\n\nValues can be overrode by setting the `HTTP_PROXY`, `HTTPS_PROXY`, and `NO_PROXY` environment variables\nin the build config's strategy.",
              "type": "object",
              "properties": {
                "httpProxy": {
                  "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
                  "type": "string"
                },
                "httpsProxy": {
                  "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
                  "type": "string"
                },
                "noProxy": {
                  "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used.\nEmpty means unset and will not result in an env var.",
                  "type": "string"
                },
                "readinessEndpoints": {
                  "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "trustedCA": {
                  "description": "trustedCA is a reference to a ConfigMap containing a CA certificate bundle.\nThe trustedCA field should only be consumed by a proxy validator. The\nvalidator is responsible for reading the certificate bundle from the required\nkey \"ca-bundle.crt\", merging it with the system default trust bundle,\nand writing the merged trust bundle to a ConfigMap named \"trusted-ca-bundle\"\nin the \"openshift-config-managed\" namespace. Clients that expect to make\nproxy connections must use the trusted-ca-bundle for all HTTPS requests to\nthe proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as\nwell.\n\nThe namespace for the ConfigMap referenced by trustedCA is\n\"openshift-config\". Here is an example ConfigMap (in yaml):\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n name: user-ca-bundle\n namespace: openshift-config\n data:\n   ca-bundle.crt: |\n     -----BEGIN CERTIFICATE-----\n     Custom CA certificate bundle.\n     -----END CERTIFICATE-----",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "env": {
              "description": "Env is a set of default environment variables that will be applied to the\nbuild if the specified variables do not exist on the build",
              "type": "array",
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": "string"
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "type": "object",
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "type": "object",
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": "string"
                          },
                          "divisor": {
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  }
                }
              }
            },
            "gitProxy": {
              "description": "GitProxy contains the proxy settings for git operations only. If set, this will override\nany Proxy settings for all git commands, such as git clone.\n\nValues that are not set here will be inherited from DefaultProxy.",
              "type": "object",
              "properties": {
                "httpProxy": {
                  "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
                  "type": "string"
                },
                "httpsProxy": {
                  "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
                  "type": "string"
                },
                "noProxy": {
                  "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used.\nEmpty means unset and will not result in an env var.",
                  "type": "string"
                },
                "readinessEndpoints": {
                  "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "trustedCA": {
                  "description": "trustedCA is a reference to a ConfigMap containing a CA certificate bundle.\nThe trustedCA field should only be consumed by a proxy validator. The\nvalidator is responsible for reading the certificate bundle from the required\nkey \"ca-bundle.crt\", merging it with the system default trust bundle,\nand writing the merged trust bundle to a ConfigMap named \"trusted-ca-bundle\"\nin the \"openshift-config-managed\" namespace. Clients that expect to make\nproxy connections must use the trusted-ca-bundle for all HTTPS requests to\nthe proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as\nwell.\n\nThe namespace for the ConfigMap referenced by trustedCA is\n\"openshift-config\". Here is an example ConfigMap (in yaml):\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n name: user-ca-bundle\n namespace: openshift-config\n data:\n   ca-bundle.crt: |\n     -----BEGIN CERTIFICATE-----\n     Custom CA certificate bundle.\n     -----END CERTIFICATE-----",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "imageLabels": {
              "description": "ImageLabels is a list of docker labels that are applied to the resulting image.\nUser can override a default label by providing a label with the same name in their\nBuild/BuildConfig.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name defines the name of the label. It must have non-zero length.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value defines the literal value of the label.",
                    "type": "string"
                  }
                }
              }
            },
            "resources": {
              "description": "Resources defines resource requirements to execute the build.",
              "type": "object",
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "type": "array",
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                        "type": "string"
                      },
                      "request": {
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            }
          }
        },
        "buildOverrides": {
          "description": "BuildOverrides controls override settings for builds",
          "type": "object",
          "properties": {
            "forcePull": {
              "description": "ForcePull overrides, if set, the equivalent value in the builds,\ni.e. false disables force pull for all builds,\ntrue enables force pull for all builds,\nindependently of what each build specifies itself",
              "type": "boolean"
            },
            "imageLabels": {
              "description": "ImageLabels is a list of docker labels that are applied to the resulting image.\nIf user provided a label in their Build/BuildConfig with the same name as one in this\nlist, the user's label will be overwritten.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name defines the name of the label. It must have non-zero length.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value defines the literal value of the label.",
                    "type": "string"
                  }
                }
              }
            },
            "nodeSelector": {
              "description": "NodeSelector is a selector which must be true for the build pod to fit on a node",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "tolerations": {
              "description": "Tolerations is a list of Tolerations that will override any existing\ntolerations set on a build pod.",
              "type": "array",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "type": "object",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "config.openshift.io",
      "kind": "Build",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}