{
  "description": "Network describes the cluster's desired network configuration. It is\nconsumed by the cluster-network-operator.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "NetworkSpec is the top-level network configuration object.",
      "type": "object",
      "properties": {
        "additionalNetworks": {
          "description": "additionalNetworks is a list of extra networks to make available to pods\nwhen multiple networks are enabled.",
          "type": "array",
          "items": {
            "description": "AdditionalNetworkDefinition configures an extra network that is available but not\ncreated by default. Instead, pods must request them by name.\ntype must be specified, along with exactly one \"Config\" that matches the type.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "name is the name of the network. This will be populated in the resulting CRD\nThis must be unique.",
                "type": "string"
              },
              "namespace": {
                "description": "namespace is the namespace of the network. This will be populated in the resulting CRD\nIf not given the network will be created in the default namespace.",
                "type": "string"
              },
              "rawCNIConfig": {
                "description": "rawCNIConfig is the raw CNI configuration json to create in the\nNetworkAttachmentDefinition CRD",
                "type": "string"
              },
              "simpleMacvlanConfig": {
                "description": "SimpleMacvlanConfig configures the macvlan interface in case of type:NetworkTypeSimpleMacvlan",
                "type": "object",
                "properties": {
                  "ipamConfig": {
                    "description": "IPAMConfig configures IPAM module will be used for IP Address Management (IPAM).",
                    "type": "object",
                    "properties": {
                      "staticIPAMConfig": {
                        "description": "StaticIPAMConfig configures the static IP address in case of type:IPAMTypeStatic",
                        "type": "object",
                        "properties": {
                          "addresses": {
                            "description": "Addresses configures IP address for the interface",
                            "type": "array",
                            "items": {
                              "description": "StaticIPAMAddresses provides IP address and Gateway for static IPAM addresses",
                              "type": "object",
                              "properties": {
                                "address": {
                                  "description": "Address is the IP address in CIDR format",
                                  "type": "string"
                                },
                                "gateway": {
                                  "description": "Gateway is IP inside of subnet to designate as the gateway",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "dns": {
                            "description": "DNS configures DNS for the interface",
                            "type": "object",
                            "properties": {
                              "domain": {
                                "description": "Domain configures the domainname the local domain used for short hostname lookups",
                                "type": "string"
                              },
                              "nameservers": {
                                "description": "Nameservers points DNS servers for IP lookup",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "search": {
                                "description": "Search configures priority ordered search domains for short hostname lookups",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "routes": {
                            "description": "Routes configures IP routes for the interface",
                            "type": "array",
                            "items": {
                              "description": "StaticIPAMRoutes provides Destination/Gateway pairs for static IPAM routes",
                              "type": "object",
                              "properties": {
                                "destination": {
                                  "description": "Destination points the IP route destination",
                                  "type": "string"
                                },
                                "gateway": {
                                  "description": "Gateway is the route's next-hop IP address\nIf unset, a default gateway is assumed (as determined by the CNI plugin).",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "type": {
                        "description": "Type is the type of IPAM module will be used for IP Address Management(IPAM).\nThe supported values are IPAMTypeDHCP, IPAMTypeStatic",
                        "type": "string"
                      }
                    }
                  },
                  "master": {
                    "description": "master is the host interface to create the macvlan interface from.\nIf not specified, it will be default route interface",
                    "type": "string"
                  },
                  "mode": {
                    "description": "mode is the macvlan mode: bridge, private, vepa, passthru. The default is bridge",
                    "type": "string"
                  },
                  "mtu": {
                    "description": "mtu is the mtu to use for the macvlan interface. if unset, host's\nkernel will select the value.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  }
                }
              },
              "type": {
                "description": "type is the type of network\nThe supported values are NetworkTypeRaw, NetworkTypeSimpleMacvlan",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "clusterNetwork": {
          "description": "clusterNetwork is the IP address pool to use for pod IPs.\nSome network providers support multiple ClusterNetworks.\nOthers only support one. This is equivalent to the cluster-cidr.",
          "type": "array",
          "items": {
            "description": "ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size\nHostPrefix (in CIDR notation) will be allocated when nodes join the cluster. If\nthe HostPrefix field is not used by the plugin, it can be left unset.\nNot all network providers support multiple ClusterNetworks",
            "type": "object",
            "properties": {
              "cidr": {
                "type": "string"
              },
              "hostPrefix": {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "defaultNetwork": {
          "description": "defaultNetwork is the \"default\" network that all pods will receive",
          "type": "object",
          "properties": {
            "openshiftSDNConfig": {
              "description": "openShiftSDNConfig was previously used to configure the openshift-sdn plugin.\nDEPRECATED: OpenShift SDN is no longer supported.",
              "type": "object",
              "properties": {
                "enableUnidling": {
                  "description": "enableUnidling controls whether or not the service proxy will support idling\nand unidling of services. By default, unidling is enabled.",
                  "type": "boolean"
                },
                "mode": {
                  "description": "mode is one of \"Multitenant\", \"Subnet\", or \"NetworkPolicy\"",
                  "type": "string"
                },
                "mtu": {
                  "description": "mtu is the mtu to use for the tunnel interface. Defaults to 1450 if unset.\nThis must be 50 bytes smaller than the machine's uplink.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "useExternalOpenvswitch": {
                  "description": "useExternalOpenvswitch used to control whether the operator would deploy an OVS\nDaemonSet itself or expect someone else to start OVS. As of 4.6, OVS is always\nrun as a system service, and this flag is ignored.",
                  "type": "boolean"
                },
                "vxlanPort": {
                  "description": "vxlanPort is the port to use for all vxlan packets. The default is 4789.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              }
            },
            "ovnKubernetesConfig": {
              "description": "ovnKubernetesConfig configures the ovn-kubernetes plugin.",
              "type": "object",
              "properties": {
                "egressIPConfig": {
                  "description": "egressIPConfig holds the configuration for EgressIP options.",
                  "type": "object",
                  "properties": {
                    "reachabilityTotalTimeoutSeconds": {
                      "description": "reachabilityTotalTimeout configures the EgressIP node reachability check total timeout in seconds.\nIf the EgressIP node cannot be reached within this timeout, the node is declared down.\nSetting a large value may cause the EgressIP feature to react slowly to node changes.\nIn particular, it may react slowly for EgressIP nodes that really have a genuine problem and are unreachable.\nWhen omitted, this means the user has no opinion and the platform is left to choose a reasonable default, which is subject to change over time.\nThe current default is 1 second.\nA value of 0 disables the EgressIP node's reachability check.",
                      "type": "integer",
                      "format": "int32",
                      "maximum": 60,
                      "minimum": 0
                    }
                  }
                },
                "gatewayConfig": {
                  "description": "gatewayConfig holds the configuration for node gateway options.",
                  "type": "object",
                  "properties": {
                    "ipForwarding": {
                      "description": "IPForwarding controls IP forwarding for all traffic on OVN-Kubernetes managed interfaces (such as br-ex).\nBy default this is set to Restricted, and Kubernetes related traffic is still forwarded appropriately, but other\nIP traffic will not be routed by the OCP node. If there is a desire to allow the host to forward traffic across\nOVN-Kubernetes managed interfaces, then set this field to \"Global\".\nThe supported values are \"Restricted\" and \"Global\".",
                      "type": "string"
                    },
                    "ipv4": {
                      "description": "ipv4 allows users to configure IP settings for IPv4 connections. When omitted, this means no opinion and the default\nconfiguration is used. Check individual members fields within ipv4 for details of default values.",
                      "type": "object",
                      "properties": {
                        "internalMasqueradeSubnet": {
                          "description": "internalMasqueradeSubnet contains the masquerade addresses in IPV4 CIDR format used internally by\novn-kubernetes to enable host to service traffic. Each host in the cluster is configured with these\naddresses, as well as the shared gateway bridge interface. The values can be changed after\ninstallation. The subnet chosen should not overlap with other networks specified for\nOVN-Kubernetes as well as other networks used on the host. Additionally the subnet must\nbe large enough to accommodate 6 IPs (maximum prefix length /29).\nWhen omitted, this means no opinion and the platform is left to choose a reasonable default which is subject to change over time.\nThe current default subnet is 169.254.169.0/29\nThe value must be in proper IPV4 CIDR format",
                          "type": "string",
                          "maxLength": 18,
                          "x-kubernetes-validations": [
                            {
                              "message": "Subnet must be in valid IPV4 CIDR format",
                              "rule": "isCIDR(self) && cidr(self).ip().family() == 4"
                            },
                            {
                              "message": "subnet must be in the range /0 to /29 inclusive",
                              "rule": "isCIDR(self) && cidr(self).prefixLength() <= 29"
                            },
                            {
                              "message": "first IP address octet must not be 0",
                              "rule": "isCIDR(self) && int(self.split('.')[0]) > 0"
                            }
                          ]
                        }
                      }
                    },
                    "ipv6": {
                      "description": "ipv6 allows users to configure IP settings for IPv6 connections. When omitted, this means no opinion and the default\nconfiguration is used. Check individual members fields within ipv6 for details of default values.",
                      "type": "object",
                      "properties": {
                        "internalMasqueradeSubnet": {
                          "description": "internalMasqueradeSubnet contains the masquerade addresses in IPV6 CIDR format used internally by\novn-kubernetes to enable host to service traffic. Each host in the cluster is configured with these\naddresses, as well as the shared gateway bridge interface. The values can be changed after\ninstallation. The subnet chosen should not overlap with other networks specified for\nOVN-Kubernetes as well as other networks used on the host. Additionally the subnet must\nbe large enough to accommodate 6 IPs (maximum prefix length /125).\nWhen omitted, this means no opinion and the platform is left to choose a reasonable default which is subject to change over time.\nThe current default subnet is fd69::/125\nNote that IPV6 dual addresses are not permitted",
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "message": "Subnet must be in valid IPV6 CIDR format",
                              "rule": "isCIDR(self) && cidr(self).ip().family() == 6"
                            },
                            {
                              "message": "subnet must be in the range /0 to /125 inclusive",
                              "rule": "isCIDR(self) && cidr(self).prefixLength() <= 125"
                            }
                          ]
                        }
                      }
                    },
                    "routingViaHost": {
                      "description": "RoutingViaHost allows pod egress traffic to exit via the ovn-k8s-mp0 management port\ninto the host before sending it out. If this is not set, traffic will always egress directly\nfrom OVN to outside without touching the host stack. Setting this to true means hardware\noffload will not be supported. Default is false if GatewayConfig is specified.",
                      "type": "boolean"
                    }
                  }
                },
                "genevePort": {
                  "description": "geneve port is the UDP port to be used by geneve encapulation.\nDefault is 6081",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "hybridOverlayConfig": {
                  "description": "HybridOverlayConfig configures an additional overlay network for peers that are\nnot using OVN.",
                  "type": "object",
                  "properties": {
                    "hybridClusterNetwork": {
                      "description": "HybridClusterNetwork defines a network space given to nodes on an additional overlay network.",
                      "type": "array",
                      "items": {
                        "description": "ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size\nHostPrefix (in CIDR notation) will be allocated when nodes join the cluster. If\nthe HostPrefix field is not used by the plugin, it can be left unset.\nNot all network providers support multiple ClusterNetworks",
                        "type": "object",
                        "properties": {
                          "cidr": {
                            "type": "string"
                          },
                          "hostPrefix": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "hybridOverlayVXLANPort": {
                      "description": "HybridOverlayVXLANPort defines the VXLAN port number to be used by the additional overlay network.\nDefault is 4789",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "ipsecConfig": {
                  "description": "ipsecConfig enables and configures IPsec for pods on the pod network within the\ncluster.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "mode defines the behaviour of the ipsec configuration within the platform.\nValid values are `Disabled`, `External` and `Full`.\nWhen 'Disabled', ipsec will not be enabled at the node level.\nWhen 'External', ipsec is enabled on the node level but requires the user to configure the secure communication parameters.\nThis mode is for external secure communications and the configuration can be done using the k8s-nmstate operator.\nWhen 'Full', ipsec is configured on the node level and inter-pod secure communication within the cluster is configured.\nNote with `Full`, if ipsec is desired for communication with external (to the cluster) entities (such as storage arrays),\nthis is left to the user to configure.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "External",
                        "Full"
                      ]
                    }
                  },
                  "x-kubernetes-validations": [
                    {
                      "message": "ipsecConfig.mode is required",
                      "rule": "self == oldSelf || has(self.mode)"
                    }
                  ]
                },
                "ipv4": {
                  "description": "ipv4 allows users to configure IP settings for IPv4 connections. When ommitted,\nthis means no opinions and the default configuration is used. Check individual\nfields within ipv4 for details of default values.",
                  "type": "object",
                  "properties": {
                    "internalJoinSubnet": {
                      "description": "internalJoinSubnet is a v4 subnet used internally by ovn-kubernetes in case the\ndefault one is being already used by something else. It must not overlap with\nany other subnet being used by OpenShift or by the node network. The size of the\nsubnet must be larger than the number of nodes. The value cannot be changed\nafter installation.\nThe current default value is 100.64.0.0/16\nThe subnet must be large enough to accomadate one IP per node in your cluster\nThe value must be in proper IPV4 CIDR format",
                      "type": "string",
                      "maxLength": 18,
                      "x-kubernetes-validations": [
                        {
                          "message": "Subnet must be in valid IPV4 CIDR format",
                          "rule": "isCIDR(self) && cidr(self).ip().family() == 4"
                        },
                        {
                          "message": "subnet must be in the range /0 to /30 inclusive",
                          "rule": "isCIDR(self) && cidr(self).prefixLength() <= 30"
                        },
                        {
                          "message": "first IP address octet must not be 0",
                          "rule": "isCIDR(self) && int(self.split('.')[0]) > 0"
                        }
                      ]
                    },
                    "internalTransitSwitchSubnet": {
                      "description": "internalTransitSwitchSubnet is a v4 subnet in IPV4 CIDR format used internally\nby OVN-Kubernetes for the distributed transit switch in the OVN Interconnect\narchitecture that connects the cluster routers on each node together to enable\neast west traffic. The subnet chosen should not overlap with other networks\nspecified for OVN-Kubernetes as well as other networks used on the host.\nThe value cannot be changed after installation.\nWhen ommitted, this means no opinion and the platform is left to choose a reasonable\ndefault which is subject to change over time.\nThe current default subnet is 100.88.0.0/16\nThe subnet must be large enough to accomadate one IP per node in your cluster\nThe value must be in proper IPV4 CIDR format",
                      "type": "string",
                      "maxLength": 18,
                      "x-kubernetes-validations": [
                        {
                          "message": "Subnet must be in valid IPV4 CIDR format",
                          "rule": "isCIDR(self) && cidr(self).ip().family() == 4"
                        },
                        {
                          "message": "subnet must be in the range /0 to /30 inclusive",
                          "rule": "isCIDR(self) && cidr(self).prefixLength() <= 30"
                        },
                        {
                          "message": "first IP address octet must not be 0",
                          "rule": "isCIDR(self) && int(self.split('.')[0]) > 0"
                        }
                      ]
                    }
                  }
                },
                "ipv6": {
                  "description": "ipv6 allows users to configure IP settings for IPv6 connections. When ommitted,\nthis means no opinions and the default configuration is used. Check individual\nfields within ipv4 for details of default values.",
                  "type": "object",
                  "properties": {
                    "internalJoinSubnet": {
                      "description": "internalJoinSubnet is a v6 subnet used internally by ovn-kubernetes in case the\ndefault one is being already used by something else. It must not overlap with\nany other subnet being used by OpenShift or by the node network. The size of the\nsubnet must be larger than the number of nodes. The value cannot be changed\nafter installation.\nThe subnet must be large enough to accomadate one IP per node in your cluster\nThe current default value is fd98::/48\nThe value must be in proper IPV6 CIDR format\nNote that IPV6 dual addresses are not permitted",
                      "type": "string",
                      "maxLength": 48,
                      "x-kubernetes-validations": [
                        {
                          "message": "Subnet must be in valid IPV6 CIDR format",
                          "rule": "isCIDR(self) && cidr(self).ip().family() == 6"
                        },
                        {
                          "message": "subnet must be in the range /0 to /125 inclusive",
                          "rule": "isCIDR(self) && cidr(self).prefixLength() <= 125"
                        }
                      ]
                    },
                    "internalTransitSwitchSubnet": {
                      "description": "internalTransitSwitchSubnet is a v4 subnet in IPV4 CIDR format used internally\nby OVN-Kubernetes for the distributed transit switch in the OVN Interconnect\narchitecture that connects the cluster routers on each node together to enable\neast west traffic. The subnet chosen should not overlap with other networks\nspecified for OVN-Kubernetes as well as other networks used on the host.\nThe value cannot be changed after installation.\nWhen ommitted, this means no opinion and the platform is left to choose a reasonable\ndefault which is subject to change over time.\nThe subnet must be large enough to accomadate one IP per node in your cluster\nThe current default subnet is fd97::/64\nThe value must be in proper IPV6 CIDR format\nNote that IPV6 dual addresses are not permitted",
                      "type": "string",
                      "maxLength": 48,
                      "x-kubernetes-validations": [
                        {
                          "message": "Subnet must be in valid IPV6 CIDR format",
                          "rule": "isCIDR(self) && cidr(self).ip().family() == 6"
                        },
                        {
                          "message": "subnet must be in the range /0 to /125 inclusive",
                          "rule": "isCIDR(self) && cidr(self).prefixLength() <= 125"
                        }
                      ]
                    }
                  }
                },
                "mtu": {
                  "description": "mtu is the MTU to use for the tunnel interface. This must be 100\nbytes smaller than the uplink mtu.\nDefault is 1400",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "policyAuditConfig": {
                  "description": "policyAuditConfig is the configuration for network policy audit events. If unset,\nreported defaults are used.",
                  "type": "object",
                  "properties": {
                    "destination": {
                      "description": "destination is the location for policy log messages.\nRegardless of this config, persistent logs will always be dumped to the host\nat /var/log/ovn/ however\nAdditionally syslog output may be configured as follows.\nValid values are:\n- \"libc\" -> to use the libc syslog() function of the host node's journdald process\n- \"udp:host:port\" -> for sending syslog over UDP\n- \"unix:file\" -> for using the UNIX domain socket directly\n- \"null\" -> to discard all messages logged to syslog\nThe default is \"null\"",
                      "type": "string"
                    },
                    "maxFileSize": {
                      "description": "maxFilesSize is the max size an ACL_audit log file is allowed to reach before rotation occurs\nUnits are in MB and the Default is 50MB",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    },
                    "maxLogFiles": {
                      "description": "maxLogFiles specifies the maximum number of ACL_audit log files that can be present.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    },
                    "rateLimit": {
                      "description": "rateLimit is the approximate maximum number of messages to generate per-second per-node. If\nunset the default of 20 msg/sec is used.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 1
                    },
                    "syslogFacility": {
                      "description": "syslogFacility the RFC5424 facility for generated messages, e.g. \"kern\". Default is \"local0\"",
                      "type": "string"
                    }
                  }
                },
                "v4InternalSubnet": {
                  "description": "v4InternalSubnet is a v4 subnet used internally by ovn-kubernetes in case the\ndefault one is being already used by something else. It must not overlap with\nany other subnet being used by OpenShift or by the node network. The size of the\nsubnet must be larger than the number of nodes. The value cannot be changed\nafter installation.\nDefault is 100.64.0.0/16",
                  "type": "string"
                },
                "v6InternalSubnet": {
                  "description": "v6InternalSubnet is a v6 subnet used internally by ovn-kubernetes in case the\ndefault one is being already used by something else. It must not overlap with\nany other subnet being used by OpenShift or by the node network. The size of the\nsubnet must be larger than the number of nodes. The value cannot be changed\nafter installation.\nDefault is fd98::/48",
                  "type": "string"
                }
              }
            },
            "type": {
              "description": "type is the type of network\nAll NetworkTypes are supported except for NetworkTypeRaw",
              "type": "string"
            }
          }
        },
        "deployKubeProxy": {
          "description": "deployKubeProxy specifies whether or not a standalone kube-proxy should\nbe deployed by the operator. Some network providers include kube-proxy\nor similar functionality. If unset, the plugin will attempt to select\nthe correct value, which is false when ovn-kubernetes is used and true\notherwise.",
          "type": "boolean"
        },
        "disableMultiNetwork": {
          "description": "disableMultiNetwork specifies whether or not multiple pod network\nsupport should be disabled. If unset, this property defaults to\n'false' and multiple network support is enabled.",
          "type": "boolean"
        },
        "disableNetworkDiagnostics": {
          "description": "disableNetworkDiagnostics specifies whether or not PodNetworkConnectivityCheck\nCRs from a test pod to every node, apiserver and LB should be disabled or not.\nIf unset, this property defaults to 'false' and network diagnostics is enabled.\nSetting this to 'true' would reduce the additional load of the pods performing the checks.",
          "type": "boolean"
        },
        "exportNetworkFlows": {
          "description": "exportNetworkFlows enables and configures the export of network flow metadata from the pod network\nby using protocols NetFlow, SFlow or IPFIX. Currently only supported on OVN-Kubernetes plugin.\nIf unset, flows will not be exported to any collector.",
          "type": "object",
          "properties": {
            "ipfix": {
              "description": "ipfix defines IPFIX configuration.",
              "type": "object",
              "properties": {
                "collectors": {
                  "description": "ipfixCollectors is list of strings formatted as ip:port with a maximum of ten items",
                  "type": "array",
                  "maxItems": 10,
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "netFlow": {
              "description": "netFlow defines the NetFlow configuration.",
              "type": "object",
              "properties": {
                "collectors": {
                  "description": "netFlow defines the NetFlow collectors that will consume the flow data exported from OVS.\nIt is a list of strings formatted as ip:port with a maximum of ten items",
                  "type": "array",
                  "maxItems": 10,
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "sFlow": {
              "description": "sFlow defines the SFlow configuration.",
              "type": "object",
              "properties": {
                "collectors": {
                  "description": "sFlowCollectors is list of strings formatted as ip:port with a maximum of ten items",
                  "type": "array",
                  "maxItems": 10,
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]):([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            }
          }
        },
        "kubeProxyConfig": {
          "description": "kubeProxyConfig lets us configure desired proxy configuration, if\ndeployKubeProxy is true. If not specified, sensible defaults will be chosen by\nOpenShift directly.",
          "type": "object",
          "properties": {
            "bindAddress": {
              "description": "The address to \"bind\" on\nDefaults to 0.0.0.0",
              "type": "string"
            },
            "iptablesSyncPeriod": {
              "description": "An internal kube-proxy parameter. In older releases of OCP, this sometimes needed to be adjusted\nin large clusters for performance reasons, but this is no longer necessary, and there is no reason\nto change this from the default value.\nDefault: 30s",
              "type": "string"
            },
            "proxyArguments": {
              "description": "Any additional arguments to pass to the kubeproxy process",
              "type": "object",
              "additionalProperties": {
                "description": "ProxyArgumentList is a list of arguments to pass to the kubeproxy process",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              }
            }
          }
        },
        "logLevel": {
          "description": "logLevel is an intent based logging for an overall component.  It does not give fine grained control, but it is a\nsimple way to manage coarse grained logging choices that operators have to interpret for their operands.\n\nValid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\".\nDefaults to \"Normal\".",
          "type": "string",
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "managementState": {
          "description": "managementState indicates whether and how the operator should manage the component",
          "type": "string",
          "pattern": "^(Managed|Unmanaged|Force|Removed)$"
        },
        "migration": {
          "description": "migration enables and configures cluster network migration, for network changes\nthat cannot be made instantly.",
          "type": "object",
          "properties": {
            "features": {
              "description": "features was previously used to configure which network plugin features\nwould be migrated in a network type migration.\nDEPRECATED: network type migration is no longer supported, and setting\nthis to a non-empty value will result in the network operator rejecting\nthe configuration.",
              "type": "object",
              "properties": {
                "egressFirewall": {
                  "description": "egressFirewall specified whether or not the Egress Firewall configuration was migrated.\nDEPRECATED: network type migration is no longer supported.",
                  "type": "boolean"
                },
                "egressIP": {
                  "description": "egressIP specified whether or not the Egress IP configuration was migrated.\nDEPRECATED: network type migration is no longer supported.",
                  "type": "boolean"
                },
                "multicast": {
                  "description": "multicast specified whether or not the multicast configuration was migrated.\nDEPRECATED: network type migration is no longer supported.",
                  "type": "boolean"
                }
              }
            },
            "mode": {
              "description": "mode indicates the mode of network type migration.\nDEPRECATED: network type migration is no longer supported, and setting\nthis to a non-empty value will result in the network operator rejecting\nthe configuration.",
              "type": "string",
              "enum": [
                "Live",
                "Offline",
                ""
              ]
            },
            "mtu": {
              "description": "mtu contains the MTU migration configuration. Set this to allow changing\nthe MTU values for the default network. If unset, the operation of\nchanging the MTU for the default network will be rejected.",
              "type": "object",
              "properties": {
                "machine": {
                  "description": "machine contains MTU migration configuration for the machine's uplink.\nNeeds to be migrated along with the default network MTU unless the\ncurrent uplink MTU already accommodates the default network MTU.",
                  "type": "object",
                  "properties": {
                    "from": {
                      "description": "from is the MTU to migrate from.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    },
                    "to": {
                      "description": "to is the MTU to migrate to.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    }
                  }
                },
                "network": {
                  "description": "network contains information about MTU migration for the default network.\nMigrations are only allowed to MTU values lower than the machine's uplink\nMTU by the minimum appropriate offset.",
                  "type": "object",
                  "properties": {
                    "from": {
                      "description": "from is the MTU to migrate from.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    },
                    "to": {
                      "description": "to is the MTU to migrate to.",
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    }
                  }
                }
              }
            },
            "networkType": {
              "description": "networkType was previously used when changing the default network type.\nDEPRECATED: network type migration is no longer supported, and setting\nthis to a non-empty value will result in the network operator rejecting\nthe configuration.",
              "type": "string"
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "networkType migration in mode other than 'Live' may not be configured at the same time as mtu migration",
              "rule": "!has(self.mtu) || !has(self.networkType) || self.networkType == \"\" || has(self.mode) && self.mode == 'Live'"
            }
          ]
        },
        "observedConfig": {
          "description": "observedConfig holds a sparse config that controller has observed from the cluster state.  It exists in spec because\nit is an input to the level for the operator",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "operatorLogLevel": {
          "description": "operatorLogLevel is an intent based logging for the operator itself.  It does not give fine grained control, but it is a\nsimple way to manage coarse grained logging choices that operators have to interpret for themselves.\n\nValid values are: \"Normal\", \"Debug\", \"Trace\", \"TraceAll\".\nDefaults to \"Normal\".",
          "type": "string",
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ]
        },
        "serviceNetwork": {
          "description": "serviceNetwork is the ip address pool to use for Service IPs\nCurrently, all existing network providers only support a single value\nhere, but this is an array to allow for growth.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "unsupportedConfigOverrides": {
          "description": "unsupportedConfigOverrides overrides the final configuration that was computed by the operator.\nRed Hat does not support the use of this field.\nMisuse of this field could lead to unexpected behavior or conflict with other configuration options.\nSeek guidance from the Red Hat support before using this field.\nUse of this property blocks cluster upgrades, it must be removed before upgrading your cluster.",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "useMultiNetworkPolicy": {
          "description": "useMultiNetworkPolicy enables a controller which allows for\nMultiNetworkPolicy objects to be used on additional networks as\ncreated by Multus CNI. MultiNetworkPolicy are similar to NetworkPolicy\nobjects, but NetworkPolicy objects only apply to the primary interface.\nWith MultiNetworkPolicy, you can control the traffic that a pod can receive\nover the secondary interfaces. If unset, this property defaults to 'false'\nand MultiNetworkPolicy objects are ignored. If 'disableMultiNetwork' is\n'true' then the value of this field is ignored.",
          "type": "boolean"
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "invalid value for IPForwarding, valid values are 'Restricted' or 'Global'",
          "rule": "!has(self.defaultNetwork) || !has(self.defaultNetwork.ovnKubernetesConfig) || !has(self.defaultNetwork.ovnKubernetesConfig.gatewayConfig) || !has(self.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipForwarding) || self.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipForwarding == oldSelf.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipForwarding || self.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipForwarding == 'Restricted' || self.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipForwarding == 'Global'"
        }
      ]
    },
    "status": {
      "description": "NetworkStatus is detailed operator status, which is distilled\nup to the Network clusteroperator object.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions is a list of conditions and their status",
          "type": "array",
          "items": {
            "description": "OperatorCondition is just the standard condition fields.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "generations": {
          "description": "generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.",
          "type": "array",
          "items": {
            "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.",
            "type": "object",
            "required": [
              "group",
              "name",
              "namespace",
              "resource"
            ],
            "properties": {
              "group": {
                "description": "group is the group of the thing you're tracking",
                "type": "string"
              },
              "hash": {
                "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps",
                "type": "string"
              },
              "lastGeneration": {
                "description": "lastGeneration is the last generation of the workload controller involved",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "name is the name of the thing you're tracking",
                "type": "string"
              },
              "namespace": {
                "description": "namespace is where the thing you're tracking is",
                "type": "string"
              },
              "resource": {
                "description": "resource is the resource type of the thing you're tracking",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "group",
            "resource",
            "namespace",
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "latestAvailableRevision": {
          "description": "latestAvailableRevision is the deploymentID of the most recent deployment",
          "type": "integer",
          "format": "int32",
          "x-kubernetes-validations": [
            {
              "message": "must only increase",
              "rule": "self >= oldSelf"
            }
          ]
        },
        "observedGeneration": {
          "description": "observedGeneration is the last generation change you've dealt with",
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "description": "readyReplicas indicates how many replicas are ready and at the desired state",
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "description": "version is the level this availability applies to",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "operator.openshift.io",
      "kind": "Network",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}