{
  "description": "MachineOSBuild describes a build process managed and deployed by the MCO\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec describes the configuration of the machine os build.\nIt is immutable once set.",
      "type": "object",
      "required": [
        "machineConfig",
        "machineOSConfig",
        "renderedImagePushSpec"
      ],
      "properties": {
        "machineConfig": {
          "description": "machineConfig points to the rendered MachineConfig resource to be included in this image build.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "name is the name of the rendered MachineConfig object.\nThis value should be between 10 and 253 characters, and must contain only lowercase\nalphanumeric characters, hyphens and periods, and should start and end with an alphanumeric character.",
              "type": "string",
              "maxLength": 253,
              "minLength": 10,
              "x-kubernetes-validations": [
                {
                  "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                  "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                }
              ]
            }
          }
        },
        "machineOSConfig": {
          "description": "machineOSConfig references the MachineOSConfig resource that this image build extends.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "name of the MachineOSConfig.\nThe name must contain only lowercase alphanumeric characters, '-' or '.' and start/end with an alphanumeric character.",
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "x-kubernetes-validations": [
                {
                  "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                  "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                }
              ]
            }
          }
        },
        "renderedImagePushSpec": {
          "description": "renderedImagePushSpec is set by the Machine Config Operator from the MachineOSConfig object this build is attached to.\nThis field describes the location of the final image, which will be pushed by the build once complete.\nThe format of the image push spec is: host[:port][/namespace]/name:<tag> or svc_name.namespace.svc[:port]/repository/name:<tag>.\nThe length of the push spec must be between 1 to 447 characters.",
          "type": "string",
          "maxLength": 447,
          "minLength": 1,
          "x-kubernetes-validations": [
            {
              "message": "the OCI Image name should follow the host[:port][/namespace]/name format, resembling a valid URL without the scheme. Or it must be a valid .svc followed by a port, repository, image name, and tag.",
              "rule": "self.matches('^([a-zA-Z0-9-]+\\\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?(/[a-zA-Z0-9-_]{1,61})*/[a-zA-Z0-9-_.]+:[a-zA-Z0-9._-]+$') || self.matches('^[^.]+\\\\.[^.]+\\\\.svc:\\\\d+\\\\/[^\\\\/]+\\\\/[^\\\\/]+:[^\\\\/]+$')"
            }
          ]
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "machineOSBuildSpec is immutable once set",
          "rule": "self == oldSelf"
        }
      ]
    },
    "status": {
      "description": "status describes the last observed state of this machine os build.",
      "type": "object",
      "properties": {
        "buildEnd": {
          "description": "buildEnd is the timestamp corresponding to completion of the builder backend.\nWhen omitted the build has either not been started, or is in progress.\nIt will be populated once the build completes, fails or is interrupted.",
          "type": "string",
          "format": "date-time",
          "x-kubernetes-validations": [
            {
              "message": "buildEnd is immutable once set",
              "rule": "self == oldSelf"
            }
          ]
        },
        "buildStart": {
          "description": "buildStart is the timestamp corresponding to the build controller initiating the build backend for this MachineOSBuild.",
          "type": "string",
          "format": "date-time",
          "x-kubernetes-validations": [
            {
              "message": "buildStart is immutable once set",
              "rule": "self == oldSelf"
            }
          ]
        },
        "builder": {
          "description": "builder describes the image builder backend used for this build.",
          "type": "object",
          "required": [
            "imageBuilderType"
          ],
          "properties": {
            "imageBuilderType": {
              "description": "imageBuilderType describes the type of image builder used to build this image.\nValid values are Job only.\nWhen set to Job, a pod based builder, using buildah, is launched to build the specified image.",
              "type": "string"
            },
            "job": {
              "description": "job is a reference to the job object that is managing the image build.\nThis is required if the imageBuilderType is Job, and forbidden otherwise.",
              "type": "object",
              "required": [
                "group",
                "name",
                "resource"
              ],
              "properties": {
                "group": {
                  "description": "group of the referent.\nThe name must contain only lowercase alphanumeric characters, '-' or '.' and start/end with an alphanumeric character.\nExample: \"\", \"apps\", \"build.openshift.io\", etc.",
                  "type": "string",
                  "maxLength": 253,
                  "x-kubernetes-validations": [
                    {
                      "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                      "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                    }
                  ]
                },
                "name": {
                  "description": "name of the referent.\nThe name must contain only lowercase alphanumeric characters, '-' or '.' and start/end with an alphanumeric character.",
                  "type": "string",
                  "maxLength": 253,
                  "minLength": 1,
                  "x-kubernetes-validations": [
                    {
                      "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                      "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                    }
                  ]
                },
                "namespace": {
                  "description": "namespace of the referent.\nThis value should consist of at most 63 characters, and of only lowercase alphanumeric characters and hyphens,\nand should start and end with an alphanumeric character.",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "x-kubernetes-validations": [
                    {
                      "message": "the value must consist of only lowercase alphanumeric characters and hyphens",
                      "rule": "!format.dns1123Label().validate(self).hasValue()"
                    }
                  ]
                },
                "resource": {
                  "description": "resource of the referent.\nThis value should consist of at most 63 characters, and of only lowercase alphanumeric characters and hyphens,\nand should start with an alphabetic character and end with an alphanumeric character.\nExample: \"deployments\", \"deploymentconfigs\", \"pods\", etc.",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "x-kubernetes-validations": [
                    {
                      "message": "a DNS-1035 label must consist of lower case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character",
                      "rule": "!format.dns1035Label().validate(self).hasValue()"
                    }
                  ]
                }
              }
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "job is required when imageBuilderType is Job, and forbidden otherwise",
              "rule": "has(self.imageBuilderType) && self.imageBuilderType == 'Job' ?  has(self.job) : !has(self.job)"
            }
          ]
        },
        "conditions": {
          "description": "conditions are state related conditions for the build. Valid types are:\nPrepared, Building, Failed, Interrupted, and Succeeded.\nOnce a Build is marked as Failed, Interrupted or Succeeded, no future conditions can be set.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-validations": [
            {
              "message": "once a Failed condition is set, conditions are immutable",
              "rule": "oldSelf.exists(x, x.type=='Failed' && x.status=='True') ? self==oldSelf : true"
            },
            {
              "message": "once an Interrupted condition is set, conditions are immutable",
              "rule": "oldSelf.exists(x, x.type=='Interrupted' && x.status=='True') ? self==oldSelf : true"
            },
            {
              "message": "once an Succeeded condition is set, conditions are immutable",
              "rule": "oldSelf.exists(x, x.type=='Succeeded' && x.status=='True') ? self==oldSelf : true"
            }
          ]
        },
        "digestedImagePushSpec": {
          "description": "digestedImagePushSpec describes the fully qualified push spec produced by this build.\nThe format of the push spec is: host[:port][/namespace]/name@sha256:<digest>,\nwhere the digest must be 64 characters long, and consist only of lowercase hexadecimal characters, a-f and 0-9.\nThe length of the whole spec must be between 1 to 447 characters.",
          "type": "string",
          "maxLength": 447,
          "minLength": 1,
          "x-kubernetes-validations": [
            {
              "message": "the OCI Image reference must end with a valid '@sha256:<digest>' suffix, where '<digest>' is 64 characters long",
              "rule": "(self.split('@').size() == 2 && self.split('@')[1].matches('^sha256:[a-f0-9]{64}$'))"
            },
            {
              "message": "the OCI Image name should follow the host[:port][/namespace]/name format, resembling a valid URL without the scheme",
              "rule": "(self.split('@')[0].matches('^([a-zA-Z0-9-]+\\\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?/([a-zA-Z0-9-_]{0,61}/)?[a-zA-Z0-9-_.]*?$'))"
            }
          ]
        },
        "relatedObjects": {
          "description": "relatedObjects is a list of references to ephemeral objects such as ConfigMaps or Secrets that are meant to be consumed while the build process runs.\nAfter a successful build or when this MachineOSBuild is deleted, these ephemeral objects will be removed.\nIn the event of a failed build, the objects will remain until the build is removed to allow for inspection.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
            "type": "object",
            "required": [
              "group",
              "name",
              "resource"
            ],
            "properties": {
              "group": {
                "description": "group of the referent.\nThe name must contain only lowercase alphanumeric characters, '-' or '.' and start/end with an alphanumeric character.\nExample: \"\", \"apps\", \"build.openshift.io\", etc.",
                "type": "string",
                "maxLength": 253,
                "x-kubernetes-validations": [
                  {
                    "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                    "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                  }
                ]
              },
              "name": {
                "description": "name of the referent.\nThe name must contain only lowercase alphanumeric characters, '-' or '.' and start/end with an alphanumeric character.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "x-kubernetes-validations": [
                  {
                    "message": "a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                    "rule": "!format.dns1123Subdomain().validate(self).hasValue()"
                  }
                ]
              },
              "namespace": {
                "description": "namespace of the referent.\nThis value should consist of at most 63 characters, and of only lowercase alphanumeric characters and hyphens,\nand should start and end with an alphanumeric character.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "x-kubernetes-validations": [
                  {
                    "message": "the value must consist of only lowercase alphanumeric characters and hyphens",
                    "rule": "!format.dns1123Label().validate(self).hasValue()"
                  }
                ]
              },
              "resource": {
                "description": "resource of the referent.\nThis value should consist of at most 63 characters, and of only lowercase alphanumeric characters and hyphens,\nand should start with an alphabetic character and end with an alphanumeric character.\nExample: \"deployments\", \"deploymentconfigs\", \"pods\", etc.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "x-kubernetes-validations": [
                  {
                    "message": "a DNS-1035 label must consist of lower case alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character",
                    "rule": "!format.dns1035Label().validate(self).hasValue()"
                  }
                ]
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name",
            "resource"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "buildEnd must be after buildStart",
          "rule": "has(self.buildEnd) ? has(self.buildStart) && timestamp(self.buildStart) < timestamp(self.buildEnd) : true"
        }
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "machineconfiguration.openshift.io",
      "kind": "MachineOSBuild",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}