{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates.",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "metadata": {
          "description": "Metadata that will be used for all corresponding `WorkloadEntries`.",
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "probe": {
          "description": "`ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload.",
          "type": "object",
          "properties": {
            "exec": {
              "description": "Health is determined by how the command that is executed exited.",
              "type": "object",
              "properties": {
                "command": {
                  "description": "Command to run.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
              "type": "integer",
              "format": "int32"
            },
            "httpGet": {
              "description": "`httpGet` is performed to a given endpoint and the status/able to connect determines health.",
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Headers the proxy will pass on to make the request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "description": "Port on which the endpoint lives.",
                  "type": "integer"
                },
                "scheme": {
                  "type": "string"
                }
              }
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before readiness probes are initiated.",
              "type": "integer",
              "format": "int32"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe.",
              "type": "integer",
              "format": "int32"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed.",
              "type": "integer",
              "format": "int32"
            },
            "tcpSocket": {
              "description": "Health is determined by if the proxy is able to connect.",
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "type": "integer"
                }
              }
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "template": {
          "description": "Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`.",
          "type": "object",
          "properties": {
            "address": {
              "description": "Address associated with the network endpoint without the port.",
              "type": "string"
            },
            "labels": {
              "description": "One or more labels associated with the endpoint.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "locality": {
              "description": "The locality associated with the endpoint.",
              "type": "string"
            },
            "network": {
              "description": "Network enables Istio to group endpoints resident in the same L3 domain/network.",
              "type": "string"
            },
            "ports": {
              "description": "Set of ports associated with the endpoint.",
              "type": "object",
              "additionalProperties": {
                "type": "integer"
              }
            },
            "serviceAccount": {
              "description": "The service account associated with the workload if a sidecar is present in the workload.",
              "type": "string"
            },
            "weight": {
              "description": "The load balancing weight associated with the endpoint.",
              "type": "integer"
            }
          }
        }
      }
    },
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networking.istio.io",
      "kind": "WorkloadGroup",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}