{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "failStrategy": {
          "description": "Specifies the failure behavior for the plugin due to fatal errors.\n\nValid Options: FAIL_CLOSE, FAIL_OPEN",
          "type": "string",
          "enum": [
            "FAIL_CLOSE",
            "FAIL_OPEN"
          ]
        },
        "imagePullPolicy": {
          "description": "The pull behaviour to be applied when fetching Wasm module by either OCI image or `http/https`.\n\nValid Options: IfNotPresent, Always",
          "type": "string",
          "enum": [
            "UNSPECIFIED_POLICY",
            "IfNotPresent",
            "Always"
          ]
        },
        "imagePullSecret": {
          "description": "Credentials to use for OCI image pulling.",
          "type": "string",
          "maxLength": 253,
          "minLength": 1
        },
        "match": {
          "description": "Specifies the criteria to determine which traffic is passed to WasmPlugin.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mode": {
                "description": "Criteria for selecting traffic by their direction.\n\nValid Options: CLIENT, SERVER, CLIENT_AND_SERVER",
                "type": "string",
                "enum": [
                  "UNDEFINED",
                  "CLIENT",
                  "SERVER",
                  "CLIENT_AND_SERVER"
                ]
              },
              "ports": {
                "description": "Criteria for selecting traffic by their destination port.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "number"
                  ],
                  "properties": {
                    "number": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 1
                    }
                  }
                },
                "x-kubernetes-list-map-keys": [
                  "number"
                ],
                "x-kubernetes-list-type": "map"
              }
            }
          }
        },
        "phase": {
          "description": "Determines where in the filter chain this `WasmPlugin` is to be injected.\n\nValid Options: AUTHN, AUTHZ, STATS",
          "type": "string",
          "enum": [
            "UNSPECIFIED_PHASE",
            "AUTHN",
            "AUTHZ",
            "STATS"
          ]
        },
        "pluginConfig": {
          "description": "The configuration that will be passed on to the plugin.",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "pluginName": {
          "description": "The plugin name to be used in the Envoy configuration (used to be called `rootID`).",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        },
        "priority": {
          "description": "Determines ordering of `WasmPlugins` in the same `phase`.",
          "format": "int32"
        },
        "selector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this plugin configuration should be applied.",
          "type": "object",
          "properties": {
            "matchLabels": {
              "description": "One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.",
              "type": "object",
              "maxProperties": 4096,
              "additionalProperties": {
                "type": "string",
                "maxLength": 63,
                "x-kubernetes-validations": [
                  {
                    "message": "wildcard not allowed in label value match",
                    "rule": "!self.contains('*')"
                  }
                ]
              },
              "x-kubernetes-validations": [
                {
                  "message": "wildcard not allowed in label key match",
                  "rule": "self.all(key, !key.contains('*'))"
                },
                {
                  "message": "key must not be empty",
                  "rule": "self.all(key, key.size() != 0)"
                }
              ]
            }
          }
        },
        "sha256": {
          "description": "SHA256 checksum that will be used to verify Wasm module or OCI container.",
          "type": "string",
          "pattern": "(^$|^[a-f0-9]{64}$)"
        },
        "targetRef": {
          "type": "object",
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "description": "group is the group of the target resource.",
              "type": "string",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "kind": {
              "description": "kind is kind of the target resource.",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
            },
            "name": {
              "description": "name is the name of the target resource.",
              "type": "string",
              "maxLength": 253,
              "minLength": 1
            },
            "namespace": {
              "description": "namespace is the namespace of the referent.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "cross namespace referencing is not currently supported",
                  "rule": "self.size() == 0"
                }
              ]
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "Support kinds are core/Service, networking.istio.io/ServiceEntry, gateway.networking.k8s.io/Gateway",
              "rule": "[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway'], ['networking.istio.io','ServiceEntry']]"
            }
          ]
        },
        "targetRefs": {
          "description": "Optional.",
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "kind",
              "name"
            ],
            "properties": {
              "group": {
                "description": "group is the group of the target resource.",
                "type": "string",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "description": "kind is kind of the target resource.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "description": "name is the name of the target resource.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "namespace": {
                "description": "namespace is the namespace of the referent.",
                "type": "string",
                "x-kubernetes-validations": [
                  {
                    "message": "cross namespace referencing is not currently supported",
                    "rule": "self.size() == 0"
                  }
                ]
              }
            },
            "x-kubernetes-validations": [
              {
                "message": "Support kinds are core/Service, networking.istio.io/ServiceEntry, gateway.networking.k8s.io/Gateway",
                "rule": "[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway'], ['networking.istio.io','ServiceEntry']]"
              }
            ]
          }
        },
        "type": {
          "description": "Specifies the type of Wasm Extension to be used.\n\nValid Options: HTTP, NETWORK",
          "type": "string",
          "enum": [
            "UNSPECIFIED_PLUGIN_TYPE",
            "HTTP",
            "NETWORK"
          ]
        },
        "url": {
          "description": "URL of a Wasm module or OCI container.",
          "type": "string",
          "minLength": 1,
          "x-kubernetes-validations": [
            {
              "message": "url must have schema one of [http, https, file, oci]",
              "rule": "isURL(self) ? (url(self).getScheme() in ['', 'http', 'https', 'oci', 'file']) : (isURL('http://' + self) && url('http://' +self).getScheme() in ['', 'http', 'https', 'oci', 'file'])"
            }
          ]
        },
        "verificationKey": {
          "type": "string"
        },
        "vmConfig": {
          "description": "Configuration for a Wasm VM.",
          "type": "object",
          "properties": {
            "env": {
              "description": "Specifies environment variables to be injected to this VM.",
              "type": "array",
              "maxItems": 256,
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable.",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                  },
                  "value": {
                    "description": "Value for the environment variable.",
                    "type": "string",
                    "maxLength": 2048
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value.\n\nValid Options: INLINE, HOST",
                    "type": "string",
                    "enum": [
                      "INLINE",
                      "HOST"
                    ]
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "message": "value may only be set when valueFrom is INLINE",
                    "rule": "(has(self.valueFrom) ? self.valueFrom : '') != 'HOST' || !has(self.value)"
                  }
                ]
              },
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "only one of targetRefs or selector can be set",
          "rule": "(has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1"
        }
      ]
    },
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "extensions.istio.io",
      "kind": "WasmPlugin",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}