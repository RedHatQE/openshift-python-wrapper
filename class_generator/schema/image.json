{
  "description": "Image governs policies related to imagestream imports and runtime configuration\nfor external registries. It allows cluster admins to configure which registries\nOpenShift is allowed to import images from, extra CA trust bundles for external\nregistries, and policies to block or allow registry hostnames.\nWhen exposing OpenShift's image registry to the public, this also lets cluster\nadmins specify the external hostname.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec holds user settable values for configuration",
      "type": "object",
      "properties": {
        "additionalTrustedCA": {
          "description": "additionalTrustedCA is a reference to a ConfigMap containing additional CAs that\nshould be trusted during imagestream import, pod image pull, build image pull, and\nimageregistry pullthrough.\nThe namespace for this config map is openshift-config.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "name is the metadata.name of the referenced config map",
              "type": "string"
            }
          }
        },
        "allowedRegistriesForImport": {
          "description": "allowedRegistriesForImport limits the container image registries that normal users may import\nimages from. Set this list to the registries that you trust to contain valid Docker\nimages and that you want applications to be able to import from. Users with\npermission to create Images or ImageStreamMappings via the API are not affected by\nthis policy - typically only administrators or system integrations will have those\npermissions.",
          "type": "array",
          "items": {
            "description": "RegistryLocation contains a location of the registry specified by the registry domain\nname. The domain name might include wildcards, like '*' or '??'.",
            "type": "object",
            "properties": {
              "domainName": {
                "description": "domainName specifies a domain name for the registry\nIn case the registry use non-standard (80 or 443) port, the port should be included\nin the domain name as well.",
                "type": "string"
              },
              "insecure": {
                "description": "insecure indicates whether the registry is secure (https) or insecure (http)\nBy default (if not specified) the registry is assumed as secure.",
                "type": "boolean"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "externalRegistryHostnames": {
          "description": "externalRegistryHostnames provides the hostnames for the default external image\nregistry. The external hostname should be set only when the image registry\nis exposed externally. The first value is used in 'publicDockerImageRepository'\nfield in ImageStreams. The value must be in \"hostname[:port]\" format.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "registrySources": {
          "description": "registrySources contains configuration that determines how the container runtime\nshould treat individual registries when accessing images for builds+pods. (e.g.\nwhether or not to allow insecure access).  It does not contain configuration for the\ninternal cluster registry.",
          "type": "object",
          "properties": {
            "allowedRegistries": {
              "description": "allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied.\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "blockedRegistries": {
              "description": "blockedRegistries cannot be used for image pull and push actions. All other registries are permitted.\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "containerRuntimeSearchRegistries": {
              "description": "containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified\ndomains in their pull specs. Registries will be searched in the order provided in the list.\nNote: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.",
              "type": "array",
              "format": "hostname",
              "minItems": 1,
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "insecureRegistries": {
              "description": "insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "atomic"
            }
          }
        }
      }
    },
    "status": {
      "description": "status holds observed values from the cluster. They may not be overridden.",
      "type": "object",
      "properties": {
        "externalRegistryHostnames": {
          "description": "externalRegistryHostnames provides the hostnames for the default external image\nregistry. The external hostname should be set only when the image registry\nis exposed externally. The first value is used in 'publicDockerImageRepository'\nfield in ImageStreams. The value must be in \"hostname[:port]\" format.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "internalRegistryHostname": {
          "description": "internalRegistryHostname sets the hostname for the default internal image\nregistry. The value must be in \"hostname[:port]\" format.\nThis value is set by the image registry operator which controls the internal registry\nhostname.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "config.openshift.io",
      "kind": "Image",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}