{
  "description": "ApiServerSource is an event source that brings Kubernetes API server events into Knative.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "required": [
        "resources"
      ],
      "x-kubernetes-preserve-unknown-fields": true
    },
    "status": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "auth": {
          "description": "Auth provides the relevant information for OIDC authentication.",
          "type": "object",
          "properties": {
            "serviceAccountName": {
              "description": "ServiceAccountName is the name of the generated service account used for this components OIDC authentication.",
              "type": "string"
            },
            "serviceAccountNames": {
              "description": "ServiceAccountNames is the list of names of the generated service accounts used for this components OIDC authentication.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "ceAttributes": {
          "description": "CloudEventAttributes are the specific attributes that the Source uses as part of its CloudEvents.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "source": {
                "description": "Source is the CloudEvents source attribute.",
                "type": "string"
              },
              "type": {
                "description": "Type refers to the CloudEvent type attribute.",
                "type": "string"
              }
            }
          }
        },
        "conditions": {
          "description": "Conditions the latest available observations of a resource's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "type",
              "status"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            }
          }
        },
        "namespaces": {
          "description": "Namespaces show the namespaces currently watched by the ApiServerSource",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.",
          "type": "integer",
          "format": "int64"
        },
        "sinkAudience": {
          "description": "Audience is the OIDC audience of the sink. This only needs to be set if the target is not an Addressable and thus the Audience can't be received from the Addressable itself. If the target is an Addressable and specifies an Audience, the target's Audience takes precedence.",
          "type": "string"
        },
        "sinkCACerts": {
          "description": "CACerts is the Certification Authority (CA) certificates in PEM format that the source trusts when sending events to the sink.",
          "type": "string"
        },
        "sinkUri": {
          "description": "SinkURI is the current active sink URI that has been configured for the Source.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "sources.knative.dev",
      "kind": "ApiServerSource",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}