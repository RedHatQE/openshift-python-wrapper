{
  "description": "NodeNetworkConfigurationPolicy is the Schema for the nodenetworkconfigurationpolicies API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "NodeNetworkConfigurationPolicySpec defines the desired state of NodeNetworkConfigurationPolicy",
      "type": "object",
      "properties": {
        "capture": {
          "description": "Capture contains expressions with an associated name than can be referenced\nat the DesiredState.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "desiredState": {
          "description": "The desired configuration of the policy",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "maxUnavailable": {
          "description": "MaxUnavailable specifies percentage or number\nof machines that can be updating at a time. Default is \"50%\".",
          "x-kubernetes-int-or-string": true
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which must be true for the policy to be applied to the node.\nSelector which must match a node's labels for the policy to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "status": {
      "description": "NodeNetworkConfigurationPolicyStatus defines the observed state of NodeNetworkConfigurationPolicy",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastHeartbeatTime": {
                "type": "string",
                "format": "date-time"
              },
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "lastUnavailableNodeCountUpdate": {
          "description": "LastUnavailableNodeCountUpdate is time of the last UnavailableNodeCount update",
          "type": "string",
          "format": "date-time"
        },
        "unavailableNodeCount": {
          "description": "UnavailableNodeCount represents the total number of potentially unavailable nodes that are\nprocessing a NodeNetworkConfigurationPolicy",
          "type": "integer"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "nmstate.io",
      "kind": "NodeNetworkConfigurationPolicy",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}