{
  "description": "A Function installs an OCI compatible Crossplane package, extending\nCrossplane with support for a new kind of composition function.\n\nRead the Crossplane documentation for\n[more information about Functions](https://docs.crossplane.io/latest/concepts/composition-functions).",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "FunctionSpec specifies the configuration of a Function.",
      "type": "object",
      "required": [
        "package"
      ],
      "properties": {
        "commonLabels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "controllerConfigRef": {
          "description": "ControllerConfigRef references a ControllerConfig resource that will be\nused to configure the packaged controller Deployment.\nDeprecated: Use RuntimeConfigReference instead.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the ControllerConfig.",
              "type": "string"
            }
          }
        },
        "ignoreCrossplaneConstraints": {
          "description": "IgnoreCrossplaneConstraints indicates to the package manager whether to\nhonor Crossplane version constrains specified by the package.\nDefault is false.",
          "type": "boolean"
        },
        "package": {
          "description": "Package is the name of the package that is being requested.",
          "type": "string"
        },
        "packagePullPolicy": {
          "description": "PackagePullPolicy defines the pull policy for the package.\nDefault is IfNotPresent.",
          "type": "string"
        },
        "packagePullSecrets": {
          "description": "PackagePullSecrets are named secrets in the same namespace that can be used\nto fetch packages from private registries.",
          "type": "array",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          }
        },
        "revisionActivationPolicy": {
          "description": "RevisionActivationPolicy specifies how the package controller should\nupdate from one revision to the next. Options are Automatic or Manual.\nDefault is Automatic.",
          "type": "string"
        },
        "revisionHistoryLimit": {
          "description": "RevisionHistoryLimit dictates how the package controller cleans up old\ninactive package revisions.\nDefaults to 1. Can be disabled by explicitly setting to 0.",
          "type": "integer",
          "format": "int64"
        },
        "runtimeConfigRef": {
          "description": "RuntimeConfigRef references a RuntimeConfig resource that will be used\nto configure the package runtime.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.",
              "type": "string"
            },
            "name": {
              "description": "Name of the RuntimeConfig.",
              "type": "string"
            }
          }
        },
        "skipDependencyResolution": {
          "description": "SkipDependencyResolution indicates to the package manager whether to skip\nresolving dependencies for a package. Setting this value to true may have\nunintended consequences.\nDefault is false.",
          "type": "boolean"
        }
      }
    },
    "status": {
      "description": "FunctionStatus represents the observed state of a Function.",
      "type": "object",
      "properties": {
        "appliedImageConfigRefs": {
          "description": "AppliedImageConfigRefs records any image configs that were applied in\nreconciling this package, and what they were used for.",
          "type": "array",
          "items": {
            "description": "ImageConfigRef is a reference to an image config that indicates how the\nreferenced image config was used by the package manager.",
            "type": "object",
            "required": [
              "name",
              "reason"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the image config.",
                "type": "string"
              },
              "reason": {
                "description": "Reason indicates what the image config was used for.",
                "type": "string"
              }
            }
          }
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "currentIdentifier": {
          "description": "CurrentIdentifier is the most recent package source that was used to\nproduce a revision. The package manager uses this field to determine\nwhether to check for package updates for a given source when\npackagePullPolicy is set to IfNotPresent. Manually removing this field\nwill cause the package manager to check that the current revision is\ncorrect for the given package source.",
          "type": "string"
        },
        "currentRevision": {
          "description": "CurrentRevision is the name of the current package revision. It will\nreflect the most up to date revision, whether it has been activated or\nnot.",
          "type": "string"
        },
        "resolvedPackage": {
          "description": "ResolvedPackage is the name of the package that was used for version\nresolution. It may be different from spec.package if the package path was\nrewritten using an image config.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "pkg.crossplane.io",
      "kind": "Function",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}