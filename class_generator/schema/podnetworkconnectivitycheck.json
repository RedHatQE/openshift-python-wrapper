{
  "description": "PodNetworkConnectivityCheck\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec defines the source and target of the connectivity check",
      "type": "object",
      "required": [
        "sourcePod",
        "targetEndpoint"
      ],
      "properties": {
        "sourcePod": {
          "description": "sourcePod names the pod from which the condition will be checked",
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
        },
        "targetEndpoint": {
          "description": "EndpointAddress to check. A TCP address of the form host:port. Note that\nif host is a DNS name, then the check would fail if the DNS name cannot\nbe resolved. Specify an IP address for host to bypass DNS name lookup.",
          "type": "string",
          "pattern": "^\\S+:\\d*$"
        },
        "tlsClientCert": {
          "description": "TLSClientCert, if specified, references a kubernetes.io/tls type secret with 'tls.crt' and\n'tls.key' entries containing an optional TLS client certificate and key to be used when\nchecking endpoints that require a client certificate in order to gracefully preform the\nscan without causing excessive logging in the endpoint process. The secret must exist in\nthe same namespace as this resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "name is the metadata.name of the referenced secret",
              "type": "string"
            }
          }
        }
      }
    },
    "status": {
      "description": "status contains the observed status of the connectivity check",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions summarize the status of the check",
          "type": "array",
          "items": {
            "description": "PodNetworkConnectivityCheckCondition represents the overall status of the pod network connectivity.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time"
              },
              "message": {
                "description": "message indicating details about last transition in a human readable format.",
                "type": "string"
              },
              "reason": {
                "description": "reason for the condition's last status transition in a machine readable format.",
                "type": "string"
              },
              "status": {
                "description": "status of the condition",
                "type": "string"
              },
              "type": {
                "description": "type of the condition",
                "type": "string"
              }
            }
          }
        },
        "failures": {
          "description": "failures contains logs of unsuccessful check actions",
          "type": "array",
          "items": {
            "description": "LogEntry records events",
            "type": "object",
            "required": [
              "success"
            ],
            "properties": {
              "latency": {
                "description": "latency records how long the action mentioned in the entry took."
              },
              "message": {
                "description": "message explaining status in a human readable format.",
                "type": "string"
              },
              "reason": {
                "description": "reason for status in a machine readable format.",
                "type": "string"
              },
              "success": {
                "description": "success indicates if the log entry indicates a success or failure.",
                "type": "boolean"
              },
              "time": {
                "description": "Start time of check action.",
                "format": "date-time"
              }
            }
          }
        },
        "outages": {
          "description": "outages contains logs of time periods of outages",
          "type": "array",
          "items": {
            "description": "OutageEntry records time period of an outage",
            "type": "object",
            "properties": {
              "end": {
                "description": "end of outage detected",
                "format": "date-time"
              },
              "endLogs": {
                "description": "endLogs contains log entries related to the end of this outage. Should contain the success\nentry that resolved the outage and possibly a few of the failure log entries that preceded it.",
                "type": "array",
                "items": {
                  "description": "LogEntry records events",
                  "type": "object",
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "latency": {
                      "description": "latency records how long the action mentioned in the entry took."
                    },
                    "message": {
                      "description": "message explaining status in a human readable format.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "reason for status in a machine readable format.",
                      "type": "string"
                    },
                    "success": {
                      "description": "success indicates if the log entry indicates a success or failure.",
                      "type": "boolean"
                    },
                    "time": {
                      "description": "Start time of check action.",
                      "format": "date-time"
                    }
                  }
                }
              },
              "message": {
                "description": "message summarizes outage details in a human readable format.",
                "type": "string"
              },
              "start": {
                "description": "start of outage detected",
                "format": "date-time"
              },
              "startLogs": {
                "description": "startLogs contains log entries related to the start of this outage. Should contain\nthe original failure, any entries where the failure mode changed.",
                "type": "array",
                "items": {
                  "description": "LogEntry records events",
                  "type": "object",
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "latency": {
                      "description": "latency records how long the action mentioned in the entry took."
                    },
                    "message": {
                      "description": "message explaining status in a human readable format.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "reason for status in a machine readable format.",
                      "type": "string"
                    },
                    "success": {
                      "description": "success indicates if the log entry indicates a success or failure.",
                      "type": "boolean"
                    },
                    "time": {
                      "description": "Start time of check action.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "successes": {
          "description": "successes contains logs successful check actions",
          "type": "array",
          "items": {
            "description": "LogEntry records events",
            "type": "object",
            "required": [
              "success"
            ],
            "properties": {
              "latency": {
                "description": "latency records how long the action mentioned in the entry took."
              },
              "message": {
                "description": "message explaining status in a human readable format.",
                "type": "string"
              },
              "reason": {
                "description": "reason for status in a machine readable format.",
                "type": "string"
              },
              "success": {
                "description": "success indicates if the log entry indicates a success or failure.",
                "type": "boolean"
              },
              "time": {
                "description": "Start time of check action.",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "controlplane.operator.openshift.io",
      "kind": "PodNetworkConnectivityCheck",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}