{
  "description": "RegisteredCluster represents the desired state and current status of registered cluster. The name is the cluster UID.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RegisteredClusterSpec defines the desired state of RegisteredCluster",
      "type": "object"
    },
    "status": {
      "description": "RegisteredClusterStatus defines the observed state of RegisteredCluster",
      "type": "object",
      "properties": {
        "allocatable": {
          "description": "Allocatable represents the total allocatable resources on the registered cluster.",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "x-kubernetes-int-or-string": true
          }
        },
        "apiURL": {
          "description": "ApiURL the URL of apiserver endpoint of the registered cluster.",
          "type": "string"
        },
        "capacity": {
          "description": "Capacity represents the total resource capacity from all nodeStatuses on the registered cluster.",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "x-kubernetes-int-or-string": true
          }
        },
        "clusterClaims": {
          "description": "ClusterClaims represents cluster information that a registered cluster claims, for example a unique cluster identifier (id.k8s.io) and kubernetes version (kubeversion.open-cluster-management.io). They are written from the registered cluster. The set of claims is not uniform across a fleet, some claims can be vendor or version specific and may not be included from all registered clusters.",
          "type": "array",
          "items": {
            "description": "ManagedClusterClaim represents a ClusterClaim collected from a managed cluster.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name is the name of a ClusterClaim resource on managed cluster. It's a well known or customized name to identify the claim.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "value": {
                "description": "Value is a claim-dependent string",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1
              }
            }
          }
        },
        "clusterID": {
          "description": "ClusterID uniquely identifies this registered cluster",
          "type": "string"
        },
        "clusterSecretRef": {
          "description": "ClusterSecretRef is a reference to the secret containing the registered cluster kubeconfig.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": "string"
            }
          }
        },
        "conditions": {
          "description": "Conditions contains the different condition statuses for this RegisteredCluster.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        },
        "importCommandRef": {
          "description": "ImportCommandRef is reference to configmap containing import command.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": "string"
            }
          }
        },
        "version": {
          "description": "Version represents the kubernetes version of the registered cluster.",
          "type": "object",
          "properties": {
            "kubernetes": {
              "description": "Kubernetes is the kubernetes version of managed cluster.",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "singapore.open-cluster-management.io",
      "kind": "RegisteredCluster",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}