{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": "object",
      "required": [
        "objectStorage"
      ],
      "properties": {
        "apiServer": {
          "description": "DS Pipelines API Server configuration.",
          "type": "object",
          "properties": {
            "applyTektonCustomResource": {
              "description": "Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "archiveLogs": {
              "description": "Default: false\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "argoDriverImage": {
              "description": "Driver image used during pipeline execution.",
              "type": "string"
            },
            "argoLauncherImage": {
              "description": "Launcher/Executor image used during pipeline execution.",
              "type": "string"
            },
            "artifactImage": {
              "description": "Deprecated: DSP V1 only, will be removed in the future.",
              "type": "string"
            },
            "artifactScriptConfigMap": {
              "description": "Deprecated: DSP V1 only, will be removed in the future.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "artifactSignedURLExpirySeconds": {
              "description": "The expiry time (seconds) for artifact download links when\nquerying the dsp server via /apis/v2beta1/artifacts/{id}?share_url=true\nDefault: 60",
              "type": "integer"
            },
            "autoUpdatePipelineDefaultVersion": {
              "description": "Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "cABundle": {
              "description": "If the Object store/DB is behind a TLS secured connection that is\nunrecognized by the host OpenShift/K8s cluster, then you can\nprovide a PEM formatted CA bundle to be injected into the DSP\nserver pod to trust this connection. CA Bundle should be provided\nas values within configmaps, mapped to keys.",
              "type": "object",
              "required": [
                "configMapKey",
                "configMapName"
              ],
              "properties": {
                "configMapKey": {
                  "description": "Key should map to a CA bundle. The key is also used to name\nthe CA bundle file (e.g. ca-bundle.crt)",
                  "type": "string"
                },
                "configMapName": {
                  "type": "string"
                }
              }
            },
            "caBundleFileMountPath": {
              "description": "This is the path where the ca bundle will be mounted in the\npipeline server and user executor pods",
              "type": "string"
            },
            "caBundleFileName": {
              "description": "This is the filename of the ca bundle that will be created in the\npipeline server and user executor pods",
              "type": "string"
            },
            "cacheImage": {
              "description": "Deprecated: DSP V1 only, will be removed in the future.",
              "type": "string"
            },
            "collectMetrics": {
              "description": "Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "customKfpLauncherConfigMap": {
              "description": "When specified, the `data` contents of the `kfp-launcher` ConfigMap that DSPO writes\nwill be fully replaced with the `data` contents of the ConfigMap specified here.\nThis allows the user to fully replace the `data` contents of the kfp-launcher ConfigMap.\nThe `kfp-launcher` component requires a ConfigMap to exist in the namespace\nwhere it runs (i.e. the namespace where pipelines run). This ConfigMap contains\nobject storage configuration, as well as pipeline root (object store root path\nwhere artifacts will be uploaded) configuration. Currently this ConfigMap *must*\nbe named \"kfp-launcher\". We currently deploy a default copy of the kfp-launcher\nConfigMap via DSPO, but a user may want to provide their own ConfigMap configuration,\nso that they can specify multiple object storage sources and paths.",
              "type": "string"
            },
            "customServerConfigMap": {
              "description": "CustomServerConfig is a custom config file that you can provide\nfor the api server to use instead.",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "dbConfigConMaxLifetimeSec": {
              "description": "Default: 120\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "integer"
            },
            "deploy": {
              "description": "Enable DS Pipelines Operator management of DSP API Server. Setting Deploy to false disables operator reconciliation. Default: true",
              "type": "boolean"
            },
            "enableOauth": {
              "description": "Create an Openshift Route for this DSP API Server. Default: true",
              "type": "boolean"
            },
            "enableSamplePipeline": {
              "description": "Include the Iris sample pipeline with the deployment of this DSP API Server. Default: true",
              "type": "boolean"
            },
            "image": {
              "description": "Specify a custom image for DSP API Server.",
              "type": "string"
            },
            "initResources": {
              "description": "Specify init container resource requirements. The init container\nis used to build managed-pipelines and store them in a shared volume.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            },
            "injectDefaultScript": {
              "description": "Inject the archive step script. Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "managedPipelines": {
              "description": "Enable various managed pipelines on this DSP API server.",
              "type": "object",
              "properties": {
                "instructLab": {
                  "description": "Configures whether to automatically import the InstructLab pipeline.\nYou must enable the trainingoperator component to run the InstructLab pipeline.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Set to one of the following values:\n\n- \"Managed\" : This pipeline is automatically imported.\n- \"Removed\" : This pipeline is not automatically imported. If previously set to \"Managed\", setting to \"Removed\" does not remove existing managed pipelines but does prevent future updates from being imported.\t//",
                      "type": "string",
                      "pattern": "^(Managed|Removed)$",
                      "enum": [
                        "Managed",
                        "Removed"
                      ]
                    }
                  }
                }
              }
            },
            "moveResultsImage": {
              "description": "Image used for internal artifact passing handling within Tekton taskruns. This field specifies the image used in the 'move-all-results-to-tekton-home' step.\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "string"
            },
            "resources": {
              "description": "Specify custom Pod resource requirements for this component.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            },
            "rhelAIImage": {
              "description": "RhelAI image used for ilab tasks in managed pipelines.",
              "type": "string"
            },
            "runtimeGenericImage": {
              "description": "Generic runtime image used for building managed pipelines during\napi server init, and for basic runtime operations.",
              "type": "string"
            },
            "stripEOF": {
              "description": "Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            },
            "terminateStatus": {
              "description": "Default: \"Cancelled\" - Allowed Values: \"Cancelled\", \"StoppedRunFinally\", \"CancelledRunFinally\"\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "string",
              "enum": [
                "Cancelled",
                "StoppedRunFinally",
                "CancelledRunFinally"
              ]
            },
            "toolboxImage": {
              "description": "Toolbox image used for basic container spec runtime operations\nin managed pipelines.",
              "type": "string"
            },
            "trackArtifacts": {
              "description": "Default: true\nDeprecated: DSP V1 only, will be removed in the future.",
              "type": "boolean"
            }
          }
        },
        "database": {
          "description": "Database specifies database configurations, used for DS Pipelines metadata tracking. Specify either the default MariaDB deployment, or configure your own External SQL DB.",
          "type": "object",
          "properties": {
            "customExtraParams": {
              "description": "CustomExtraParams allow users to further customize the sql dsn parameters used by the Pipeline Server\nwhen opening a connection with the Database.\nref: https://github.com/go-sql-driver/mysql?tab=readme-ov-file#dsn-data-source-name\n\nValue must be a JSON string. For example, to disable tls for Pipeline Server DB connection\nthe user can provide a string: {\"tls\":\"true\"}\n\nIf updating post DSPA deployment, then a manual restart of the pipeline server pod will be required\nso the new configmap may be consumed.",
              "type": "string"
            },
            "disableHealthCheck": {
              "description": "Default: false",
              "type": "boolean"
            },
            "externalDB": {
              "type": "object",
              "required": [
                "host",
                "passwordSecret",
                "pipelineDBName",
                "port",
                "username"
              ],
              "properties": {
                "host": {
                  "type": "string"
                },
                "passwordSecret": {
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "pipelineDBName": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            },
            "mariaDB": {
              "type": "object",
              "properties": {
                "deploy": {
                  "description": "Enable DS Pipelines Operator management of MariaDB. Setting Deploy to false disables operator reconciliation. Default: true",
                  "type": "boolean"
                },
                "image": {
                  "description": "Specify a custom image for DSP MariaDB pod.",
                  "type": "string"
                },
                "passwordSecret": {
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "pipelineDBName": {
                  "description": "The database name that will be created. Should match `^[a-zA-Z0-9_]+`. // Default: mlpipeline",
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$"
                },
                "pvcSize": {
                  "description": "Customize the size of the PVC created for the default MariaDB instance. Default: 10Gi",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                },
                "resources": {
                  "description": "Specify custom Pod resource requirements for this component.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                },
                "storageClassName": {
                  "description": "Volume Mode Filesystem storageClass to use for PVC creation",
                  "type": "string"
                },
                "username": {
                  "description": "The MariadB username that will be created. Should match `^[a-zA-Z0-9_]+`. Default: mlpipeline",
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$"
                }
              }
            }
          }
        },
        "dspVersion": {
          "type": "string"
        },
        "mlmd": {
          "type": "object",
          "properties": {
            "deploy": {
              "description": "Enable DS Pipelines Operator management of MLMD. Setting Deploy to false disables operator reconciliation. Default: true",
              "type": "boolean"
            },
            "envoy": {
              "type": "object",
              "properties": {
                "deployRoute": {
                  "type": "boolean"
                },
                "image": {
                  "type": "string"
                },
                "resources": {
                  "description": "ResourceRequirements structures compute resource requirements.\nReplaces ResourceRequirements from corev1 which also includes optional storage field.\nWe handle storage field separately, and should not include it as a subfield for Resources.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "grpc": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "resources": {
                  "description": "ResourceRequirements structures compute resource requirements.\nReplaces ResourceRequirements from corev1 which also includes optional storage field.\nWe handle storage field separately, and should not include it as a subfield for Resources.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "writer": {
              "description": "Deprecated: DSP V1 only, will be removed in the future.",
              "type": "object",
              "required": [
                "image"
              ],
              "properties": {
                "image": {
                  "type": "string"
                },
                "resources": {
                  "description": "ResourceRequirements structures compute resource requirements.\nReplaces ResourceRequirements from corev1 which also includes optional storage field.\nWe handle storage field separately, and should not include it as a subfield for Resources.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "mlpipelineUI": {
          "description": "Deploy the KFP UI with DS Pipelines UI. This feature is unsupported, and primarily used for exploration, testing, and development purposes.",
          "type": "object",
          "required": [
            "image"
          ],
          "properties": {
            "configMap": {
              "type": "string"
            },
            "deploy": {
              "description": "Enable DS Pipelines Operator management of KFP UI. Setting Deploy to false disables operator reconciliation. Default: true",
              "type": "boolean"
            },
            "image": {
              "description": "Specify a custom image for KFP UI pod.",
              "type": "string"
            },
            "resources": {
              "description": "Specify custom Pod resource requirements for this component.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            }
          }
        },
        "objectStorage": {
          "description": "ObjectStorage specifies Object Store configurations, used for DS Pipelines artifact passing and storage. Specify either the your own External Storage (e.g. AWS S3), or use the default Minio deployment (unsupported, primarily for development, and testing) .",
          "type": "object",
          "properties": {
            "disableHealthCheck": {
              "description": "Default: false",
              "type": "boolean"
            },
            "enableExternalRoute": {
              "description": "Enable an external route so the object storage is reachable from outside the cluster. Default: false",
              "type": "boolean"
            },
            "externalStorage": {
              "type": "object",
              "required": [
                "bucket",
                "host",
                "s3CredentialsSecret",
                "scheme"
              ],
              "properties": {
                "basePath": {
                  "description": "Subpath where objects should be stored for this DSPA",
                  "type": "string"
                },
                "bucket": {
                  "type": "string"
                },
                "host": {
                  "type": "string"
                },
                "port": {
                  "type": "string"
                },
                "region": {
                  "type": "string"
                },
                "s3CredentialsSecret": {
                  "type": "object",
                  "required": [
                    "accessKey",
                    "secretKey",
                    "secretName"
                  ],
                  "properties": {
                    "accessKey": {
                      "description": "The \"Keys\" in the k8sSecret key/value pairs. Not to be confused with the values.",
                      "type": "string"
                    },
                    "secretKey": {
                      "type": "string"
                    },
                    "secretName": {
                      "description": "The name of the Secret where the AccessKey and SecretKey are defined.",
                      "type": "string"
                    }
                  }
                },
                "scheme": {
                  "type": "string"
                },
                "secure": {
                  "type": "boolean"
                }
              }
            },
            "minio": {
              "description": "Enable DS Pipelines Operator management of Minio. Setting Deploy to false disables operator reconciliation.",
              "type": "object",
              "required": [
                "image"
              ],
              "properties": {
                "bucket": {
                  "description": "Provide the Bucket name that will be used to store artifacts in S3. If provided bucket does not exist, DSP Apiserver will attempt to create it. As such the credentials provided should have sufficient permissions to do create buckets. Default: mlpipeline",
                  "type": "string"
                },
                "deploy": {
                  "description": "Enable DS Pipelines Operator management of Minio. Setting Deploy to false disables operator reconciliation. Default: true",
                  "type": "boolean"
                },
                "image": {
                  "description": "Specify a custom image for Minio pod.",
                  "type": "string"
                },
                "pvcSize": {
                  "description": "Customize the size of the PVC created for the Minio instance. Default: 10Gi",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                },
                "resources": {
                  "description": "Specify custom Pod resource requirements for this component.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "requests": {
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "memory": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                },
                "s3CredentialsSecret": {
                  "description": "Credentials for the S3 user (e.g. IAM user cred stored in a k8s secret.). Note that the S3 user should have the permissions to create a bucket if the provided bucket does not exist.",
                  "type": "object",
                  "required": [
                    "accessKey",
                    "secretKey",
                    "secretName"
                  ],
                  "properties": {
                    "accessKey": {
                      "description": "The \"Keys\" in the k8sSecret key/value pairs. Not to be confused with the values.",
                      "type": "string"
                    },
                    "secretKey": {
                      "type": "string"
                    },
                    "secretName": {
                      "description": "The name of the Secret where the AccessKey and SecretKey are defined.",
                      "type": "string"
                    }
                  }
                },
                "storageClassName": {
                  "description": "Volume Mode Filesystem storageClass to use for PVC creation",
                  "type": "string"
                }
              }
            }
          }
        },
        "persistenceAgent": {
          "description": "DS Pipelines PersistenceAgent configuration.",
          "type": "object",
          "properties": {
            "deploy": {
              "description": "Enable DS Pipelines Operator management of Persisence Agent. Setting Deploy to false disables operator reconciliation. Default: true",
              "type": "boolean"
            },
            "image": {
              "description": "Specify a custom image for DSP PersistenceAgent.",
              "type": "string"
            },
            "numWorkers": {
              "description": "Number of worker for Persistence Agent sync job. Default: 2",
              "type": "integer"
            },
            "resources": {
              "description": "Specify custom Pod resource requirements for this component.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            }
          }
        },
        "podToPodTLS": {
          "description": "PodToPodTLS Set to \"true\" or \"false\" to enable or disable TLS communication between DSPA components (pods). Defaults to \"true\" to enable TLS between all pods. Only supported in DSP V2 on OpenShift.",
          "type": "boolean"
        },
        "scheduledWorkflow": {
          "description": "DS Pipelines Scheduled Workflow configuration.",
          "type": "object",
          "properties": {
            "cronScheduleTimezone": {
              "description": "Specify the Cron timezone used for ScheduledWorkflow PipelineRuns. Default: UTC",
              "type": "string"
            },
            "deploy": {
              "description": "Enable DS Pipelines Operator management of ScheduledWorkflow. Setting Deploy to false disables operator reconciliation. Default: true",
              "type": "boolean"
            },
            "image": {
              "description": "Specify a custom image for DSP ScheduledWorkflow controller.",
              "type": "string"
            },
            "resources": {
              "description": "Specify custom Pod resource requirements for this component.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            }
          }
        },
        "workflowController": {
          "description": "WorkflowController is an argo-specific component that manages a DSPA's Workflow objects and handles the orchestration of them with the central Argo server",
          "type": "object",
          "properties": {
            "argoExecImage": {
              "type": "string"
            },
            "customConfig": {
              "type": "string"
            },
            "deploy": {
              "type": "boolean"
            },
            "image": {
              "type": "string"
            },
            "resources": {
              "description": "Specify custom Pod resource requirements for this component.",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "memory": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "type": "object",
      "properties": {
        "components": {
          "type": "object",
          "properties": {
            "apiServer": {
              "type": "object",
              "properties": {
                "externalUrl": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "mlmdProxy": {
              "type": "object",
              "properties": {
                "externalUrl": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "datasciencepipelinesapplications.opendatahub.io",
      "kind": "DataSciencePipelinesApplication",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}