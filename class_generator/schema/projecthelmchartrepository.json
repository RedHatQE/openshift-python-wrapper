{
  "description": "ProjectHelmChartRepository holds namespace-wide configuration for proxied Helm chart repository\n\nCompatibility level 2: Stable within a major release for a minimum of 9 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec holds user settable values for configuration",
      "type": "object",
      "properties": {
        "connectionConfig": {
          "description": "Required configuration for connecting to the chart repo",
          "type": "object",
          "properties": {
            "basicAuthConfig": {
              "description": "basicAuthConfig is an optional reference to a secret by name that contains\nthe basic authentication credentials to present when connecting to the server.\nThe key \"username\" is used locate the username.\nThe key \"password\" is used to locate the password.\nThe namespace for this secret must be same as the namespace where the project helm chart repository is getting instantiated.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced secret",
                  "type": "string"
                }
              }
            },
            "ca": {
              "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca-bundle.crt\" is used to locate the data.\nIf empty, the default system roots are used.\nThe namespace for this configmap must be same as the namespace where the project helm chart repository is getting instantiated.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced config map",
                  "type": "string"
                }
              }
            },
            "tlsClientConfig": {
              "description": "tlsClientConfig is an optional reference to a secret by name that contains the\nPEM-encoded TLS client certificate and private key to present when connecting to the server.\nThe key \"tls.crt\" is used to locate the client certificate.\nThe key \"tls.key\" is used to locate the private key.\nThe namespace for this secret must be same as the namespace where the project helm chart repository is getting instantiated.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "name is the metadata.name of the referenced secret",
                  "type": "string"
                }
              }
            },
            "url": {
              "description": "Chart repository URL",
              "type": "string",
              "maxLength": 2048,
              "pattern": "^https?:\\/\\/"
            }
          }
        },
        "description": {
          "description": "Optional human readable repository description, it can be used by UI for displaying purposes",
          "type": "string",
          "maxLength": 2048,
          "minLength": 1
        },
        "disabled": {
          "description": "If set to true, disable the repo usage in the namespace",
          "type": "boolean"
        },
        "name": {
          "description": "Optional associated human readable repository name, it can be used by UI for displaying purposes",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "status": {
      "description": "Observed status of the repository within the namespace..",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions is a list of conditions and their statuses",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "helm.openshift.io",
      "kind": "ProjectHelmChartRepository",
      "version": "v1beta1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}