{
  "description": "ResourceFlavor is the Schema for the resourceflavors API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ResourceFlavorSpec defines the desired state of the ResourceFlavor",
      "type": "object",
      "properties": {
        "nodeLabels": {
          "description": "nodeLabels are labels that associate the ResourceFlavor with Nodes that\nhave the same labels.\nWhen a Workload is admitted, its podsets can only get assigned\nResourceFlavors whose nodeLabels match the nodeSelector and nodeAffinity\nfields.\nOnce a ResourceFlavor is assigned to a podSet, the ResourceFlavor's\nnodeLabels should be injected into the pods of the Workload by the\ncontroller that integrates with the Workload object.\n\n\nnodeLabels can be up to 8 elements.",
          "type": "object",
          "maxProperties": 8,
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-map-type": "atomic"
        },
        "nodeTaints": {
          "description": "nodeTaints are taints that the nodes associated with this ResourceFlavor\nhave.\nWorkloads' podsets must have tolerations for these nodeTaints in order to\nget assigned this ResourceFlavor during admission.\n\n\nAn example of a nodeTaint is\ncloud.provider.com/preemptible=\"true\":NoSchedule\n\n\nnodeTaints can be up to 8 elements.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
            "type": "object",
            "required": [
              "effect",
              "key"
            ],
            "properties": {
              "effect": {
                "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Required. The taint key to be applied to a node.",
                "type": "string"
              },
              "timeAdded": {
                "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.",
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "description": "The taint value corresponding to the taint key.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic",
          "x-kubernetes-validations": [
            {
              "message": "supported taint effect values: 'NoSchedule', 'PreferNoSchedule', 'NoExecute'",
              "rule": "self.all(x, x.effect in ['NoSchedule', 'PreferNoSchedule', 'NoExecute'])"
            }
          ]
        },
        "tolerations": {
          "description": "tolerations are extra tolerations that will be added to the pods admitted in\nthe quota associated with this resource flavor.\n\n\nAn example of a toleration is\ncloud.provider.com/preemptible=\"true\":NoSchedule\n\n\ntolerations can be up to 8 elements.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic",
          "x-kubernetes-validations": [
            {
              "message": "operator must be Exists when 'key' is empty, which means 'match all values and all keys'",
              "rule": "self.all(x, !has(x.key) ? x.operator == 'Exists' : true)"
            },
            {
              "message": "effect must be 'NoExecute' when 'tolerationSeconds' is set",
              "rule": "self.all(x, has(x.tolerationSeconds) ? x.effect == 'NoExecute' : true)"
            },
            {
              "message": "supported toleration values: 'Equal'(default), 'Exists'",
              "rule": "self.all(x, !has(x.operator) || x.operator in ['Equal', 'Exists'])"
            },
            {
              "message": "a value must be empty when 'operator' is 'Exists'",
              "rule": "self.all(x, has(x.operator) && x.operator == 'Exists' ? !has(x.value) : true)"
            },
            {
              "message": "supported taint effect values: 'NoSchedule', 'PreferNoSchedule', 'NoExecute'",
              "rule": "self.all(x, !has(x.effect) || x.effect in ['NoSchedule', 'PreferNoSchedule', 'NoExecute'])"
            }
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kueue.x-k8s.io",
      "kind": "ResourceFlavor",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}