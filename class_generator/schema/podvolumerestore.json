{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "PodVolumeRestoreSpec is the specification for a PodVolumeRestore.",
      "type": "object",
      "required": [
        "backupStorageLocation",
        "pod",
        "repoIdentifier",
        "snapshotID",
        "sourceNamespace",
        "volume"
      ],
      "properties": {
        "backupStorageLocation": {
          "description": "BackupStorageLocation is the name of the backup storage location\nwhere the backup repository is stored.",
          "type": "string"
        },
        "pod": {
          "description": "Pod is a reference to the pod containing the volume to be restored.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "repoIdentifier": {
          "description": "RepoIdentifier is the backup repository identifier.",
          "type": "string"
        },
        "snapshotID": {
          "description": "SnapshotID is the ID of the volume snapshot to be restored.",
          "type": "string"
        },
        "sourceNamespace": {
          "description": "SourceNamespace is the original namespace for namaspace mapping.",
          "type": "string"
        },
        "uploaderSettings": {
          "description": "UploaderSettings are a map of key-value pairs that should be applied to the\nuploader configuration.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uploaderType": {
          "description": "UploaderType is the type of the uploader to handle the data transfer.",
          "type": "string",
          "enum": [
            "kopia",
            "restic",
            ""
          ]
        },
        "volume": {
          "description": "Volume is the name of the volume within the Pod to be restored.",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "PodVolumeRestoreStatus is the current status of a PodVolumeRestore.",
      "type": "object",
      "properties": {
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time a restore was completed.\nCompletion time is recorded even on failed restores.\nThe server's time is used for CompletionTimestamps",
          "format": "date-time"
        },
        "message": {
          "description": "Message is a message about the pod volume restore's status.",
          "type": "string"
        },
        "phase": {
          "description": "Phase is the current state of the PodVolumeRestore.",
          "type": "string",
          "enum": [
            "New",
            "InProgress",
            "Completed",
            "Failed"
          ]
        },
        "progress": {
          "description": "Progress holds the total number of bytes of the snapshot and the current\nnumber of restored bytes. This can be used to display progress information\nabout the restore operation.",
          "type": "object",
          "properties": {
            "bytesDone": {
              "type": "integer",
              "format": "int64"
            },
            "totalBytes": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "startTimestamp": {
          "description": "StartTimestamp records the time a restore was started.\nThe server's time is used for StartTimestamps",
          "format": "date-time"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "PodVolumeRestore",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}