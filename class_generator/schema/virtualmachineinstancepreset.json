{
  "description": "Deprecated for removal in v2, please use VirtualMachineInstanceType and VirtualMachinePreference instead.\n\n\nVirtualMachineInstancePreset defines a VMI spec.domain to be applied to all VMIs that match the provided label selector\nMore info: https://kubevirt.io/user-guide/virtual_machines/presets/#overrides",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
      "type": "object",
      "required": [
        "selector"
      ],
      "properties": {
        "domain": {
          "description": "Domain is the same object type as contained in VirtualMachineInstanceSpec",
          "type": "object",
          "required": [
            "devices"
          ],
          "properties": {
            "chassis": {
              "description": "Chassis specifies the chassis info passed to the domain.",
              "type": "object",
              "properties": {
                "asset": {
                  "type": "string"
                },
                "manufacturer": {
                  "type": "string"
                },
                "serial": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              }
            },
            "clock": {
              "description": "Clock sets the clock and timers of the vmi.",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "cpu": {
              "description": "CPU allow specified the detailed CPU topology inside the vmi.",
              "type": "object",
              "properties": {
                "cores": {
                  "description": "Cores specifies the number of cores inside the vmi.\nMust be a value greater or equal 1.",
                  "type": "integer",
                  "format": "int32"
                },
                "dedicatedCpuPlacement": {
                  "description": "DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node\nwith enough dedicated pCPUs and pin the vCPUs to it.",
                  "type": "boolean"
                },
                "features": {
                  "description": "Features specifies the CPU features list inside the VMI.",
                  "type": "array",
                  "items": {
                    "description": "CPUFeature allows specifying a CPU feature.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the CPU feature",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policy is the CPU feature attribute which can have the following attributes:\nforce    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU.\nrequire  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it.\noptional - The feature will be supported by virtual CPU if and only if it is supported by host CPU.\ndisable  - The feature will not be supported by virtual CPU.\nforbid   - Guest creation will fail if the feature is supported by host CPU.\nDefaults to require",
                        "type": "string"
                      }
                    }
                  }
                },
                "isolateEmulatorThread": {
                  "description": "IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place\nthe emulator thread on it.",
                  "type": "boolean"
                },
                "maxSockets": {
                  "description": "MaxSockets specifies the maximum amount of sockets that can\nbe hotplugged",
                  "type": "integer",
                  "format": "int32"
                },
                "model": {
                  "description": "Model specifies the CPU model inside the VMI.\nList of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.\nIt is possible to specify special cases like \"host-passthrough\" to get the same CPU as the node\nand \"host-model\" to get CPU closest to the node one.\nDefaults to host-model.",
                  "type": "string"
                },
                "numa": {
                  "description": "NUMA allows specifying settings for the guest NUMA topology",
                  "type": "object",
                  "properties": {
                    "guestMappingPassthrough": {
                      "description": "GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod.\nThe created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.",
                      "type": "object"
                    }
                  }
                },
                "realtime": {
                  "description": "Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads",
                  "type": "object",
                  "properties": {
                    "mask": {
                      "description": "Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions.\nExample: \"0-3,^1\",\"0,2,3\",\"2-3\"",
                      "type": "string"
                    }
                  }
                },
                "sockets": {
                  "description": "Sockets specifies the number of sockets inside the vmi.\nMust be a value greater or equal 1.",
                  "type": "integer",
                  "format": "int32"
                },
                "threads": {
                  "description": "Threads specifies the number of threads inside the vmi.\nMust be a value greater or equal 1.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "devices": {
              "description": "Devices allows adding disks, network interfaces, and others",
              "type": "object",
              "properties": {
                "autoattachGraphicsDevice": {
                  "description": "Whether to attach the default graphics device or not.\nVNC will not be available if set to false. Defaults to true.",
                  "type": "boolean"
                },
                "autoattachInputDevice": {
                  "description": "Whether to attach an Input Device.\nDefaults to false.",
                  "type": "boolean"
                },
                "autoattachMemBalloon": {
                  "description": "Whether to attach the Memory balloon device with default period.\nPeriod can be adjusted in virt-config.\nDefaults to true.",
                  "type": "boolean"
                },
                "autoattachPodInterface": {
                  "description": "Whether to attach a pod network interface. Defaults to true.",
                  "type": "boolean"
                },
                "autoattachSerialConsole": {
                  "description": "Whether to attach the default virtio-serial console or not.\nSerial console access will not be available if set to false. Defaults to true.",
                  "type": "boolean"
                },
                "autoattachVSOCK": {
                  "description": "Whether to attach the VSOCK CID to the VM or not.\nVSOCK access will be available if set to true. Defaults to false.",
                  "type": "boolean"
                },
                "blockMultiQueue": {
                  "description": "Whether or not to enable virtio multi-queue for block devices.\nDefaults to false.",
                  "type": "boolean"
                },
                "clientPassthrough": {
                  "description": "To configure and access client devices such as redirecting USB",
                  "type": "object"
                },
                "disableHotplug": {
                  "description": "DisableHotplug disabled the ability to hotplug disks.",
                  "type": "boolean"
                },
                "disks": {
                  "description": "Disks describes disks, cdroms and luns which are connected to the vmi.",
                  "type": "array",
                  "maxItems": 256,
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "blockSize": {
                        "description": "If specified, the virtual disk will be presented with the given block sizes.",
                        "type": "object",
                        "properties": {
                          "custom": {
                            "description": "CustomBlockSize represents the desired logical and physical block size for a VM disk.",
                            "type": "object",
                            "required": [
                              "logical",
                              "physical"
                            ],
                            "properties": {
                              "logical": {
                                "type": "integer"
                              },
                              "physical": {
                                "type": "integer"
                              }
                            }
                          },
                          "matchVolume": {
                            "description": "Represents if a feature is enabled or disabled.",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "bootOrder": {
                        "description": "BootOrder is an integer value > 0, used to determine ordering of boot devices.\nLower values take precedence.\nEach disk or interface that has a boot order must have a unique value.\nDisks without a boot order are not tried if a disk with a boot order exists.",
                        "type": "integer"
                      },
                      "cache": {
                        "description": "Cache specifies which kvm disk cache mode should be used.\nSupported values are: CacheNone, CacheWriteThrough.",
                        "type": "string"
                      },
                      "cdrom": {
                        "description": "Attach a volume as a cdrom to the vmi.",
                        "type": "object",
                        "properties": {
                          "bus": {
                            "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi.",
                            "type": "string"
                          },
                          "readonly": {
                            "description": "ReadOnly.\nDefaults to true.",
                            "type": "boolean"
                          },
                          "tray": {
                            "description": "Tray indicates if the tray of the device is open or closed.\nAllowed values are \"open\" and \"closed\".\nDefaults to closed.",
                            "type": "string"
                          }
                        }
                      },
                      "dedicatedIOThread": {
                        "description": "dedicatedIOThread indicates this disk should have an exclusive IO Thread.\nEnabling this implies useIOThreads = true.\nDefaults to false.",
                        "type": "boolean"
                      },
                      "disk": {
                        "description": "Attach a volume as a disk to the vmi.",
                        "type": "object",
                        "properties": {
                          "bus": {
                            "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi, usb.",
                            "type": "string"
                          },
                          "pciAddress": {
                            "description": "If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
                            "type": "string"
                          },
                          "readonly": {
                            "description": "ReadOnly.\nDefaults to false.",
                            "type": "boolean"
                          }
                        }
                      },
                      "errorPolicy": {
                        "description": "If specified, it can change the default error policy (stop) for the disk",
                        "type": "string"
                      },
                      "io": {
                        "description": "IO specifies which QEMU disk IO mode should be used.\nSupported values are: native, default, threads.",
                        "type": "string"
                      },
                      "lun": {
                        "description": "Attach a volume as a LUN to the vmi.",
                        "type": "object",
                        "properties": {
                          "bus": {
                            "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi.",
                            "type": "string"
                          },
                          "readonly": {
                            "description": "ReadOnly.\nDefaults to false.",
                            "type": "boolean"
                          },
                          "reservation": {
                            "description": "Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk",
                            "type": "boolean"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the device name",
                        "type": "string"
                      },
                      "serial": {
                        "description": "Serial provides the ability to specify a serial number for the disk device.",
                        "type": "string"
                      },
                      "shareable": {
                        "description": "If specified the disk is made sharable and multiple write from different VMs are permitted",
                        "type": "boolean"
                      },
                      "tag": {
                        "description": "If specified, disk address and its tag will be provided to the guest via config drive metadata",
                        "type": "string"
                      }
                    }
                  }
                },
                "downwardMetrics": {
                  "description": "DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.",
                  "type": "object"
                },
                "filesystems": {
                  "description": "Filesystems describes filesystem which is connected to the vmi.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "virtiofs"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the device name",
                        "type": "string"
                      },
                      "virtiofs": {
                        "description": "Virtiofs is supported",
                        "type": "object"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "gpus": {
                  "description": "Whether to attach a GPU device to the vmi.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deviceName",
                      "name"
                    ],
                    "properties": {
                      "deviceName": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the GPU device as exposed by a device plugin",
                        "type": "string"
                      },
                      "tag": {
                        "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                        "type": "string"
                      },
                      "virtualGPUOptions": {
                        "type": "object",
                        "properties": {
                          "display": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest.\nDefaults to true.",
                                "type": "boolean"
                              },
                              "ramFB": {
                                "description": "Enables a boot framebuffer, until the guest OS loads a real GPU driver\nDefaults to true.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "hostDevices": {
                  "description": "Whether to attach a host device to the vmi.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deviceName",
                      "name"
                    ],
                    "properties": {
                      "deviceName": {
                        "description": "DeviceName is the resource name of the host device exposed by a device plugin",
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "tag": {
                        "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "inputs": {
                  "description": "Inputs describe input devices",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "type"
                    ],
                    "properties": {
                      "bus": {
                        "description": "Bus indicates the bus of input device to emulate.\nSupported values: virtio, usb.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the device name",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type indicated the type of input device.\nSupported values: tablet.",
                        "type": "string"
                      }
                    }
                  }
                },
                "interfaces": {
                  "description": "Interfaces describe network interfaces which are added to the vmi.",
                  "type": "array",
                  "maxItems": 256,
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "acpiIndex": {
                        "description": "If specified, the ACPI index is used to provide network interface device naming, that is stable across changes\nin PCI addresses assigned to the device.\nThis value is required to be unique across all devices and be between 1 and (16*1024-1).",
                        "type": "integer"
                      },
                      "binding": {
                        "description": "Binding specifies the binding plugin that will be used to connect the interface to the guest.\nIt provides an alternative to InterfaceBindingMethod.\nversion: 1alphav1",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name references to the binding name as denined in the kubevirt CR.\nversion: 1alphav1",
                            "type": "string"
                          }
                        }
                      },
                      "bootOrder": {
                        "description": "BootOrder is an integer value > 0, used to determine ordering of boot devices.\nLower values take precedence.\nEach interface or disk that has a boot order must have a unique value.\nInterfaces without a boot order are not tried.",
                        "type": "integer"
                      },
                      "bridge": {
                        "description": "InterfaceBridge connects to a given network via a linux bridge.",
                        "type": "object"
                      },
                      "dhcpOptions": {
                        "description": "If specified the network interface will pass additional DHCP options to the VMI",
                        "type": "object",
                        "properties": {
                          "bootFileName": {
                            "description": "If specified will pass option 67 to interface's DHCP server",
                            "type": "string"
                          },
                          "ntpServers": {
                            "description": "If specified will pass the configured NTP server to the VM via DHCP option 042.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "privateOptions": {
                            "description": "If specified will pass extra DHCP options for private use, range: 224-254",
                            "type": "array",
                            "items": {
                              "description": "DHCPExtraOptions defines Extra DHCP options for a VM.",
                              "type": "object",
                              "required": [
                                "option",
                                "value"
                              ],
                              "properties": {
                                "option": {
                                  "description": "Option is an Integer value from 224-254\nRequired.",
                                  "type": "integer"
                                },
                                "value": {
                                  "description": "Value is a String value for the Option provided\nRequired.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tftpServerName": {
                            "description": "If specified will pass option 66 to interface's DHCP server",
                            "type": "string"
                          }
                        }
                      },
                      "macAddress": {
                        "description": "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.",
                        "type": "string"
                      },
                      "macvtap": {
                        "description": "DeprecatedMacvtap is an alias to the deprecated Macvtap interface,\nplease refer to Kubevirt user guide for alternatives.\nDeprecated: Removed in v1.3",
                        "type": "object"
                      },
                      "masquerade": {
                        "description": "InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.",
                        "type": "object"
                      },
                      "model": {
                        "description": "Interface model.\nOne of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio.\nDefaults to virtio.\nTODO:(ihar) switch to enums once opengen-api supports them. See: https://github.com/kubernetes/kube-openapi/issues/51",
                        "type": "string"
                      },
                      "name": {
                        "description": "Logical name of the interface as well as a reference to the associated networks.\nMust match the Name of a Network.",
                        "type": "string"
                      },
                      "passt": {
                        "description": "DeprecatedPasst is an alias to the deprecated Passt interface,\nplease refer to Kubevirt user guide for alternatives.\nDeprecated: Removed in v1.3",
                        "type": "object"
                      },
                      "pciAddress": {
                        "description": "If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to be forwarded to the virtual machine.",
                        "type": "array",
                        "items": {
                          "description": "Port represents a port to expose from the virtual machine.\nDefault protocol TCP.\nThe port field is mandatory",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number of port to expose for the virtual machine.\nThis must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP or TCP.\nDefaults to \"TCP\".",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "slirp": {
                        "description": "DeprecatedSlirp is an alias to the deprecated Slirp interface\nDeprecated: Removed in v1.3",
                        "type": "object"
                      },
                      "sriov": {
                        "description": "InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.",
                        "type": "object"
                      },
                      "state": {
                        "description": "State represents the requested operational state of the interface.\nThe (only) value supported is 'absent', expressing a request to remove the interface.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                        "type": "string"
                      }
                    }
                  }
                },
                "logSerialConsole": {
                  "description": "Whether to log the auto-attached default serial console or not.\nSerial console logs will be collect to a file and then streamed from a named 'guest-console-log'.\nNot relevant if autoattachSerialConsole is disabled.\nDefaults to cluster wide setting on VirtualMachineOptions.",
                  "type": "boolean"
                },
                "networkInterfaceMultiqueue": {
                  "description": "If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.",
                  "type": "boolean"
                },
                "rng": {
                  "description": "Whether to have random number generator from host",
                  "type": "object"
                },
                "sound": {
                  "description": "Whether to emulate a sound device.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "model": {
                      "description": "We only support ich9 or ac97.\nIf SoundDevice is not set: No sound card is emulated.\nIf SoundDevice is set but Model is not: ich9",
                      "type": "string"
                    },
                    "name": {
                      "description": "User's defined name for this sound device",
                      "type": "string"
                    }
                  }
                },
                "tpm": {
                  "description": "Whether to emulate a TPM device.",
                  "type": "object",
                  "properties": {
                    "persistent": {
                      "description": "Persistent indicates the state of the TPM device should be kept accross reboots\nDefaults to false",
                      "type": "boolean"
                    }
                  }
                },
                "useVirtioTransitional": {
                  "description": "Fall back to legacy virtio 0.9 support if virtio bus is selected on devices.\nThis is helpful for old machines like CentOS6 or RHEL6 which\ndo not understand virtio_non_transitional (virtio 1.0).",
                  "type": "boolean"
                },
                "watchdog": {
                  "description": "Watchdog describes a watchdog device which can be added to the vmi.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "i6300esb": {
                      "description": "i6300esb watchdog device.",
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Valid values are poweroff, reset, shutdown.\nDefaults to reset.",
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "description": "Name of the watchdog.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "features": {
              "description": "Features like acpi, apic, hyperv, smm.",
              "type": "object",
              "properties": {
                "acpi": {
                  "description": "ACPI enables/disables ACPI inside the guest.\nDefaults to enabled.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                      "type": "boolean"
                    }
                  }
                },
                "apic": {
                  "description": "Defaults to the machine type setting.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                      "type": "boolean"
                    },
                    "endOfInterrupt": {
                      "description": "EndOfInterrupt enables the end of interrupt notification in the guest.\nDefaults to false.",
                      "type": "boolean"
                    }
                  }
                },
                "hyperv": {
                  "description": "Defaults to the machine type setting.",
                  "type": "object",
                  "properties": {
                    "evmcs": {
                      "description": "EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "frequencies": {
                      "description": "Frequencies improves the TSC clock source handling for Hyper-V on KVM.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "ipi": {
                      "description": "IPI improves performances in overcommited environments. Requires vpindex.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "reenlightenment": {
                      "description": "Reenlightenment enables the notifications on TSC frequency changes.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "relaxed": {
                      "description": "Relaxed instructs the guest OS to disable watchdog timeouts.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "reset": {
                      "description": "Reset enables Hyperv reboot/reset for the vmi. Requires synic.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "runtime": {
                      "description": "Runtime improves the time accounting to improve scheduling in the guest.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "spinlocks": {
                      "description": "Spinlocks allows to configure the spinlock retry attempts.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        },
                        "spinlocks": {
                          "description": "Retries indicates the number of retries.\nMust be a value greater or equal 4096.\nDefaults to 4096.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "synic": {
                      "description": "SyNIC enables the Synthetic Interrupt Controller.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "synictimer": {
                      "description": "SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "direct": {
                          "description": "Represents if a feature is enabled or disabled.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                              "type": "boolean"
                            }
                          }
                        },
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    },
                    "tlbflush": {
                      "description": "TLBFlush improves performances in overcommited environments. Requires vpindex.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "vapic": {
                      "description": "VAPIC improves the paravirtualized handling of interrupts.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    },
                    "vendorid": {
                      "description": "VendorID allows setting the hypervisor vendor id.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        },
                        "vendorid": {
                          "description": "VendorID sets the hypervisor vendor id, visible to the vmi.\nString up to twelve characters.",
                          "type": "string"
                        }
                      }
                    },
                    "vpindex": {
                      "description": "VPIndex enables the Virtual Processor Index to help windows identifying virtual processors.\nDefaults to the machine type setting.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "hypervPassthrough": {
                  "description": "This enables all supported hyperv flags automatically.\nBear in mind that if this enabled hyperV features cannot\nbe enabled explicitly. In addition, a Virtual Machine\nusing it will be non-migratable.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                },
                "kvm": {
                  "description": "Configure how KVM presence is exposed to the guest.",
                  "type": "object",
                  "properties": {
                    "hidden": {
                      "description": "Hide the KVM hypervisor from standard MSR based discovery.\nDefaults to false",
                      "type": "boolean"
                    }
                  }
                },
                "pvspinlock": {
                  "description": "Notify the guest that the host supports paravirtual spinlocks.\nFor older kernels this feature should be explicitly disabled.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                      "type": "boolean"
                    }
                  }
                },
                "smm": {
                  "description": "SMM enables/disables System Management Mode.\nTSEG not yet implemented.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "firmware": {
              "description": "Firmware.",
              "type": "object",
              "properties": {
                "acpi": {
                  "description": "Information that can be set in the ACPI table",
                  "type": "object",
                  "properties": {
                    "slicNameRef": {
                      "description": "SlicNameRef should match the volume name of a secret object. The data in the secret should\nbe a binary blob that follows the ACPI SLIC standard, see:\nhttps://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)",
                      "type": "string"
                    }
                  }
                },
                "bootloader": {
                  "description": "Settings to control the bootloader that is used.",
                  "type": "object",
                  "properties": {
                    "bios": {
                      "description": "If set (default), BIOS will be used.",
                      "type": "object",
                      "properties": {
                        "useSerial": {
                          "description": "If set, the BIOS output will be transmitted over serial",
                          "type": "boolean"
                        }
                      }
                    },
                    "efi": {
                      "description": "If set, EFI will be used instead of BIOS.",
                      "type": "object",
                      "properties": {
                        "persistent": {
                          "description": "If set to true, Persistent will persist the EFI NVRAM across reboots.\nDefaults to false",
                          "type": "boolean"
                        },
                        "secureBoot": {
                          "description": "If set, SecureBoot will be enabled and the OVMF roms will be swapped for\nSecureBoot-enabled ones.\nRequires SMM to be enabled.\nDefaults to true",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "kernelBoot": {
                  "description": "Settings to set the kernel for booting.",
                  "type": "object",
                  "properties": {
                    "container": {
                      "description": "Container defines the container that containes kernel artifacts",
                      "type": "object",
                      "required": [
                        "image"
                      ],
                      "properties": {
                        "image": {
                          "description": "Image that contains initrd / kernel files.",
                          "type": "string"
                        },
                        "imagePullPolicy": {
                          "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                          "type": "string"
                        },
                        "imagePullSecret": {
                          "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
                          "type": "string"
                        },
                        "initrdPath": {
                          "description": "the fully-qualified path to the ramdisk image in the host OS",
                          "type": "string"
                        },
                        "kernelPath": {
                          "description": "The fully-qualified path to the kernel image in the host OS",
                          "type": "string"
                        }
                      }
                    },
                    "kernelArgs": {
                      "description": "Arguments to be passed to the kernel at boot time",
                      "type": "string"
                    }
                  }
                },
                "serial": {
                  "description": "The system-serial-number in SMBIOS",
                  "type": "string"
                },
                "uuid": {
                  "description": "UUID reported by the vmi bios.\nDefaults to a random generated uid.",
                  "type": "string"
                }
              }
            },
            "ioThreadsPolicy": {
              "description": "Controls whether or not disks will share IOThreads.\nOmitting IOThreadsPolicy disables use of IOThreads.\nOne of: shared, auto",
              "type": "string"
            },
            "launchSecurity": {
              "description": "Launch Security setting of the vmi.",
              "type": "object",
              "properties": {
                "sev": {
                  "description": "AMD Secure Encrypted Virtualization (SEV).",
                  "type": "object",
                  "properties": {
                    "attestation": {
                      "description": "If specified, run the attestation process for a vmi.",
                      "type": "object"
                    },
                    "dhCert": {
                      "description": "Base64 encoded guest owner's Diffie-Hellman key.",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Guest policy flags as defined in AMD SEV API specification.\nNote: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.",
                      "type": "object",
                      "properties": {
                        "encryptedState": {
                          "description": "SEV-ES is required.\nDefaults to false.",
                          "type": "boolean"
                        }
                      }
                    },
                    "session": {
                      "description": "Base64 encoded session blob.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "machine": {
              "description": "Machine type.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "QEMU machine type is the actual chipset of the VirtualMachineInstance.",
                  "type": "string"
                }
              }
            },
            "memory": {
              "description": "Memory allow specifying the VMI memory features.",
              "type": "object",
              "properties": {
                "guest": {
                  "description": "Guest allows to specifying the amount of memory which is visible inside the Guest OS.\nThe Guest must lie between Requests and Limits from the resources section.\nDefaults to the requested memory in the resources section if not specified.",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                },
                "hugepages": {
                  "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
                  "type": "object",
                  "properties": {
                    "pageSize": {
                      "description": "PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.",
                      "type": "string"
                    }
                  }
                },
                "maxGuest": {
                  "description": "MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS.\nThe delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              }
            },
            "resources": {
              "description": "Resources describes the Compute Resources required by this vmi.",
              "type": "object",
              "properties": {
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed.\nValid resource keys are \"memory\" and \"cpu\".",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "overcommitGuestOverhead": {
                  "description": "Don't ask the scheduler to take the guest-management overhead into account. Instead\nput the overhead only into the container's memory limit. This can lead to crashes if\nall memory is in use on a node. Defaults to false.",
                  "type": "boolean"
                },
                "requests": {
                  "description": "Requests is a description of the initial vmi resources.\nValid resource keys are \"memory\" and \"cpu\".",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              }
            }
          }
        },
        "selector": {
          "description": "Selector is a label query over a set of VMIs.\nRequired.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "x-kubernetes-map-type": "atomic"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kubevirt.io",
      "kind": "VirtualMachineInstancePreset",
      "version": "v1alpha3"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}