{
  "description": "UIPlugin defines an observability console plugin.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "UIPluginSpec is the specification for desired state of UIPlugin.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "deployment": {
          "description": "Deployment allows customizing aspects of the generated deployment hosting the UI Plugin.",
          "type": "object",
          "properties": {
            "nodeSelector": {
              "description": "Define a label-selector for nodes which the Pods should be scheduled on.\n\nWhen no selector is specified it will default to a value only selecting Linux nodes (\"kubernetes.io/os=linux\").",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "tolerations": {
              "description": "Define the tolerations used for the deployment.",
              "type": "array",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "type": "object",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "distributedTracing": {
          "description": "DistributedTracing contains configuration for the distributed tracing console plugin.",
          "type": "object",
          "properties": {
            "timeout": {
              "description": "Timeout is the maximum duration before a query timeout.\n\nThe value is expected to be a sequence of digits followed by a unit suffix, which can be 's' (seconds)\nor 'm' (minutes).",
              "type": "string",
              "pattern": "^([0-9]+)([sm]{1})$"
            }
          }
        },
        "logging": {
          "description": "Logging contains configuration for the logging console plugin.\n\nIt only applies to UIPlugin Type: Logging.",
          "type": "object",
          "properties": {
            "logsLimit": {
              "description": "LogsLimit is the max number of entries returned for a query.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "lokiStack": {
              "description": "LokiStack points to the LokiStack instance of which logs should be displayed.\nIt always references a LokiStack in the \"openshift-logging\" namespace.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the LokiStack resource.",
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "schema": {
              "description": "Schema is the schema to use for logs querying and display.\n\nDefatults to \"viaq\" if not specified, \"select\" is used to allow users to select the schema from the UI.",
              "type": "string",
              "enum": [
                "viaq",
                "otel",
                "select"
              ]
            },
            "timeout": {
              "description": "Timeout is the maximum duration before a query timeout.\n\nThe value is expected to be a sequence of digits followed by an optional unit suffix, which can be 's' (seconds)\nor 'm' (minutes). If the unit is omitted, it defaults to seconds.",
              "type": "string",
              "pattern": "^([0-9]+)([sm]{0,1})$"
            }
          }
        },
        "monitoring": {
          "description": "Monitoring contains configuration for the monitoring console plugin.",
          "type": "object",
          "properties": {
            "acm": {
              "description": "ACM points to the alertmanager and thanosQuerier instance services of which it should create a proxy to.",
              "type": "object",
              "required": [
                "alertmanager",
                "enabled",
                "thanosQuerier"
              ],
              "properties": {
                "alertmanager": {
                  "description": "Alertmanager points to the alertmanager instance of which it should create a proxy to.",
                  "type": "object",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "description": "Url of the Alertmanager to proxy to.",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "enabled": {
                  "description": "Indicates if ACM-related feature(s) should be enabled",
                  "type": "boolean"
                },
                "thanosQuerier": {
                  "description": "ThanosQuerier points to the thanos-querier service of which it should create a proxy to.",
                  "type": "object",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "description": "Url of the ThanosQuerier to proxy to.",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              }
            },
            "incidents": {
              "description": "Incidents feature flag enablement",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "description": "Indicates if incidents-related feature(s) should be enabled.",
                  "type": "boolean"
                }
              }
            },
            "perses": {
              "description": "Perses points to the perses instance service of which it should create a proxy to.",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "description": "Indicates if perses-related feature(s) should be enabled",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "troubleshootingPanel": {
          "description": "TroubleshootingPanel contains configuration for the troubleshooting console plugin.",
          "type": "object",
          "properties": {
            "timeout": {
              "description": "Timeout is the maximum duration before a query timeout.\n\nThe value is expected to be a sequence of digits followed by a unit suffix, which can be 's' (seconds)\nor 'm' (minutes).",
              "type": "string",
              "pattern": "^([0-9]+)([sm]{1})$"
            }
          }
        },
        "type": {
          "description": "Type defines the UI plugin.",
          "type": "string",
          "enum": [
            "Dashboards",
            "TroubleshootingPanel",
            "DistributedTracing",
            "Logging",
            "Monitoring"
          ]
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "Troubleshooting Panel configuration is only supported with the TroubleshootingPanel type",
          "rule": "self.type == 'TroubleshootingPanel' || !has(self.troubleshootingPanel)"
        },
        {
          "message": "Distributed Tracing configuration is only supported with the DistributedTracing type",
          "rule": "self.type == 'DistributedTracing' || !has(self.distributedTracing)"
        }
      ]
    },
    "status": {
      "description": "UIPluginStatus defines the observed state of UIPlugin.\nIt should always be reconstructable from the state of the cluster and/or outside world.",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions provide status information about the plugin.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown",
                  "Degraded"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "observability.openshift.io",
      "kind": "UIPlugin",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-validations": [
    {
      "message": "UIPlugin name must be 'logging' if type is Logging",
      "rule": "self.spec.type != 'Logging' || self.metadata.name == 'logging'"
    },
    {
      "message": "UIPlugin name must be 'troubleshooting-panel' if type is TroubleshootingPanel",
      "rule": "self.spec.type != 'TroubleshootingPanel' || self.metadata.name == 'troubleshooting-panel'"
    },
    {
      "message": "UIPlugin name must be 'distributed-tracing' if type is DistributedTracing",
      "rule": "self.spec.type != 'DistributedTracing' || self.metadata.name == 'distributed-tracing'"
    },
    {
      "message": "UIPlugin name must be 'dashboards' if type is Dashboards",
      "rule": "self.spec.type != 'Dashboards' || self.metadata.name == 'dashboards'"
    },
    {
      "message": "UIPlugin name must be 'monitoring' if type is Monitoring",
      "rule": "self.spec.type != 'Monitoring' || self.metadata.name == 'monitoring'"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}