{
  "description": "VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the\nunderlying storage system",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec defines properties of a VolumeSnapshotContent created by the underlying storage system.\nRequired.",
      "type": "object",
      "required": [
        "deletionPolicy",
        "driver",
        "source",
        "volumeSnapshotRef"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on\nthe underlying storage system should be deleted when its bound VolumeSnapshot is deleted.\nSupported values are \"Retain\" and \"Delete\".\n\"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept.\n\"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted.\nFor dynamically provisioned snapshots, this field will automatically be filled in by the\nCSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding\nVolumeSnapshotClass.\nFor pre-existing snapshots, users MUST specify this field when creating the\n VolumeSnapshotContent object.\nRequired.",
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ]
        },
        "driver": {
          "description": "driver is the name of the CSI driver used to create the physical snapshot on\nthe underlying storage system.\nThis MUST be the same as the name returned by the CSI GetPluginName() call for\nthat driver.\nRequired.",
          "type": "string"
        },
        "source": {
          "description": "source specifies whether the snapshot is (or should be) dynamically provisioned\nor already exists, and just requires a Kubernetes object representation.\nThis field is immutable after creation.\nRequired.",
          "type": "object",
          "properties": {
            "snapshotHandle": {
              "description": "snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on\nthe underlying storage system for which a Kubernetes object representation\nwas (or should be) created.\nThis field is immutable.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "snapshotHandle is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "volumeHandle": {
              "description": "volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot\nshould be dynamically taken from.\nThis field is immutable.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "volumeHandle is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            }
          },
          "x-kubernetes-validations": [
            {
              "message": "volumeHandle is required once set",
              "rule": "!has(oldSelf.volumeHandle) || has(self.volumeHandle)"
            },
            {
              "message": "snapshotHandle is required once set",
              "rule": "!has(oldSelf.snapshotHandle) || has(self.snapshotHandle)"
            },
            {
              "message": "exactly one of volumeHandle and snapshotHandle must be set",
              "rule": "(has(self.volumeHandle) && !has(self.snapshotHandle)) || (!has(self.volumeHandle) && has(self.snapshotHandle))"
            }
          ]
        },
        "sourceVolumeMode": {
          "description": "SourceVolumeMode is the mode of the volume whose snapshot is taken.\nCan be either \u201cFilesystem\u201d or \u201cBlock\u201d.\nIf not specified, it indicates the source volume's mode is unknown.\nThis field is immutable.\nThis field is an alpha field.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "sourceVolumeMode is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "volumeSnapshotClassName": {
          "description": "name of the VolumeSnapshotClass from which this snapshot was (or will be)\ncreated.\nNote that after provisioning, the VolumeSnapshotClass may be deleted or\nrecreated with different set of values, and as such, should not be referenced\npost-snapshot creation.",
          "type": "string"
        },
        "volumeSnapshotRef": {
          "description": "volumeSnapshotRef specifies the VolumeSnapshot object to which this\nVolumeSnapshotContent object is bound.\nVolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to\nthis VolumeSnapshotContent's name for the bidirectional binding to be valid.\nFor a pre-existing VolumeSnapshotContent object, name and namespace of the\nVolumeSnapshot object MUST be provided for binding to happen.\nThis field is immutable after creation.\nRequired.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "message": "both spec.volumeSnapshotRef.name and spec.volumeSnapshotRef.namespace must be set",
              "rule": "has(self.name) && has(self.__namespace__)"
            }
          ]
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "sourceVolumeMode is required once set",
          "rule": "!has(oldSelf.sourceVolumeMode) || has(self.sourceVolumeMode)"
        }
      ]
    },
    "status": {
      "description": "status represents the current information of a snapshot.",
      "type": "object",
      "properties": {
        "creationTime": {
          "description": "creationTime is the timestamp when the point-in-time snapshot is taken\nby the underlying storage system.\nIn dynamic snapshot creation case, this field will be filled in by the\nCSI snapshotter sidecar with the \"creation_time\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"creation_time\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it.\nIf not specified, it indicates the creation time is unknown.\nThe format of this field is a Unix nanoseconds time encoded as an int64.\nOn Unix, the command `date +%s%N` returns the current time in nanoseconds\nsince 1970-01-01 00:00:00 UTC.",
          "type": "integer",
          "format": "int64"
        },
        "error": {
          "description": "error is the last observed error during snapshot creation, if any.\nUpon success after retry, this error field will be cleared.",
          "type": "object",
          "properties": {
            "message": {
              "description": "message is a string detailing the encountered error during snapshot\ncreation if specified.\nNOTE: message may be logged, and it should not contain sensitive\ninformation.",
              "type": "string"
            },
            "time": {
              "description": "time is the timestamp when the error was encountered.",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "readyToUse": {
          "description": "readyToUse indicates if a snapshot is ready to be used to restore a volume.\nIn dynamic snapshot creation case, this field will be filled in by the\nCSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"ready_to_use\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it,\notherwise, this field will be set to \"True\".\nIf not specified, it means the readiness of a snapshot is unknown.",
          "type": "boolean"
        },
        "restoreSize": {
          "description": "restoreSize represents the complete size of the snapshot in bytes.\nIn dynamic snapshot creation case, this field will be filled in by the\nCSI snapshotter sidecar with the \"size_bytes\" value returned from CSI\n\"CreateSnapshot\" gRPC call.\nFor a pre-existing snapshot, this field will be filled with the \"size_bytes\"\nvalue returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it.\nWhen restoring a volume from this snapshot, the size of the volume MUST NOT\nbe smaller than the restoreSize if it is specified, otherwise the restoration will fail.\nIf not specified, it indicates that the size is unknown.",
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "snapshotHandle": {
          "description": "snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system.\nIf not specified, it indicates that dynamic snapshot creation has either failed\nor it is still in progress.",
          "type": "string"
        },
        "volumeGroupSnapshotHandle": {
          "description": "VolumeGroupSnapshotHandle is the CSI \"group_snapshot_id\" of a group snapshot\non the underlying storage system.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "snapshot.storage.k8s.io",
      "kind": "VolumeSnapshotContent",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}