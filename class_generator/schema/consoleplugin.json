{
  "description": "ConsolePlugin is an extension for customizing OpenShift web console by\ndynamically loading code from another service running on the cluster.\n\nCompatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "spec contains the desired configuration for the console plugin.",
      "type": "object",
      "required": [
        "backend",
        "displayName"
      ],
      "properties": {
        "backend": {
          "description": "backend holds the configuration of backend which is serving console's plugin .",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "service": {
              "description": "service is a Kubernetes Service that exposes the plugin using a\ndeployment with an HTTP server. The Service must use HTTPS and\nService serving certificate. The console backend will proxy the\nplugins assets from the Service using the service CA bundle.",
              "type": "object",
              "required": [
                "name",
                "namespace",
                "port"
              ],
              "properties": {
                "basePath": {
                  "description": "basePath is the path to the plugin's assets. The primary asset it the\nmanifest file called `plugin-manifest.json`, which is a JSON document\nthat contains metadata about the plugin and the extensions.",
                  "type": "string",
                  "maxLength": 256,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9.\\-_~!$&'()*+,;=:@\\/]*$"
                },
                "name": {
                  "description": "name of Service that is serving the plugin assets.",
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                },
                "namespace": {
                  "description": "namespace of Service that is serving the plugin assets.",
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                },
                "port": {
                  "description": "port on which the Service that is serving the plugin is listening to.",
                  "type": "integer",
                  "format": "int32",
                  "maximum": 65535,
                  "minimum": 1
                }
              }
            },
            "type": {
              "description": "type is the backend type which servers the console's plugin. Currently only \"Service\" is supported.\n",
              "type": "string",
              "enum": [
                "Service"
              ]
            }
          }
        },
        "displayName": {
          "description": "displayName is the display name of the plugin.\nThe dispalyName should be between 1 and 128 characters.",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "i18n": {
          "description": "i18n is the configuration of plugin's localization resources.",
          "type": "object",
          "required": [
            "loadType"
          ],
          "properties": {
            "loadType": {
              "description": "loadType indicates how the plugin's localization resource should be loaded.\nValid values are Preload, Lazy and the empty string.\nWhen set to Preload, all localization resources are fetched when the plugin is loaded.\nWhen set to Lazy, localization resources are lazily loaded as and when they are required by the console.\nWhen omitted or set to the empty string, the behaviour is equivalent to Lazy type.",
              "type": "string",
              "enum": [
                "Preload",
                "Lazy",
                ""
              ]
            }
          }
        },
        "proxy": {
          "description": "proxy is a list of proxies that describe various service type\nto which the plugin needs to connect to.",
          "type": "array",
          "items": {
            "description": "ConsolePluginProxy holds information on various service types\nto which console's backend will proxy the plugin's requests.",
            "type": "object",
            "required": [
              "alias",
              "endpoint"
            ],
            "properties": {
              "alias": {
                "description": "alias is a proxy name that identifies the plugin's proxy. An alias name\nshould be unique per plugin. The console backend exposes following\nproxy endpoint:\n\n/api/proxy/plugin/<plugin-name>/<proxy-alias>/<request-path>?<optional-query-parameters>\n\nRequest example path:\n\n/api/proxy/plugin/acm/search/pods?namespace=openshift-apiserver",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "pattern": "^[A-Za-z0-9-_]+$"
              },
              "authorization": {
                "description": "authorization provides information about authorization type,\nwhich the proxied request should contain",
                "type": "string",
                "enum": [
                  "UserToken",
                  "None"
                ]
              },
              "caCertificate": {
                "description": "caCertificate provides the cert authority certificate contents,\nin case the proxied Service is using custom service CA.\nBy default, the service CA bundle provided by the service-ca operator is used.",
                "type": "string",
                "pattern": "^-----BEGIN CERTIFICATE-----([\\s\\S]*)-----END CERTIFICATE-----\\s?$"
              },
              "endpoint": {
                "description": "endpoint provides information about endpoint to which the request is proxied to.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "service": {
                    "description": "service is an in-cluster Service that the plugin will connect to.\nThe Service must use HTTPS. The console backend exposes an endpoint\nin order to proxy communication between the plugin and the Service.\nNote: service field is required for now, since currently only \"Service\"\ntype is supported.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace",
                      "port"
                    ],
                    "properties": {
                      "name": {
                        "description": "name of Service that the plugin needs to connect to.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                      },
                      "namespace": {
                        "description": "namespace of Service that the plugin needs to connect to",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1
                      },
                      "port": {
                        "description": "port on which the Service that the plugin needs to connect to\nis listening on.",
                        "type": "integer",
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 1
                      }
                    }
                  },
                  "type": {
                    "description": "type is the type of the console plugin's proxy. Currently only \"Service\" is supported.\n",
                    "type": "string",
                    "enum": [
                      "Service"
                    ]
                  }
                }
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "console.openshift.io",
      "kind": "ConsolePlugin",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}