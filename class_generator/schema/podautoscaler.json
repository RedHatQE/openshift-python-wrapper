{
  "description": "PodAutoscaler is a Knative abstraction that encapsulates the interface by which Knative\ncomponents instantiate autoscalers.  This definition is an abstraction that may be backed\nby multiple definitions.  For more information, see the Knative Pluggability presentation:\nhttps://docs.google.com/presentation/d/19vW9HFZ6Puxt31biNZF3uLRejDmu82rxJIk1cWmxF7w/edit",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "Spec holds the desired state of the PodAutoscaler (from the client).",
      "type": "object",
      "required": [
        "protocolType",
        "scaleTargetRef"
      ],
      "properties": {
        "containerConcurrency": {
          "description": "ContainerConcurrency specifies the maximum allowed\nin-flight (concurrent) requests per container of the Revision.\nDefaults to `0` which means unlimited concurrency.",
          "type": "integer",
          "format": "int64"
        },
        "protocolType": {
          "description": "The application-layer protocol. Matches `ProtocolType` inferred from the revision spec.",
          "type": "string"
        },
        "reachability": {
          "description": "Reachability specifies whether or not the `ScaleTargetRef` can be reached (ie. has a route).\nDefaults to `ReachabilityUnknown`",
          "type": "string"
        },
        "scaleTargetRef": {
          "description": "ScaleTargetRef defines the /scale-able resource that this PodAutoscaler\nis responsible for quickly right-sizing.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        }
      }
    },
    "status": {
      "description": "Status communicates the observed state of the PodAutoscaler (from the controller).",
      "type": "object",
      "required": [
        "metricsServiceName",
        "serviceName"
      ],
      "properties": {
        "actualScale": {
          "description": "ActualScale shows the actual number of replicas for the revision.",
          "type": "integer",
          "format": "int32"
        },
        "annotations": {
          "description": "Annotations is additional Status fields for the Resource to save some\nadditional State as well as convey more information to the user. This is\nroughly akin to Annotations on any k8s resource, just the reconciler conveying\nricher information outwards.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Conditions the latest available observations of a resource's current state.",
          "type": "array",
          "items": {
            "description": "Condition defines a readiness condition for a Knative resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.\nWe use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\ndifferences (all other things held constant).",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            }
          }
        },
        "desiredScale": {
          "description": "DesiredScale shows the current desired number of replicas for the revision.",
          "type": "integer",
          "format": "int32"
        },
        "metricsServiceName": {
          "description": "MetricsServiceName is the K8s Service name that provides revision metrics.\nThe service is managed by the PA object.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.",
          "type": "integer",
          "format": "int64"
        },
        "serviceName": {
          "description": "ServiceName is the K8s Service name that serves the revision, scaled by this PA.\nThe service is created and owned by the ServerlessService object owned by this PA.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "autoscaling.internal.knative.dev",
      "kind": "PodAutoscaler",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}