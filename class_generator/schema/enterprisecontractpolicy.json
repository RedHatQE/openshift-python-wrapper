{
  "description": "EnterpriseContractPolicy is the Schema for the enterprisecontractpolicies API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "EnterpriseContractPolicySpec is used to configure the Enterprise Contract Policy",
      "type": "object",
      "properties": {
        "configuration": {
          "description": "Configuration handles policy modification configuration (exclusions and inclusions)",
          "type": "object",
          "properties": {
            "collections": {
              "description": "Collections set of predefined rules.  DEPRECATED: Collections can be listed in include\nwith the \"@\" prefix.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "exclude": {
              "description": "Exclude set of policy exclusions that, in case of failure, do not block\nthe success of the outcome.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "include": {
              "description": "Include set of policy inclusions that are added to the policy evaluation.\nThese override excluded rules.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            }
          }
        },
        "description": {
          "description": "Description of the policy or its intended use",
          "type": "string"
        },
        "identity": {
          "description": "Identity to be used for keyless verification. This is an experimental feature.",
          "type": "object",
          "properties": {
            "issuer": {
              "description": "Issuer is the URL of the certificate OIDC issuer for keyless verification.",
              "type": "string"
            },
            "issuerRegExp": {
              "description": "IssuerRegExp is a regular expression to match the URL of the certificate OIDC issuer for\nkeyless verification.",
              "type": "string"
            },
            "subject": {
              "description": "Subject is the URL of the certificate identity for keyless verification.",
              "type": "string"
            },
            "subjectRegExp": {
              "description": "SubjectRegExp is a regular expression to match the URL of the certificate identity for\nkeyless verification.",
              "type": "string"
            }
          }
        },
        "name": {
          "description": "Optional name of the policy",
          "type": "string"
        },
        "publicKey": {
          "description": "Public key used to validate the signature of images and attestations",
          "type": "string"
        },
        "rekorUrl": {
          "description": "URL of the Rekor instance. Empty string disables Rekor integration",
          "type": "string"
        },
        "sources": {
          "description": "One or more groups of policy rules",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "Source defines policies and data that are evaluated together",
            "type": "object",
            "properties": {
              "config": {
                "description": "Config specifies which policy rules are included, or excluded, from the\nprovided policy source urls.",
                "type": "object",
                "properties": {
                  "exclude": {
                    "description": "Exclude is a set of policy exclusions that, in case of failure, do not block\nthe success of the outcome.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "include": {
                    "description": "Include is a set of policy inclusions that are added to the policy evaluation.\nThese take precedence over policy exclusions.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                }
              },
              "data": {
                "description": "List of go-getter style policy data source urls",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Optional name for the source",
                "type": "string"
              },
              "policy": {
                "description": "List of go-getter style policy source urls",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              "ruleData": {
                "description": "Arbitrary rule data that will be visible to policy rules",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "volatileConfig": {
                "description": "Specifies volatile configuration that can include or exclude policy rules\nbased on effective time.",
                "type": "object",
                "properties": {
                  "exclude": {
                    "description": "Exclude is a set of policy exclusions that, in case of failure, do not block\nthe success of the outcome.",
                    "type": "array",
                    "items": {
                      "description": "VolatileCriteria includes or excludes a policy rule with effective dates as an option.",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "effectiveOn": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "effectiveUntil": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "imageDigest": {
                          "description": "ImageDigest is used to specify an image by its digest.",
                          "type": "string",
                          "pattern": "^sha256:[a-fA-F0-9]{64}$"
                        },
                        "imageRef": {
                          "description": "DEPRECATED: Use ImageDigest instead\nImageRef is used to specify an image by its digest.",
                          "type": "string",
                          "pattern": "^sha256:[a-fA-F0-9]{64}$"
                        },
                        "imageUrl": {
                          "description": "ImageUrl is used to specify an image by its URL without a tag.",
                          "type": "string",
                          "pattern": "^[a-z0-9][a-z0-9.-]*[a-z0-9](?:\\/[a-z0-9][a-z0-9-]*[a-z0-9]){2,}$"
                        },
                        "reference": {
                          "description": "Reference is used to include a link to related information such as a Jira issue URL.",
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "include": {
                    "description": "Include is a set of policy inclusions that are added to the policy evaluation.\nThese take precedence over policy exclusions.",
                    "type": "array",
                    "items": {
                      "description": "VolatileCriteria includes or excludes a policy rule with effective dates as an option.",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "effectiveOn": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "effectiveUntil": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "imageDigest": {
                          "description": "ImageDigest is used to specify an image by its digest.",
                          "type": "string",
                          "pattern": "^sha256:[a-fA-F0-9]{64}$"
                        },
                        "imageRef": {
                          "description": "DEPRECATED: Use ImageDigest instead\nImageRef is used to specify an image by its digest.",
                          "type": "string",
                          "pattern": "^sha256:[a-fA-F0-9]{64}$"
                        },
                        "imageUrl": {
                          "description": "ImageUrl is used to specify an image by its URL without a tag.",
                          "type": "string",
                          "pattern": "^[a-z0-9][a-z0-9.-]*[a-z0-9](?:\\/[a-z0-9][a-z0-9-]*[a-z0-9]){2,}$"
                        },
                        "reference": {
                          "description": "Reference is used to include a link to related information such as a Jira issue URL.",
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "EnterpriseContractPolicyStatus defines the observed state of EnterpriseContractPolicy",
      "type": "object"
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "appstudio.redhat.com",
      "kind": "EnterpriseContractPolicy",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}