{
  "description": "GrafanaMuteTiming is the Schema for the GrafanaMuteTiming API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "GrafanaMuteTimingSpec defines the desired state of GrafanaMuteTiming",
      "type": "object",
      "required": [
        "instanceSelector",
        "name",
        "time_intervals"
      ],
      "properties": {
        "allowCrossNamespaceImport": {
          "description": "Allow the Operator to match this resource with Grafanas outside the current namespace",
          "type": "boolean"
        },
        "editable": {
          "description": "Whether to enable or disable editing of the mute timing in Grafana UI",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "message": "spec.editable is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "instanceSelector": {
          "description": "Selects Grafana instances for import",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "message": "spec.instanceSelector is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "name": {
          "description": "A unique name for the mute timing",
          "type": "string"
        },
        "resyncPeriod": {
          "description": "How often the resource is synced, defaults to 10m0s if not set",
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
        },
        "time_intervals": {
          "description": "Time intervals for muting",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "days_of_month": {
                "description": "The date 1-31 of a month. Negative values can also be used to represent days that begin at the end of the month.\nFor example: -1 for the last day of the month.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "location": {
                "description": "Depending on the location, the time range is displayed in local time.",
                "type": "string"
              },
              "months": {
                "description": "The months of the year in either numerical or the full calendar month.\nFor example: 1, may.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "times": {
                "description": "The time inclusive of the start and exclusive of the end time (in UTC if no location has been selected, otherwise local time).",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "end_time",
                    "start_time"
                  ],
                  "properties": {
                    "end_time": {
                      "description": "end time",
                      "type": "string"
                    },
                    "start_time": {
                      "description": "start time",
                      "type": "string"
                    }
                  }
                }
              },
              "weekdays": {
                "description": "The day or range of days of the week.\nFor example: monday, thursday",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "years": {
                "description": "The year or years for the interval.\nFor example: 2021",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "disabling spec.allowCrossNamespaceImport requires a recreate to ensure desired state",
          "rule": "!oldSelf.allowCrossNamespaceImport || (oldSelf.allowCrossNamespaceImport && self.allowCrossNamespaceImport)"
        }
      ]
    },
    "status": {
      "description": "The most recent observed state of a Grafana resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Results when synchonizing resource with Grafana instances",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        },
        "lastResync": {
          "description": "Last time the resource was synchronized with Grafana instances",
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "grafana.integreatly.org",
      "kind": "GrafanaMuteTiming",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}