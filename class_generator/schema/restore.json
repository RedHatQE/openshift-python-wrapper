{
  "description": "Restore is a Velero resource that represents the application of\nresources from a Velero backup to a target Kubernetes cluster.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RestoreSpec defines the specification for a Velero restore.",
      "type": "object",
      "properties": {
        "backupName": {
          "description": "BackupName is the unique name of the Velero backup to restore\nfrom.",
          "type": "string"
        },
        "excludedNamespaces": {
          "description": "ExcludedNamespaces contains a list of namespaces that are not\nincluded in the restore."
        },
        "excludedResources": {
          "description": "ExcludedResources is a slice of resource names that are not\nincluded in the restore."
        },
        "existingResourcePolicy": {
          "description": "ExistingResourcePolicy specifies the restore behavior for the Kubernetes resource to be restored"
        },
        "hooks": {
          "description": "Hooks represent custom behaviors that should be executed during or post restore.",
          "type": "object",
          "properties": {
            "resources": {
              "type": "array",
              "items": {
                "description": "RestoreResourceHookSpec defines one or more RestoreResrouceHooks that should be executed based on\nthe rules defined for namespaces, resources, and label selector.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "excludedNamespaces": {
                    "description": "ExcludedNamespaces specifies the namespaces to which this hook spec does not apply."
                  },
                  "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which this hook spec does not apply."
                  },
                  "includedNamespaces": {
                    "description": "IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies\nto all namespaces."
                  },
                  "includedResources": {
                    "description": "IncludedResources specifies the resources to which this hook spec applies. If empty, it applies\nto all resources."
                  },
                  "labelSelector": {
                    "description": "LabelSelector, if specified, filters the resources to which this hook spec applies.",
                    "x-kubernetes-map-type": "atomic"
                  },
                  "name": {
                    "description": "Name is the name of this hook.",
                    "type": "string"
                  },
                  "postHooks": {
                    "description": "PostHooks is a list of RestoreResourceHooks to execute during and after restoring a resource.",
                    "type": "array",
                    "items": {
                      "description": "RestoreResourceHook defines a restore hook for a resource.",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec defines an exec restore hook.",
                          "type": "object",
                          "required": [
                            "command"
                          ],
                          "properties": {
                            "command": {
                              "description": "Command is the command and arguments to execute from within a container after a pod has been restored.",
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string"
                              }
                            },
                            "container": {
                              "description": "Container is the container in the pod where the command should be executed. If not specified,\nthe pod's first container is used.",
                              "type": "string"
                            },
                            "execTimeout": {
                              "description": "ExecTimeout defines the maximum amount of time Velero should wait for the hook to complete before\nconsidering the execution a failure.",
                              "type": "string"
                            },
                            "onError": {
                              "description": "OnError specifies how Velero should behave if it encounters an error executing this hook.",
                              "type": "string",
                              "enum": [
                                "Continue",
                                "Fail"
                              ]
                            },
                            "waitForReady": {
                              "description": "WaitForReady ensures command will be launched when container is Ready instead of Running."
                            },
                            "waitTimeout": {
                              "description": "WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready\nbefore attempting to run the command.",
                              "type": "string"
                            }
                          }
                        },
                        "init": {
                          "description": "Init defines an init restore hook.",
                          "type": "object",
                          "properties": {
                            "initContainers": {
                              "description": "InitContainers is list of init containers to be added to a pod during its restore.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "timeout": {
                              "description": "Timeout defines the maximum amount of time Velero should wait for the initContainers to complete.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "includeClusterResources": {
          "description": "IncludeClusterResources specifies whether cluster-scoped resources\nshould be included for consideration in the restore. If null, defaults\nto true."
        },
        "includedNamespaces": {
          "description": "IncludedNamespaces is a slice of namespace names to include objects\nfrom. If empty, all namespaces are included."
        },
        "includedResources": {
          "description": "IncludedResources is a slice of resource names to include\nin the restore. If empty, all resources in the backup are included."
        },
        "itemOperationTimeout": {
          "description": "ItemOperationTimeout specifies the time used to wait for RestoreItemAction operations\nThe default value is 4 hour.",
          "type": "string"
        },
        "labelSelector": {
          "description": "LabelSelector is a metav1.LabelSelector to filter with\nwhen restoring individual objects from the backup. If empty\nor nil, all objects are included. Optional.",
          "x-kubernetes-map-type": "atomic"
        },
        "namespaceMapping": {
          "description": "NamespaceMapping is a map of source namespace names\nto target namespace names to restore into. Any source\nnamespaces not included in the map will be restored into\nnamespaces of the same name.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "orLabelSelectors": {
          "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with\nwhen restoring individual objects from the backup. If multiple provided\nthey will be joined by the OR operator. LabelSelector as well as\nOrLabelSelectors cannot co-exist in restore request, only one of them\ncan be used"
        },
        "preserveNodePorts": {
          "description": "PreserveNodePorts specifies whether to restore old nodePorts from backup."
        },
        "resourceModifier": {
          "description": "ResourceModifier specifies the reference to JSON resource patches that should be applied to resources before restoration.",
          "required": [
            "kind",
            "name"
          ],
          "x-kubernetes-map-type": "atomic"
        },
        "restorePVs": {
          "description": "RestorePVs specifies whether to restore all included\nPVs from snapshot"
        },
        "restoreStatus": {
          "description": "RestoreStatus specifies which resources we should restore the status\nfield. If nil, no objects are included. Optional."
        },
        "scheduleName": {
          "description": "ScheduleName is the unique name of the Velero schedule to restore\nfrom. If specified, and BackupName is empty, Velero will restore\nfrom the most recent successful backup created from this schedule.",
          "type": "string"
        },
        "uploaderConfig": {
          "description": "UploaderConfig specifies the configuration for the restore."
        }
      }
    },
    "status": {
      "description": "RestoreStatus captures the current status of a Velero restore",
      "type": "object",
      "properties": {
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time the restore operation was completed.\nCompletion time is recorded even on failed restore.\nThe server's time is used for StartTimestamps",
          "format": "date-time"
        },
        "errors": {
          "description": "Errors is a count of all error messages that were generated during\nexecution of the restore. The actual errors are stored in object storage.",
          "type": "integer"
        },
        "failureReason": {
          "description": "FailureReason is an error that caused the entire restore to fail.",
          "type": "string"
        },
        "hookStatus": {
          "description": "HookStatus contains information about the status of the hooks."
        },
        "phase": {
          "description": "Phase is the current state of the Restore",
          "type": "string",
          "enum": [
            "New",
            "FailedValidation",
            "InProgress",
            "WaitingForPluginOperations",
            "WaitingForPluginOperationsPartiallyFailed",
            "Completed",
            "PartiallyFailed",
            "Failed",
            "Finalizing",
            "FinalizingPartiallyFailed"
          ]
        },
        "progress": {
          "description": "Progress contains information about the restore's execution progress. Note\nthat this information is best-effort only -- if Velero fails to update it\nduring a restore for any reason, it may be inaccurate/stale."
        },
        "restoreItemOperationsAttempted": {
          "description": "RestoreItemOperationsAttempted is the total number of attempted\nasync RestoreItemAction operations for this restore.",
          "type": "integer"
        },
        "restoreItemOperationsCompleted": {
          "description": "RestoreItemOperationsCompleted is the total number of successfully completed\nasync RestoreItemAction operations for this restore.",
          "type": "integer"
        },
        "restoreItemOperationsFailed": {
          "description": "RestoreItemOperationsFailed is the total number of async\nRestoreItemAction operations for this restore which ended with an error.",
          "type": "integer"
        },
        "startTimestamp": {
          "description": "StartTimestamp records the time the restore operation was started.\nThe server's time is used for StartTimestamps",
          "format": "date-time"
        },
        "validationErrors": {
          "description": "ValidationErrors is a slice of all validation errors (if\napplicable)"
        },
        "warnings": {
          "description": "Warnings is a count of all warning messages that were generated during\nexecution of the restore. The actual warnings are stored in object storage.",
          "type": "integer"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "Restore",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}