{
  "description": "Restore is the Schema for the restores API. It is used to define restore jobs and its restoration source.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RestoreSpec defines the desired state of restore",
      "type": "object",
      "required": [
        "mariaDbRef"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity to be used in the Pod.",
          "type": "object",
          "properties": {
            "antiAffinityEnabled": {
              "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
              "type": "boolean"
            },
            "podAntiAffinity": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                    "type": "object",
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      },
                      "weight": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                    "type": "object",
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "topologyKey": {
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            }
          }
        },
        "args": {
          "description": "Args to be used in the Container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backoffLimit": {
          "description": "BackoffLimit defines the maximum number of attempts to successfully perform a Backup.",
          "type": "integer",
          "format": "int32"
        },
        "backupRef": {
          "description": "BackupRef is a reference to a Backup object. It has priority over S3 and Volume.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        },
        "database": {
          "description": "Database defines the logical database to be restored. If not provided, all databases available in the backup are restored.\nIMPORTANT: The database must previously exist.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "inheritMetadata": {
          "description": "InheritMetadata defines the metadata to be inherited by children resources.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "logLevel": {
          "description": "LogLevel to be used n the Backup Job. It defaults to 'info'.",
          "type": "string"
        },
        "mariaDbRef": {
          "description": "MariaDBRef is a reference to a MariaDB object.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "waitForIt": {
              "description": "WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.",
              "type": "boolean"
            }
          }
        },
        "nodeSelector": {
          "description": "NodeSelector to be used in the Pod.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "podMetadata": {
          "description": "PodMetadata defines extra metadata for the Pod.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "podSecurityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings.",
          "type": "object",
          "properties": {
            "appArmorProfile": {
              "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                  "type": "string"
                }
              }
            },
            "fsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "fsGroupChangePolicy": {
              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
              "type": "string"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            },
            "seLinuxOptions": {
              "description": "SELinuxOptions are the labels to be applied to the container",
              "type": "object",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": "string"
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": "string"
                }
              }
            },
            "seccompProfile": {
              "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                  "type": "string"
                }
              }
            },
            "supplementalGroups": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "x-kubernetes-list-type": "atomic"
            }
          }
        },
        "priorityClassName": {
          "description": "PriorityClassName to be used in the Pod.",
          "type": "string"
        },
        "resources": {
          "description": "Resouces describes the compute resource requirements.",
          "type": "object",
          "properties": {
            "limits": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            }
          }
        },
        "restartPolicy": {
          "description": "RestartPolicy to be added to the Backup Job.",
          "type": "string",
          "enum": [
            "Always",
            "OnFailure",
            "Never"
          ]
        },
        "s3": {
          "description": "S3 defines the configuration to restore backups from a S3 compatible storage. It has priority over Volume.",
          "type": "object",
          "required": [
            "accessKeyIdSecretKeyRef",
            "bucket",
            "endpoint",
            "secretAccessKeySecretKeyRef"
          ],
          "properties": {
            "accessKeyIdSecretKeyRef": {
              "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 access key id.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "bucket": {
              "description": "Bucket is the name Name of the bucket to store backups.",
              "type": "string"
            },
            "endpoint": {
              "description": "Endpoint is the S3 API endpoint without scheme.",
              "type": "string"
            },
            "prefix": {
              "description": "Prefix indicates a folder/subfolder in the bucket. For example: mariadb/ or mariadb/backups. A trailing slash '/' is added if not provided.",
              "type": "string"
            },
            "region": {
              "description": "Region is the S3 region name to use.",
              "type": "string"
            },
            "secretAccessKeySecretKeyRef": {
              "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 secret key.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "sessionTokenSecretKeyRef": {
              "description": "SessionTokenSecretKeyRef is a reference to a Secret key containing the S3 session token.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "tls": {
              "description": "TLS provides the configuration required to establish TLS connections with S3.",
              "type": "object",
              "properties": {
                "caSecretKeyRef": {
                  "description": "CASecretKeyRef is a reference to a Secret key containing a CA bundle in PEM format used to establish TLS connections with S3.\nBy default, the system trust chain will be used, but you can use this field to add more CAs to the bundle.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "enabled": {
                  "description": "Enabled is a flag to enable TLS.",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "securityContext": {
          "description": "SecurityContext holds security configuration that will be applied to a container.",
          "type": "object",
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean"
            },
            "capabilities": {
              "description": "Adds and removes POSIX capabilities from running containers.",
              "type": "object",
              "properties": {
                "add": {
                  "description": "Added capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "drop": {
                  "description": "Removed capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "privileged": {
              "type": "boolean"
            },
            "readOnlyRootFilesystem": {
              "type": "boolean"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to be used by the Pods.",
          "type": "string"
        },
        "targetRecoveryTime": {
          "description": "TargetRecoveryTime is a RFC3339 (1970-01-01T00:00:00Z) date and time that defines the point in time recovery objective.\nIt is used to determine the closest restoration source in time.",
          "type": "string",
          "format": "date-time"
        },
        "tolerations": {
          "description": "Tolerations to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            }
          }
        },
        "volume": {
          "description": "Volume is a Kubernetes Volume object that contains a backup.",
          "type": "object",
          "properties": {
            "csi": {
              "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
              "type": "object",
              "required": [
                "driver"
              ],
              "properties": {
                "driver": {
                  "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                  "type": "string"
                },
                "fsType": {
                  "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                  "type": "string"
                },
                "nodePublishSecretRef": {
                  "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "readOnly": {
                  "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                  "type": "boolean"
                },
                "volumeAttributes": {
                  "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "emptyDir": {
              "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling.",
              "type": "object",
              "properties": {
                "medium": {
                  "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                  "type": "string"
                },
                "sizeLimit": {
                  "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              }
            },
            "nfs": {
              "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling.",
              "type": "object",
              "required": [
                "path",
                "server"
              ],
              "properties": {
                "path": {
                  "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                  "type": "string"
                },
                "readOnly": {
                  "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                  "type": "boolean"
                },
                "server": {
                  "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                  "type": "string"
                }
              }
            },
            "persistentVolumeClaim": {
              "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system).",
              "type": "object",
              "required": [
                "claimName"
              ],
              "properties": {
                "claimName": {
                  "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                  "type": "string"
                },
                "readOnly": {
                  "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "RestoreStatus defines the observed state of restore",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions for the Restore object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "k8s.mariadb.com",
      "kind": "Restore",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}