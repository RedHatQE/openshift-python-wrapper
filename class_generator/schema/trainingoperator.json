{
  "description": "TrainingOperator is the Schema for the trainingoperators API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "TrainingOperatorSpec defines the desired state of TrainingOperator",
      "type": "object",
      "properties": {
        "devFlags": {
          "description": "Add developer fields",
          "type": "object",
          "properties": {
            "manifests": {
              "description": "List of custom manifests for the given component",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "contextDir": {
                    "description": "contextDir is the relative path to the folder containing manifests in a repository, default value \"manifests\"",
                    "type": "string"
                  },
                  "sourcePath": {
                    "description": "sourcePath is the subpath within contextDir where kustomize builds start. Examples include any sub-folder or path: `base`, `overlays/dev`, `default`, `odh` etc.",
                    "type": "string"
                  },
                  "uri": {
                    "description": "uri is the URI point to a git repo with tag/branch. e.g.  https://github.com/org/repo/tarball/<tag/branch>",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "TrainingOperatorStatus defines the observed state of TrainingOperator",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastHeartbeatTime": {
                "description": "The last time we got an update on a given condition, this should not be set and is\npresent only for backward compatibility reasons",
                "type": "string",
                "format": "date-time"
              },
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.\nIf that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human-readable message indicating details about the transition.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration\nis 9, the condition is out of date with respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nThe value should be a CamelCase string.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "observedGeneration": {
          "description": "The generation observed by the resource controller.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "type": "string"
        },
        "releases": {
          "type": "array",
          "items": {
            "description": "ComponentRelease represents the detailed status of a component release.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "repoUrl": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "components.platform.opendatahub.io",
      "kind": "TrainingOperator",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "x-kubernetes-validations": [
    {
      "message": "TrainingOperator name must be default-trainingoperator",
      "rule": "self.metadata.name == 'default-trainingoperator'"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}