{
  "description": "DataProtectionApplication is the Schema for the dpa API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "DataProtectionApplicationSpec defines the desired state of Velero",
      "type": "object",
      "required": [
        "configuration"
      ],
      "properties": {
        "backupImages": {
          "description": "backupImages is used to specify whether you want to deploy a registry for enabling backup and restore of images",
          "type": "boolean"
        },
        "backupLocations": {
          "description": "backupLocations defines the list of desired configuration to use for BackupStorageLocations",
          "type": "array",
          "items": {
            "description": "BackupLocation defines the configuration for the DPA backup storage",
            "type": "object",
            "properties": {
              "bucket": {
                "description": "CloudStorageLocation defines BackupStorageLocation using bucket referenced by CloudStorage CR.",
                "type": "object",
                "required": [
                  "cloudStorageRef"
                ],
                "properties": {
                  "backupSyncPeriod": {
                    "description": "backupSyncPeriod defines how frequently to sync backup API objects from object storage. A value of 0 disables sync."
                  },
                  "caCert": {
                    "description": "CACert defines a CA bundle to use when verifying TLS connections to the provider.",
                    "type": "string",
                    "format": "byte"
                  },
                  "cloudStorageRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "config": {
                    "description": "config is for provider-specific configuration fields.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "credential": {
                    "description": "credential contains the credential information intended to be used with this location",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "default": {
                    "description": "default indicates this location is the default backup storage location.",
                    "type": "boolean"
                  },
                  "prefix": {
                    "description": "Prefix is the path inside a bucket to use for Velero storage. Optional.",
                    "type": "string"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "velero": {
                "description": "BackupStorageLocationSpec defines the desired state of a Velero BackupStorageLocation",
                "type": "object",
                "required": [
                  "objectStorage",
                  "provider"
                ],
                "properties": {
                  "accessMode": {
                    "description": "AccessMode defines the permissions for the backup storage location.",
                    "type": "string",
                    "enum": [
                      "ReadOnly",
                      "ReadWrite"
                    ]
                  },
                  "backupSyncPeriod": {
                    "description": "BackupSyncPeriod defines how frequently to sync backup API objects from object storage. A value of 0 disables sync."
                  },
                  "config": {
                    "description": "Config is for provider-specific configuration fields.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "credential": {
                    "description": "Credential contains the credential information intended to be used with this location",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "default": {
                    "description": "Default indicates this location is the default backup storage location.",
                    "type": "boolean"
                  },
                  "objectStorage": {
                    "description": "ObjectStorageLocation specifies the settings necessary to connect to a provider's object storage.",
                    "type": "object",
                    "required": [
                      "bucket"
                    ],
                    "properties": {
                      "bucket": {
                        "description": "Bucket is the bucket to use for object storage.",
                        "type": "string"
                      },
                      "caCert": {
                        "description": "CACert defines a CA bundle to use when verifying TLS connections to the provider.",
                        "type": "string",
                        "format": "byte"
                      },
                      "prefix": {
                        "description": "Prefix is the path inside a bucket to use for Velero storage. Optional.",
                        "type": "string"
                      }
                    }
                  },
                  "provider": {
                    "description": "Provider is the provider of the backup storage.",
                    "type": "string"
                  },
                  "validationFrequency": {
                    "description": "ValidationFrequency defines how frequently to validate the corresponding object storage. A value of 0 disables validation."
                  }
                }
              }
            }
          }
        },
        "configuration": {
          "description": "configuration is used to configure the data protection application's server config",
          "type": "object",
          "properties": {
            "nodeAgent": {
              "description": "NodeAgent is needed to allow selection between kopia or restic",
              "type": "object",
              "required": [
                "uploaderType"
              ],
              "properties": {
                "enable": {
                  "description": "enable defines a boolean pointer whether we want the daemonset to\nexist or not",
                  "type": "boolean"
                },
                "podConfig": {
                  "description": "Pod specific configuration",
                  "type": "object",
                  "properties": {
                    "env": {
                      "description": "env defines the list of environment variables to be supplied to podSpec",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "description": "labels to add to pods",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "nodeSelector": {
                      "description": "nodeSelector defines the nodeSelector to be supplied to podSpec",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "resourceAllocations": {
                      "description": "resourceAllocations defines the CPU, Memory and ephemeral-storage resource allocations for the Pod"
                    },
                    "tolerations": {
                      "description": "tolerations defines the list of tolerations to be applied to daemonset",
                      "type": "array",
                      "items": {
                        "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                        "type": "object",
                        "properties": {
                          "effect": {
                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                            "type": "string"
                          },
                          "key": {
                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                            "type": "string"
                          },
                          "tolerationSeconds": {
                            "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "value": {
                            "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "supplementalGroups": {
                  "description": "supplementalGroups defines the linux groups to be applied to the NodeAgent Pod",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "timeout": {
                  "description": "timeout defines the NodeAgent timeout, default value is 1h",
                  "type": "string"
                },
                "uploaderType": {
                  "description": "The type of uploader to transfer the data of pod volumes, the supported values are 'restic' or 'kopia'",
                  "type": "string",
                  "enum": [
                    "restic",
                    "kopia"
                  ]
                }
              }
            },
            "restic": {
              "description": "(deprecation warning) ResticConfig is the configuration for restic DaemonSet.\nrestic is for backwards compatibility and is replaced by the nodeAgent\nrestic will be removed in the future",
              "type": "object",
              "properties": {
                "enable": {
                  "description": "enable defines a boolean pointer whether we want the daemonset to\nexist or not",
                  "type": "boolean"
                },
                "podConfig": {
                  "description": "Pod specific configuration",
                  "type": "object",
                  "properties": {
                    "env": {
                      "description": "env defines the list of environment variables to be supplied to podSpec",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "description": "labels to add to pods",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "nodeSelector": {
                      "description": "nodeSelector defines the nodeSelector to be supplied to podSpec",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "resourceAllocations": {
                      "description": "resourceAllocations defines the CPU, Memory and ephemeral-storage resource allocations for the Pod"
                    },
                    "tolerations": {
                      "description": "tolerations defines the list of tolerations to be applied to daemonset",
                      "type": "array",
                      "items": {
                        "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                        "type": "object",
                        "properties": {
                          "effect": {
                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                            "type": "string"
                          },
                          "key": {
                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                            "type": "string"
                          },
                          "tolerationSeconds": {
                            "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "value": {
                            "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "supplementalGroups": {
                  "description": "supplementalGroups defines the linux groups to be applied to the NodeAgent Pod",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "timeout": {
                  "description": "timeout defines the NodeAgent timeout, default value is 1h",
                  "type": "string"
                }
              }
            },
            "velero": {
              "type": "object",
              "properties": {
                "args": {
                  "description": "Velero args are settings to customize velero server arguments. Overrides values in other fields.",
                  "type": "object",
                  "properties": {
                    "add_dir_header": {
                      "description": "If true, adds the file directory to the header of the log messages",
                      "type": "boolean"
                    },
                    "alsologtostderr": {
                      "description": "log to standard error as well as files (no effect when -logtostderr=true)",
                      "type": "boolean"
                    },
                    "backup-sync-period": {
                      "description": "How often (in nanoseconds) to ensure all Velero backups in object storage exist as Backup API objects in the cluster. This is the default sync period if none is explicitly specified for a backup storage location.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "client-burst": {
                      "description": "Maximum number of requests by the server to the Kubernetes API in a short period of time.",
                      "type": "integer"
                    },
                    "client-page-size": {
                      "description": "Page size of requests by the server to the Kubernetes API when listing objects during a backup. Set to 0 to disable paging.",
                      "type": "integer"
                    },
                    "client-qps": {
                      "description": "Maximum number of requests per second by the server to the Kubernetes API once the burst limit has been reached.\nthis will be validated as a valid float32",
                      "type": "string"
                    },
                    "colorized": {
                      "description": "Show colored output in TTY",
                      "type": "boolean"
                    },
                    "default-backup-ttl": {
                      "description": "How long (in nanoseconds) to wait by default before backups can be garbage collected. (default is 720 hours)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "default-item-operation-timeout": {
                      "description": "How long (in nanoseconds) to wait on asynchronous BackupItemActions and RestoreItemActions to complete before timing out. (default is 1 hour)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "default-repo-maintain-frequency": {
                      "description": "How often (in nanoseconds) 'maintain' is run for backup repositories by default.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "default-volumes-to-fs-backup": {
                      "description": "Backup all volumes with pod volume file system backup by default.",
                      "type": "boolean"
                    },
                    "disabled-controllers": {
                      "description": "List of controllers to disable on startup. Valid values are backup,backup-operations,backup-deletion,backup-finalizer,backup-sync,download-request,gc,backup-repo,restore,restore-operations,schedule,server-status-request",
                      "type": "array",
                      "enum": [
                        "backup",
                        "backup-operations",
                        "backup-deletion",
                        "backup-finalizer",
                        "backup-sync",
                        "download-request",
                        "gc",
                        "backup-repo",
                        "restore",
                        "restore-operations",
                        "schedule",
                        "server-status-request"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "fs-backup-timeout": {
                      "description": "How long (in nanoseconds) pod volume file system backups/restores should be allowed to run before timing out. (default is 4 hours)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "garbage-collection-frequency": {
                      "description": "How often (in nanoseconds) garbage collection checks for expired backups. (default is 1 hour)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "item-operation-sync-frequency": {
                      "description": "How often (in nanoseconds) to check status on backup/restore operations after backup/restore processing.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "log-format": {
                      "description": "The format for log output. Valid values are text, json. (default text)",
                      "type": "string",
                      "enum": [
                        "text",
                        "json"
                      ]
                    },
                    "log_backtrace_at": {
                      "description": "when logging hits line file:N, emit a stack trace",
                      "type": "string"
                    },
                    "log_dir": {
                      "description": "If non-empty, write log files in this directory (no effect when -logtostderr=true)",
                      "type": "string"
                    },
                    "log_file": {
                      "description": "If non-empty, use this log file (no effect when -logtostderr=true)",
                      "type": "string"
                    },
                    "log_file_max_size": {
                      "description": "Defines the maximum size a log file can grow to (no effect when -logtostderr=true). Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)",
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "logtostderr": {
                      "description": "Boolean flags. Not handled atomically because the flag.Value interface\ndoes not let us avoid the =true, and that shorthand is necessary for\ncompatibility. TODO: does this matter enough to fix? Seems unlikely.",
                      "type": "boolean"
                    },
                    "max-concurrent-k8s-connections": {
                      "description": "Max concurrent connections number that Velero can create with kube-apiserver. Default is 30. (default 30)",
                      "type": "integer"
                    },
                    "metrics-address": {
                      "description": "The address to expose prometheus metrics",
                      "type": "string"
                    },
                    "one_output": {
                      "description": "If true, only write logs to their native severity level (vs also writing to each lower severity level; no effect when -logtostderr=true)",
                      "type": "boolean"
                    },
                    "profiler-address": {
                      "description": "The address to expose the pprof profiler.",
                      "type": "string"
                    },
                    "resource-timeout": {
                      "description": "How long (in nanoseconds) to wait for resource processes which are not covered by other specific timeout parameters. (default is 10 minutes)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "restore-resource-priorities": {
                      "description": "Desired order of resource restores, the priority list contains two parts which are split by \"-\" element. The resources before \"-\" element are restored first as high priorities, the resources after \"-\" element are restored last as low priorities, and any resource not in the list will be restored alphabetically between the high and low priorities. (default securitycontextconstraints,customresourcedefinitions,klusterletconfigs.config.open-cluster-management.io,managedcluster.cluster.open-cluster-management.io,namespaces,roles,rolebindings,clusterrolebindings,klusterletaddonconfig.agent.open-cluster-management.io,managedclusteraddon.addon.open-cluster-management.io,storageclasses,volumesnapshotclass.snapshot.storage.k8s.io,volumesnapshotcontents.snapshot.storage.k8s.io,volumesnapshots.snapshot.storage.k8s.io,datauploads.velero.io,persistentvolumes,persistentvolumeclaims,serviceaccounts,secrets,configmaps,limitranges,pods,replicasets.apps,clusterclasses.cluster.x-k8s.io,endpoints,services,-,clusterbootstraps.run.tanzu.vmware.com,clusters.cluster.x-k8s.io,clusterresourcesets.addons.cluster.x-k8s.io)",
                      "type": "string"
                    },
                    "skip_headers": {
                      "description": "If true, avoid header prefixes in the log messages",
                      "type": "boolean"
                    },
                    "skip_log_headers": {
                      "description": "If true, avoid headers when opening log files (no effect when -logtostderr=true)",
                      "type": "boolean"
                    },
                    "stderrthreshold": {
                      "description": "logs at or above this threshold go to stderr when writing to files and stderr (no effect when -logtostderr=true or -alsologtostderr=false) (default 2)",
                      "type": "integer"
                    },
                    "store-validation-frequency": {
                      "description": "How often (in nanoseconds) to verify if the storage is valid. Optional. Set this to `0` to disable sync. (default is 1 minute)",
                      "type": "integer",
                      "format": "int64"
                    },
                    "terminating-resource-timeout": {
                      "description": "How long (in nanoseconds) to wait on persistent volumes and namespaces to terminate during a restore before timing out.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "v": {
                      "description": "number for the log level verbosity",
                      "type": "integer"
                    },
                    "vmodule": {
                      "description": "comma-separated list of pattern=N settings for file-filtered logging",
                      "type": "string"
                    }
                  }
                },
                "client-burst": {
                  "description": "maximum number of requests by the server to the Kubernetes API in a short period of time. (default 100)",
                  "type": "integer"
                },
                "client-qps": {
                  "description": "maximum number of requests per second by the server to the Kubernetes API once the burst limit has been reached. (default 100)",
                  "type": "integer"
                },
                "customPlugins": {
                  "description": "customPlugins defines the custom plugin to be installed with Velero",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "image",
                      "name"
                    ],
                    "properties": {
                      "image": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "defaultItemOperationTimeout": {
                  "description": "How long to wait on asynchronous BackupItemActions and RestoreItemActions to complete before timing out. Default value is 1h.",
                  "type": "string"
                },
                "defaultPlugins": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "aws",
                      "legacy-aws",
                      "gcp",
                      "azure",
                      "csi",
                      "vsm",
                      "openshift",
                      "kubevirt"
                    ]
                  }
                },
                "defaultSnapshotMoveData": {
                  "description": "Specify whether CSI snapshot data should be moved to backup storage by default",
                  "type": "boolean"
                },
                "defaultVolumesToFSBackup": {
                  "description": "Use pod volume file system backup by default for volumes",
                  "type": "boolean"
                },
                "disableInformerCache": {
                  "description": "Disable informer cache for Get calls on restore. With this enabled, it will speed up restore in cases where there are backup resources which already exist in the cluster, but for very large clusters this will increase velero memory usage. Default is false.",
                  "type": "boolean"
                },
                "featureFlags": {
                  "description": "featureFlags defines the list of features to enable for Velero instance",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "itemOperationSyncFrequency": {
                  "description": "How often to check status on async backup/restore operations after backup processing. Default value is 2m.",
                  "type": "string"
                },
                "logLevel": {
                  "description": "Velero server\u2019s log level (use debug for the most logging, leave unset for velero default)",
                  "type": "string",
                  "enum": [
                    "trace",
                    "debug",
                    "info",
                    "warning",
                    "error",
                    "fatal",
                    "panic"
                  ]
                },
                "noDefaultBackupLocation": {
                  "description": "If you need to install Velero without a default backup storage location noDefaultBackupLocation flag is required for confirmation",
                  "type": "boolean"
                },
                "podConfig": {
                  "description": "Pod specific configuration",
                  "type": "object",
                  "properties": {
                    "env": {
                      "description": "env defines the list of environment variables to be supplied to podSpec",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "description": "labels to add to pods",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "nodeSelector": {
                      "description": "nodeSelector defines the nodeSelector to be supplied to podSpec",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "resourceAllocations": {
                      "description": "resourceAllocations defines the CPU, Memory and ephemeral-storage resource allocations for the Pod"
                    },
                    "tolerations": {
                      "description": "tolerations defines the list of tolerations to be applied to daemonset",
                      "type": "array",
                      "items": {
                        "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                        "type": "object",
                        "properties": {
                          "effect": {
                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                            "type": "string"
                          },
                          "key": {
                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                            "type": "string"
                          },
                          "tolerationSeconds": {
                            "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "value": {
                            "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "resourceTimeout": {
                  "description": "resourceTimeout defines how long to wait for several Velero resources before timeout occurs,\nsuch as Velero CRD availability, volumeSnapshot deletion, and repo availability.\nDefault is 10m",
                  "type": "string"
                },
                "restoreResourcesVersionPriority": {
                  "description": "restoreResourceVersionPriority represents a configmap that will be created if defined for use in conjunction with EnableAPIGroupVersions feature flag\nDefining this field automatically add EnableAPIGroupVersions to the velero server feature flag",
                  "type": "string"
                }
              }
            }
          }
        },
        "features": {
          "description": "features defines the configuration for the DPA to enable the OADP tech preview features",
          "type": "object",
          "properties": {
            "dataMover": {
              "description": "(do not use warning) Contains data mover specific configurations\ndataMover is for backwards compatibility and is not necessary in OADP 1.3\ndataMover will be removed with the OADP 1.4",
              "type": "object",
              "properties": {
                "credentialName": {
                  "description": "User supplied Restic Secret name",
                  "type": "string"
                },
                "enable": {
                  "description": "enable flag is used to specify whether you want to deploy the volume snapshot mover controller",
                  "type": "boolean"
                },
                "maxConcurrentBackupVolumes": {
                  "description": "the number of batched volumeSnapshotBackups that can be inProgress at once, default value is 10",
                  "type": "string"
                },
                "maxConcurrentRestoreVolumes": {
                  "description": "the number of batched volumeSnapshotRestores that can be inProgress at once, default value is 10",
                  "type": "string"
                },
                "pruneInterval": {
                  "description": "defines how often (in days) to prune the datamover snapshots from the repository",
                  "type": "string"
                },
                "schedule": {
                  "description": "schedule is a cronspec (https://en.wikipedia.org/wiki/Cron#Overview) that\ncan be used to schedule datamover(volsync) synchronization to occur at regular, time-based\nintervals. For example, in order to enforce datamover SnapshotRetainPolicy at a regular interval you need to\nspecify this Schedule trigger as a cron expression, by default the trigger is a manual trigger. For more details\non Volsync triggers, refer: https://volsync.readthedocs.io/en/stable/usage/triggers.html",
                  "type": "string",
                  "pattern": "^(\\d+|\\*)(/\\d+)?(\\s+(\\d+|\\*)(/\\d+)?){4}$"
                },
                "snapshotRetainPolicy": {
                  "description": "defines the parameters that can be specified for retention of datamover snapshots",
                  "type": "object",
                  "properties": {
                    "daily": {
                      "description": "Daily defines the number of snapshots to be kept daily",
                      "type": "string"
                    },
                    "hourly": {
                      "description": "Hourly defines the number of snapshots to be kept hourly",
                      "type": "string"
                    },
                    "monthly": {
                      "description": "Monthly defines the number of snapshots to be kept monthly",
                      "type": "string"
                    },
                    "weekly": {
                      "description": "Weekly defines the number of snapshots to be kept weekly",
                      "type": "string"
                    },
                    "within": {
                      "description": "Within defines the number of snapshots to be kept Within the given time period",
                      "type": "string"
                    },
                    "yearly": {
                      "description": "Yearly defines the number of snapshots to be kept yearly",
                      "type": "string"
                    }
                  }
                },
                "timeout": {
                  "description": "User supplied timeout to be used for VolumeSnapshotBackup and VolumeSnapshotRestore to complete, default value is 10m",
                  "type": "string"
                },
                "volumeOptionsForStorageClasses": {
                  "description": "defines configurations for data mover volume options for a storageClass",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "destinationVolumeOptions": {
                        "description": "VolumeOptions defines configurations for VolSync options",
                        "type": "object",
                        "properties": {
                          "accessMode": {
                            "description": "accessMode can be used to override the accessMode of the source or\ndestination PVC",
                            "type": "string"
                          },
                          "cacheAccessMode": {
                            "description": "cacheAccessMode is the access mode to be used to provision the cache volume",
                            "type": "string"
                          },
                          "cacheCapacity": {
                            "description": "cacheCapacity determines the size of the restic metadata cache volume",
                            "type": "string"
                          },
                          "cacheStorageClassName": {
                            "description": "cacheStorageClassName is the storageClass that should be used when provisioning\nthe data mover cache volume",
                            "type": "string"
                          },
                          "storageClassName": {
                            "description": "storageClassName can be used to override the StorageClass of the source\nor destination PVC",
                            "type": "string"
                          }
                        }
                      },
                      "sourceVolumeOptions": {
                        "description": "VolumeOptions defines configurations for VolSync options",
                        "type": "object",
                        "properties": {
                          "accessMode": {
                            "description": "accessMode can be used to override the accessMode of the source or\ndestination PVC",
                            "type": "string"
                          },
                          "cacheAccessMode": {
                            "description": "cacheAccessMode is the access mode to be used to provision the cache volume",
                            "type": "string"
                          },
                          "cacheCapacity": {
                            "description": "cacheCapacity determines the size of the restic metadata cache volume",
                            "type": "string"
                          },
                          "cacheStorageClassName": {
                            "description": "cacheStorageClassName is the storageClass that should be used when provisioning\nthe data mover cache volume",
                            "type": "string"
                          },
                          "storageClassName": {
                            "description": "storageClassName can be used to override the StorageClass of the source\nor destination PVC",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "imagePullPolicy": {
          "description": "which imagePullPolicy to use in all container images used by OADP.\nBy default, for images with sha256 or sha512 digest, OADP uses IfNotPresent and uses Always for all other images.",
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "podAnnotations": {
          "description": "add annotations to pods deployed by operator",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "podDnsConfig": {
          "description": "podDnsConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy.\nhttps://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config",
          "type": "object",
          "properties": {
            "nameservers": {
              "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "options": {
              "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
              "type": "array",
              "items": {
                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Required.",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "searches": {
              "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "podDnsPolicy": {
          "description": "podDnsPolicy defines how a pod's DNS will be configured.\nhttps://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy",
          "type": "string"
        },
        "snapshotLocations": {
          "description": "snapshotLocations defines the list of desired configuration to use for VolumeSnapshotLocations",
          "type": "array",
          "items": {
            "description": "SnapshotLocation defines the configuration for the DPA snapshot store",
            "type": "object",
            "required": [
              "velero"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "velero": {
                "description": "VolumeSnapshotLocationSpec defines the specification for a Velero VolumeSnapshotLocation.",
                "type": "object",
                "required": [
                  "provider"
                ],
                "properties": {
                  "config": {
                    "description": "Config is for provider-specific configuration fields.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "credential": {
                    "description": "Credential contains the credential information intended to be used with this location",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "provider": {
                    "description": "Provider is the provider of the volume storage.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "unsupportedOverrides": {
          "description": "unsupportedOverrides can be used to override images used in deployments.\nAvailable keys are:\n  - veleroImageFqin\n  - awsPluginImageFqin\n  - legacyAWSPluginImageFqin\n  - openshiftPluginImageFqin\n  - azurePluginImageFqin\n  - gcpPluginImageFqin\n  - resticRestoreImageFqin\n  - kubevirtPluginImageFqin\n  - operator-type",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "status": {
      "description": "DataProtectionApplicationStatus defines the observed state of DataProtectionApplication",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "oadp.openshift.io",
      "kind": "DataProtectionApplication",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}