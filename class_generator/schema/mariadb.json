{
  "description": "MariaDB is the Schema for the mariadbs API. It is used to define MariaDB clusters.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "MariaDBSpec defines the desired state of MariaDB",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity to be used in the Pod.",
          "type": "object",
          "properties": {
            "antiAffinityEnabled": {
              "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
              "type": "boolean"
            },
            "podAntiAffinity": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                    "type": "object",
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      },
                      "weight": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                    "type": "object",
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              }
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      },
                      "topologyKey": {
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            }
          }
        },
        "args": {
          "description": "Args to be used in the Container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bootstrapFrom": {
          "description": "BootstrapFrom defines a source to bootstrap from.",
          "type": "object",
          "properties": {
            "backupRef": {
              "description": "BackupRef is a reference to a Backup object. It has priority over S3 and Volume.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "restoreJob": {
              "description": "RestoreJob defines additional properties for the Job used to perform the Restore.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity to be used in the Pod.",
                  "type": "object",
                  "properties": {
                    "antiAffinityEnabled": {
                      "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
                      "type": "boolean"
                    },
                    "podAntiAffinity": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                            "type": "object",
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                                "type": "object",
                                "required": [
                                  "topologyKey"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                            "type": "object",
                            "required": [
                              "topologyKey"
                            ],
                            "properties": {
                              "labelSelector": {
                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    }
                  }
                },
                "args": {
                  "description": "Args to be used in the Container.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metadata": {
                  "description": "Metadata defines additional metadata for the bootstrap Jobs.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "s3": {
              "description": "S3 defines the configuration to restore backups from a S3 compatible storage. It has priority over Volume.",
              "type": "object",
              "required": [
                "accessKeyIdSecretKeyRef",
                "bucket",
                "endpoint",
                "secretAccessKeySecretKeyRef"
              ],
              "properties": {
                "accessKeyIdSecretKeyRef": {
                  "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 access key id.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "bucket": {
                  "description": "Bucket is the name Name of the bucket to store backups.",
                  "type": "string"
                },
                "endpoint": {
                  "description": "Endpoint is the S3 API endpoint without scheme.",
                  "type": "string"
                },
                "prefix": {
                  "description": "Prefix indicates a folder/subfolder in the bucket. For example: mariadb/ or mariadb/backups. A trailing slash '/' is added if not provided.",
                  "type": "string"
                },
                "region": {
                  "description": "Region is the S3 region name to use.",
                  "type": "string"
                },
                "secretAccessKeySecretKeyRef": {
                  "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 secret key.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "sessionTokenSecretKeyRef": {
                  "description": "SessionTokenSecretKeyRef is a reference to a Secret key containing the S3 session token.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "tls": {
                  "description": "TLS provides the configuration required to establish TLS connections with S3.",
                  "type": "object",
                  "properties": {
                    "caSecretKeyRef": {
                      "description": "CASecretKeyRef is a reference to a Secret key containing a CA bundle in PEM format used to establish TLS connections with S3.\nBy default, the system trust chain will be used, but you can use this field to add more CAs to the bundle.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "enabled": {
                      "description": "Enabled is a flag to enable TLS.",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "targetRecoveryTime": {
              "description": "TargetRecoveryTime is a RFC3339 (1970-01-01T00:00:00Z) date and time that defines the point in time recovery objective.\nIt is used to determine the closest restoration source in time.",
              "type": "string",
              "format": "date-time"
            },
            "volume": {
              "description": "Volume is a Kubernetes Volume object that contains a backup.",
              "type": "object",
              "properties": {
                "csi": {
                  "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
                  "type": "object",
                  "required": [
                    "driver"
                  ],
                  "properties": {
                    "driver": {
                      "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                      "type": "string"
                    },
                    "fsType": {
                      "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                      "type": "string"
                    },
                    "nodePublishSecretRef": {
                      "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "readOnly": {
                      "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                      "type": "boolean"
                    },
                    "volumeAttributes": {
                      "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "emptyDir": {
                  "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling.",
                  "type": "object",
                  "properties": {
                    "medium": {
                      "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "type": "string"
                    },
                    "sizeLimit": {
                      "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "nfs": {
                  "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling.",
                  "type": "object",
                  "required": [
                    "path",
                    "server"
                  ],
                  "properties": {
                    "path": {
                      "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                      "type": "boolean"
                    },
                    "server": {
                      "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                      "type": "string"
                    }
                  }
                },
                "persistentVolumeClaim": {
                  "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system).",
                  "type": "object",
                  "required": [
                    "claimName"
                  ],
                  "properties": {
                    "claimName": {
                      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "command": {
          "description": "Command to be used in the Container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connection": {
          "description": "Connection defines a template to configure the general Connection object.\nThis Connection provides the initial User access to the initial Database.\nIt will make use of the Service to route network traffic to all Pods.",
          "type": "object",
          "properties": {
            "healthCheck": {
              "description": "HealthCheck to be used in the Connection.",
              "type": "object",
              "properties": {
                "interval": {
                  "description": "Interval used to perform health checks.",
                  "type": "string"
                },
                "retryInterval": {
                  "description": "RetryInterval is the interval used to perform health check retries.",
                  "type": "string"
                }
              }
            },
            "params": {
              "description": "Params to be used in the Connection.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "port": {
              "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
              "type": "integer",
              "format": "int32"
            },
            "secretName": {
              "description": "SecretName to be used in the Connection.",
              "type": "string"
            },
            "secretTemplate": {
              "description": "SecretTemplate to be used in the Connection.",
              "type": "object",
              "properties": {
                "databaseKey": {
                  "description": "DatabaseKey to be used in the Secret.",
                  "type": "string"
                },
                "format": {
                  "description": "Format to be used in the Secret.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "HostKey to be used in the Secret.",
                  "type": "string"
                },
                "key": {
                  "description": "Key to be used in the Secret.",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata to be added to the Secret object.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "passwordKey": {
                  "description": "PasswordKey to be used in the Secret.",
                  "type": "string"
                },
                "portKey": {
                  "description": "PortKey to be used in the Secret.",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "UsernameKey to be used in the Secret.",
                  "type": "string"
                }
              }
            },
            "serviceName": {
              "description": "ServiceName to be used in the Connection.",
              "type": "string"
            }
          }
        },
        "database": {
          "description": "Database is the name of the initial Database.",
          "type": "string"
        },
        "env": {
          "description": "Env represents the environment variables to be injected in a container.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "valueFrom": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                "type": "object",
                "properties": {
                  "configMapKeyRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#configmapkeyselector-v1-core.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "fieldRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#objectfieldselector-v1-core.",
                    "type": "object",
                    "required": [
                      "fieldPath"
                    ],
                    "properties": {
                      "apiVersion": {
                        "type": "string"
                      },
                      "fieldPath": {
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "secretKeyRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#secretkeyselector-v1-core.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              }
            }
          }
        },
        "envFrom": {
          "description": "EnvFrom represents the references (via ConfigMap and Secrets) to environment variables to be injected in the container.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envfromsource-v1-core.",
            "type": "object",
            "properties": {
              "configMapRef": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "prefix": {
                "type": "string"
              },
              "secretRef": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "galera": {
          "description": "Replication configures high availability via Galera.",
          "type": "object",
          "properties": {
            "agent": {
              "description": "GaleraAgent is a sidecar agent that co-operates with mariadb-operator.",
              "type": "object",
              "properties": {
                "args": {
                  "description": "Args to be used in the Container.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "basicAuth": {
                  "description": "BasicAuth to be used by the agent container",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Enabled is a flag to enable BasicAuth",
                      "type": "boolean"
                    },
                    "passwordSecretKeyRef": {
                      "description": "PasswordSecretKeyRef to be used for basic authentication",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "generate": {
                          "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                          "type": "boolean"
                        },
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "username": {
                      "description": "Username to be used for basic authentication",
                      "type": "string"
                    }
                  }
                },
                "command": {
                  "description": "Command to be used in the Container.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "env": {
                  "description": "Env represents the environment variables to be injected in a container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "valueFrom": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#configmapkeyselector-v1-core.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#objectfieldselector-v1-core.",
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#secretkeyselector-v1-core.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    }
                  }
                },
                "envFrom": {
                  "description": "EnvFrom represents the references (via ConfigMap and Secrets) to environment variables to be injected in the container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envfromsource-v1-core.",
                    "type": "object",
                    "properties": {
                      "configMapRef": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "prefix": {
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "gracefulShutdownTimeout": {
                  "description": "GracefulShutdownTimeout is the time we give to the agent container in order to gracefully terminate in-flight requests.",
                  "type": "string"
                },
                "image": {
                  "description": "Image name to be used by the MariaDB instances. The supported format is `<image>:<tag>`.",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                "kubernetesAuth": {
                  "description": "KubernetesAuth to be used by the agent container",
                  "type": "object",
                  "properties": {
                    "authDelegatorRoleName": {
                      "description": "AuthDelegatorRoleName is the name of the ClusterRoleBinding that is associated with the \"system:auth-delegator\" ClusterRole.\nIt is necessary for creating TokenReview objects in order for the agent to validate the service account token.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Enabled is a flag to enable KubernetesAuth",
                      "type": "boolean"
                    }
                  }
                },
                "livenessProbe": {
                  "description": "LivenessProbe to be used in the Container.",
                  "type": "object",
                  "properties": {
                    "exec": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "failureThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpGet": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
                      "type": "object",
                      "required": [
                        "port"
                      ],
                      "properties": {
                        "host": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "port": {
                          "x-kubernetes-int-or-string": true
                        },
                        "scheme": {
                          "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                          "type": "string"
                        }
                      }
                    },
                    "initialDelaySeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "periodSeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "successThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeoutSeconds": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "port": {
                  "description": "Port where the agent will be listening for connections.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessProbe": {
                  "description": "ReadinessProbe to be used in the Container.",
                  "type": "object",
                  "properties": {
                    "exec": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "failureThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpGet": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
                      "type": "object",
                      "required": [
                        "port"
                      ],
                      "properties": {
                        "host": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "port": {
                          "x-kubernetes-int-or-string": true
                        },
                        "scheme": {
                          "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                          "type": "string"
                        }
                      }
                    },
                    "initialDelaySeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "periodSeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "successThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeoutSeconds": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "SecurityContext holds security configuration that will be applied to a container.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "description": "Adds and removes POSIX capabilities from running containers.",
                      "type": "object",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts to be used in the Container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
                    "type": "object",
                    "required": [
                      "mountPath",
                      "name"
                    ],
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "name": {
                        "description": "This must match the Name of a Volume.",
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "availableWhenDonor": {
              "description": "AvailableWhenDonor indicates whether a donor node should be responding to queries. It defaults to false.",
              "type": "boolean"
            },
            "config": {
              "description": "GaleraConfig defines storage options for the Galera configuration files.",
              "type": "object",
              "properties": {
                "reuseStorageVolume": {
                  "description": "ReuseStorageVolume indicates that storage volume used by MariaDB should be reused to store the Galera configuration files.\nIt defaults to false, which implies that a dedicated volume for the Galera configuration files is provisioned.",
                  "type": "boolean"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate is a template for the PVC that will contain the Galera configuration files shared between the InitContainer, Agent and MariaDB.",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "metadata": {
                      "description": "Metadata to be added to the PVC metadata.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "Annotations to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Labels to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resources": {
                      "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "selector": {
                      "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "storageClassName": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "enabled": {
              "description": "Enabled is a flag to enable Galera.",
              "type": "boolean"
            },
            "galeraLibPath": {
              "description": "GaleraLibPath is a path inside the MariaDB image to the wsrep provider plugin. It is defaulted if not provided.\nMore info: https://galeracluster.com/library/documentation/mysql-wsrep-options.html#wsrep-provider.",
              "type": "string"
            },
            "initContainer": {
              "description": "InitContainer is an init container that runs in the MariaDB Pod and co-operates with mariadb-operator.",
              "type": "object",
              "required": [
                "image"
              ],
              "properties": {
                "args": {
                  "description": "Args to be used in the Container.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "command": {
                  "description": "Command to be used in the Container.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "env": {
                  "description": "Env represents the environment variables to be injected in a container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "valueFrom": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#configmapkeyselector-v1-core.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#objectfieldselector-v1-core.",
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#secretkeyselector-v1-core.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    }
                  }
                },
                "envFrom": {
                  "description": "EnvFrom represents the references (via ConfigMap and Secrets) to environment variables to be injected in the container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envfromsource-v1-core.",
                    "type": "object",
                    "properties": {
                      "configMapRef": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "prefix": {
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "image": {
                  "description": "Image name to be used by the MariaDB instances. The supported format is `<image>:<tag>`.",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                "livenessProbe": {
                  "description": "LivenessProbe to be used in the Container.",
                  "type": "object",
                  "properties": {
                    "exec": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "failureThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpGet": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
                      "type": "object",
                      "required": [
                        "port"
                      ],
                      "properties": {
                        "host": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "port": {
                          "x-kubernetes-int-or-string": true
                        },
                        "scheme": {
                          "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                          "type": "string"
                        }
                      }
                    },
                    "initialDelaySeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "periodSeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "successThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeoutSeconds": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "readinessProbe": {
                  "description": "ReadinessProbe to be used in the Container.",
                  "type": "object",
                  "properties": {
                    "exec": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "failureThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "httpGet": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
                      "type": "object",
                      "required": [
                        "port"
                      ],
                      "properties": {
                        "host": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "port": {
                          "x-kubernetes-int-or-string": true
                        },
                        "scheme": {
                          "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                          "type": "string"
                        }
                      }
                    },
                    "initialDelaySeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "periodSeconds": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "successThreshold": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeoutSeconds": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "SecurityContext holds security configuration that will be applied to a container.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "description": "Adds and removes POSIX capabilities from running containers.",
                      "type": "object",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "volumeMounts": {
                  "description": "VolumeMounts to be used in the Container.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
                    "type": "object",
                    "required": [
                      "mountPath",
                      "name"
                    ],
                    "properties": {
                      "mountPath": {
                        "type": "string"
                      },
                      "name": {
                        "description": "This must match the Name of a Volume.",
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "subPath": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "initJob": {
              "description": "InitJob defines a Job that co-operates with mariadb-operator by performing initialization tasks.",
              "type": "object",
              "properties": {
                "metadata": {
                  "description": "Metadata defines additional metadata for the Galera init Job.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                }
              }
            },
            "primary": {
              "description": "Primary is the Galera configuration for the primary node.",
              "type": "object",
              "properties": {
                "automaticFailover": {
                  "description": "AutomaticFailover indicates whether the operator should automatically update PodIndex to perform an automatic primary failover.",
                  "type": "boolean"
                },
                "podIndex": {
                  "description": "PodIndex is the StatefulSet index of the primary node. The user may change this field to perform a manual switchover.",
                  "type": "integer"
                }
              }
            },
            "providerOptions": {
              "description": "ProviderOptions is map of Galera configuration parameters.\nMore info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_provider_options.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "recovery": {
              "description": "GaleraRecovery is the recovery process performed by the operator whenever the Galera cluster is not healthy.\nMore info: https://galeracluster.com/library/documentation/crash-recovery.html.",
              "type": "object",
              "properties": {
                "clusterBootstrapTimeout": {
                  "description": "ClusterBootstrapTimeout is the time limit for bootstrapping a cluster.\nOnce this timeout is reached, the Galera recovery state is reset and a new cluster bootstrap will be attempted.",
                  "type": "string"
                },
                "clusterDownscaleTimeout": {
                  "description": "ClusterDownscaleTimeout represents the maximum duration for downscaling the cluster's StatefulSet during the recovery process.",
                  "type": "string"
                },
                "clusterHealthyTimeout": {
                  "description": "ClusterHealthyTimeout represents the duration at which a Galera cluster, that consistently failed health checks,\nis considered unhealthy, and consequently the Galera recovery process will be initiated by the operator.",
                  "type": "string"
                },
                "clusterMonitorInterval": {
                  "description": "ClusterMonitorInterval represents the interval used to monitor the Galera cluster health.",
                  "type": "string"
                },
                "clusterUpscaleTimeout": {
                  "description": "ClusterUpscaleTimeout represents the maximum duration for upscaling the cluster's StatefulSet during the recovery process.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Enabled is a flag to enable GaleraRecovery.",
                  "type": "boolean"
                },
                "forceClusterBootstrapInPod": {
                  "description": "ForceClusterBootstrapInPod allows you to manually initiate the bootstrap process in a specific Pod.\nIMPORTANT: Use this option only in exceptional circumstances. Not selecting the Pod with the highest sequence number may result in data loss.\nIMPORTANT: Ensure you unset this field after completing the bootstrap to allow the operator to choose the appropriate Pod to bootstrap from in an event of cluster recovery.",
                  "type": "string"
                },
                "job": {
                  "description": "Job defines a Job that co-operates with mariadb-operator by performing the Galera cluster recovery .",
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata defines additional metadata for the Galera recovery Jobs.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "Annotations to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Labels to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "podAffinity": {
                      "description": "PodAffinity indicates whether the recovery Jobs should run in the same Node as the MariaDB Pods. It defaults to true.",
                      "type": "boolean"
                    },
                    "resources": {
                      "description": "Resouces describes the compute resource requirements.",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    }
                  }
                },
                "minClusterSize": {
                  "description": "MinClusterSize is the minimum number of replicas to consider the cluster healthy. It can be either a number of replicas (1) or a percentage (50%).\nIf Galera consistently reports less replicas than this value for the given 'ClusterHealthyTimeout' interval, a cluster recovery is iniated.\nIt defaults to '1' replica, and it is highly recommendeded to keep this value at '1' in most cases.\nIf set to more than one replica, the cluster recovery process may restart the healthy replicas as well.",
                  "x-kubernetes-int-or-string": true
                },
                "podRecoveryTimeout": {
                  "description": "PodRecoveryTimeout is the time limit for recevorying the sequence of a Pod during the cluster recovery.",
                  "type": "string"
                },
                "podSyncTimeout": {
                  "description": "PodSyncTimeout is the time limit for a Pod to join the cluster after having performed a cluster bootstrap during the cluster recovery.",
                  "type": "string"
                }
              }
            },
            "replicaThreads": {
              "description": "ReplicaThreads is the number of replica threads used to apply Galera write sets in parallel.\nMore info: https://mariadb.com/kb/en/galera-cluster-system-variables/#wsrep_slave_threads.",
              "type": "integer"
            },
            "sst": {
              "description": "SST is the Snapshot State Transfer used when new Pods join the cluster.\nMore info: https://galeracluster.com/library/documentation/sst.html.",
              "type": "string",
              "enum": [
                "rsync",
                "mariabackup",
                "mysqldump"
              ]
            }
          }
        },
        "image": {
          "description": "Image name to be used by the MariaDB instances. The supported format is `<image>:<tag>`.\nOnly MariaDB official images are supported.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
          "type": "string",
          "enum": [
            "Always",
            "Never",
            "IfNotPresent"
          ]
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "inheritMetadata": {
          "description": "InheritMetadata defines the metadata to be inherited by children resources.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "initContainers": {
          "description": "InitContainers to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "Container object definition.",
            "type": "object",
            "required": [
              "image"
            ],
            "properties": {
              "args": {
                "description": "Args to be used in the Container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "description": "Command to be used in the Container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "image": {
                "description": "Image name to be used by the container. The supported format is `<image>:<tag>`.",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                "type": "string",
                "enum": [
                  "Always",
                  "Never",
                  "IfNotPresent"
                ]
              },
              "name": {
                "description": "Name to be given to the container.",
                "type": "string"
              },
              "resources": {
                "description": "Resouces describes the compute resource requirements.",
                "type": "object",
                "properties": {
                  "limits": {
                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "volumeMounts": {
                "description": "VolumeMounts to be used in the Container.",
                "type": "array",
                "items": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "subPath": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe to be used in the Container.",
          "type": "object",
          "properties": {
            "exec": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
              "type": "object",
              "properties": {
                "command": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "failureThreshold": {
              "type": "integer",
              "format": "int32"
            },
            "httpGet": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                  "type": "string"
                }
              }
            },
            "initialDelaySeconds": {
              "type": "integer",
              "format": "int32"
            },
            "periodSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "successThreshold": {
              "type": "integer",
              "format": "int32"
            },
            "timeoutSeconds": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "maxScale": {
          "description": "MaxScale is the MaxScale specification that defines the MaxScale resource to be used with the current MariaDB.\nWhen enabling this field, MaxScaleRef is automatically set.",
          "type": "object",
          "properties": {
            "admin": {
              "description": "Admin configures the admin REST API and GUI.",
              "type": "object",
              "properties": {
                "guiEnabled": {
                  "description": "GuiEnabled indicates whether the admin GUI should be enabled.",
                  "type": "boolean"
                },
                "port": {
                  "description": "Port where the admin REST API and GUI will be exposed.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "auth": {
              "description": "Auth defines the credentials required for MaxScale to connect to MariaDB.",
              "type": "object",
              "properties": {
                "adminPasswordSecretKeyRef": {
                  "description": "AdminPasswordSecretKeyRef is Secret key reference to the admin password to call the admin REST API. It is defaulted if not provided.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "adminUsername": {
                  "description": "AdminUsername is an admin username to call the admin REST API. It is defaulted if not provided.",
                  "type": "string"
                },
                "clientMaxConnections": {
                  "description": "ClientMaxConnections defines the maximum number of connections that the client can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
                  "type": "integer",
                  "format": "int32"
                },
                "clientPasswordSecretKeyRef": {
                  "description": "ClientPasswordSecretKeyRef is Secret key reference to the password to connect to MaxScale. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "clientUsername": {
                  "description": "ClientUsername is the user to connect to MaxScale. It is defaulted if not provided.",
                  "type": "string"
                },
                "deleteDefaultAdmin": {
                  "description": "DeleteDefaultAdmin determines whether the default admin user should be deleted after the initial configuration. If not provided, it defaults to true.",
                  "type": "boolean"
                },
                "generate": {
                  "description": "Generate  defies whether the operator should generate users and grants for MaxScale to work.\nIt only supports MariaDBs specified via spec.mariaDbRef.",
                  "type": "boolean"
                },
                "metricsPasswordSecretKeyRef": {
                  "description": "MetricsPasswordSecretKeyRef is Secret key reference to the metrics password to call the admib REST API. It is defaulted if metrics are enabled.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "metricsUsername": {
                  "description": "MetricsUsername is an metrics username to call the REST API. It is defaulted if metrics are enabled.",
                  "type": "string"
                },
                "monitorMaxConnections": {
                  "description": "MonitorMaxConnections defines the maximum number of connections that the monitor can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
                  "type": "integer",
                  "format": "int32"
                },
                "monitorPasswordSecretKeyRef": {
                  "description": "MonitorPasswordSecretKeyRef is Secret key reference to the password used by MaxScale monitor to connect to MariaDB server. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "monitorUsername": {
                  "description": "MonitorUsername is the user used by MaxScale monitor to connect to MariaDB server. It is defaulted if not provided.",
                  "type": "string"
                },
                "serverMaxConnections": {
                  "description": "ServerMaxConnections defines the maximum number of connections that the server can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
                  "type": "integer",
                  "format": "int32"
                },
                "serverPasswordSecretKeyRef": {
                  "description": "ServerPasswordSecretKeyRef is Secret key reference to the password used by MaxScale to connect to MariaDB server. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "serverUsername": {
                  "description": "ServerUsername is the user used by MaxScale to connect to MariaDB server. It is defaulted if not provided.",
                  "type": "string"
                },
                "syncMaxConnections": {
                  "description": "SyncMaxConnections defines the maximum number of connections that the sync can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
                  "type": "integer",
                  "format": "int32"
                },
                "syncPasswordSecretKeyRef": {
                  "description": "SyncPasswordSecretKeyRef is Secret key reference to the password used by MaxScale config to connect to MariaDB server. It is defaulted when HA is enabled.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "syncUsername": {
                  "description": "MonitoSyncUsernamerUsername is the user used by MaxScale config sync to connect to MariaDB server. It is defaulted when HA is enabled.",
                  "type": "string"
                }
              }
            },
            "config": {
              "description": "Config defines the MaxScale configuration.",
              "type": "object",
              "properties": {
                "params": {
                  "description": "Params is a key value pair of parameters to be used in the MaxScale static configuration file.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#global-settings.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sync": {
                  "description": "Sync defines how to replicate configuration across MaxScale replicas. It is defaulted when HA is enabled.",
                  "type": "object",
                  "properties": {
                    "database": {
                      "description": "Database is the MariaDB logical database where the 'maxscale_config' table will be created in order to persist and synchronize config changes. If not provided, it defaults to 'mysql'.",
                      "type": "string"
                    },
                    "interval": {
                      "description": "Interval defines the config synchronization interval. It is defaulted if not provided.",
                      "type": "string"
                    },
                    "timeout": {
                      "description": "Interval defines the config synchronization timeout. It is defaulted if not provided.",
                      "type": "string"
                    }
                  }
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate provides a template to define the PVCs for storing MaxScale runtime configuration files. It is defaulted if not provided.",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "metadata": {
                      "description": "Metadata to be added to the PVC metadata.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "Annotations to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Labels to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resources": {
                      "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "selector": {
                      "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "storageClassName": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "connection": {
              "description": "Connection provides a template to define the Connection for MaxScale.",
              "type": "object",
              "properties": {
                "healthCheck": {
                  "description": "HealthCheck to be used in the Connection.",
                  "type": "object",
                  "properties": {
                    "interval": {
                      "description": "Interval used to perform health checks.",
                      "type": "string"
                    },
                    "retryInterval": {
                      "description": "RetryInterval is the interval used to perform health check retries.",
                      "type": "string"
                    }
                  }
                },
                "params": {
                  "description": "Params to be used in the Connection.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "port": {
                  "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
                  "type": "integer",
                  "format": "int32"
                },
                "secretName": {
                  "description": "SecretName to be used in the Connection.",
                  "type": "string"
                },
                "secretTemplate": {
                  "description": "SecretTemplate to be used in the Connection.",
                  "type": "object",
                  "properties": {
                    "databaseKey": {
                      "description": "DatabaseKey to be used in the Secret.",
                      "type": "string"
                    },
                    "format": {
                      "description": "Format to be used in the Secret.",
                      "type": "string"
                    },
                    "hostKey": {
                      "description": "HostKey to be used in the Secret.",
                      "type": "string"
                    },
                    "key": {
                      "description": "Key to be used in the Secret.",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Metadata to be added to the Secret object.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "Annotations to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Labels to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "passwordKey": {
                      "description": "PasswordKey to be used in the Secret.",
                      "type": "string"
                    },
                    "portKey": {
                      "description": "PortKey to be used in the Secret.",
                      "type": "string"
                    },
                    "usernameKey": {
                      "description": "UsernameKey to be used in the Secret.",
                      "type": "string"
                    }
                  }
                },
                "serviceName": {
                  "description": "ServiceName to be used in the Connection.",
                  "type": "string"
                }
              }
            },
            "enabled": {
              "description": "Enabled is a flag to enable a MaxScale instance to be used with the current MariaDB.",
              "type": "boolean"
            },
            "guiKubernetesService": {
              "description": "GuiKubernetesService define a template for a Kubernetes Service object to connect to MaxScale's GUI.",
              "type": "object",
              "properties": {
                "allocateLoadBalancerNodePorts": {
                  "description": "AllocateLoadBalancerNodePorts Service field.",
                  "type": "boolean"
                },
                "externalTrafficPolicy": {
                  "description": "ExternalTrafficPolicy Service field.",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "description": "LoadBalancerIP Service field.",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "LoadBalancerSourceRanges Service field.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metadata": {
                  "description": "Metadata to be added to the Service metadata.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sessionAffinity": {
                  "description": "SessionAffinity Service field.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              }
            },
            "image": {
              "description": "Image name to be used by the MaxScale instances. The supported format is `<image>:<tag>`.\nOnly MariaDB official images are supported.",
              "type": "string"
            },
            "imagePullPolicy": {
              "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
              "type": "string",
              "enum": [
                "Always",
                "Never",
                "IfNotPresent"
              ]
            },
            "kubernetesService": {
              "description": "KubernetesService defines a template for a Kubernetes Service object to connect to MaxScale.",
              "type": "object",
              "properties": {
                "allocateLoadBalancerNodePorts": {
                  "description": "AllocateLoadBalancerNodePorts Service field.",
                  "type": "boolean"
                },
                "externalTrafficPolicy": {
                  "description": "ExternalTrafficPolicy Service field.",
                  "type": "string"
                },
                "loadBalancerIP": {
                  "description": "LoadBalancerIP Service field.",
                  "type": "string"
                },
                "loadBalancerSourceRanges": {
                  "description": "LoadBalancerSourceRanges Service field.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metadata": {
                  "description": "Metadata to be added to the Service metadata.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "sessionAffinity": {
                  "description": "SessionAffinity Service field.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              }
            },
            "metrics": {
              "description": "Metrics configures metrics and how to scrape them.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enabled is a flag to enable Metrics",
                  "type": "boolean"
                },
                "exporter": {
                  "description": "Exporter defines the metrics exporter container.",
                  "type": "object",
                  "properties": {
                    "affinity": {
                      "description": "Affinity to be used in the Pod.",
                      "type": "object",
                      "properties": {
                        "antiAffinityEnabled": {
                          "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
                          "type": "boolean"
                        },
                        "podAntiAffinity": {
                          "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
                          "type": "object",
                          "properties": {
                            "preferredDuringSchedulingIgnoredDuringExecution": {
                              "type": "array",
                              "items": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                                "type": "object",
                                "required": [
                                  "podAffinityTerm",
                                  "weight"
                                ],
                                "properties": {
                                  "podAffinityTerm": {
                                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                                    "type": "object",
                                    "required": [
                                      "topologyKey"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                }
                                              }
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "weight": {
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "type": "array",
                              "items": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                                "type": "object",
                                "required": [
                                  "topologyKey"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        }
                      }
                    },
                    "image": {
                      "description": "Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.\nOnly mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "Never",
                        "IfNotPresent"
                      ]
                    },
                    "imagePullSecrets": {
                      "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
                      "type": "array",
                      "items": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "nodeSelector": {
                      "description": "NodeSelector to be used in the Pod.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "podMetadata": {
                      "description": "PodMetadata defines extra metadata for the Pod.",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "Annotations to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "labels": {
                          "description": "Labels to be added to children resources.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "podSecurityContext": {
                      "description": "SecurityContext holds pod-level security attributes and common container settings.",
                      "type": "object",
                      "properties": {
                        "appArmorProfile": {
                          "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "fsGroup": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "fsGroupChangePolicy": {
                          "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                          "type": "string"
                        },
                        "runAsGroup": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "SELinuxOptions are the labels to be applied to the container",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "supplementalGroups": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "port": {
                      "description": "Port where the exporter will be listening for connections.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "priorityClassName": {
                      "description": "PriorityClassName to be used in the Pod.",
                      "type": "string"
                    },
                    "resources": {
                      "description": "Resouces describes the compute resource requirements.",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "securityContext": {
                      "description": "SecurityContext holds container-level security attributes.",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "type": "boolean"
                        },
                        "capabilities": {
                          "description": "Adds and removes POSIX capabilities from running containers.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "type": "boolean"
                        },
                        "readOnlyRootFilesystem": {
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    },
                    "tolerations": {
                      "description": "Tolerations to be used in the Pod.",
                      "type": "array",
                      "items": {
                        "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                        "type": "object",
                        "properties": {
                          "effect": {
                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                            "type": "string"
                          },
                          "key": {
                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                            "type": "string"
                          },
                          "tolerationSeconds": {
                            "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "value": {
                            "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor defines the ServiceMonior object.",
                  "type": "object",
                  "properties": {
                    "interval": {
                      "description": "Interval for scraping metrics.",
                      "type": "string"
                    },
                    "jobLabel": {
                      "description": "JobLabel to add to the ServiceMonitor object.",
                      "type": "string"
                    },
                    "prometheusRelease": {
                      "description": "PrometheusRelease is the release label to add to the ServiceMonitor object.",
                      "type": "string"
                    },
                    "scrapeTimeout": {
                      "description": "ScrapeTimeout defines the timeout for scraping metrics.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "monitor": {
              "description": "Monitor monitors MariaDB server instances.",
              "type": "object",
              "properties": {
                "cooperativeMonitoring": {
                  "description": "CooperativeMonitoring enables coordination between multiple MaxScale instances running monitors. It is defaulted when HA is enabled.",
                  "type": "string",
                  "enum": [
                    "majority_of_all",
                    "majority_of_running"
                  ]
                },
                "interval": {
                  "description": "Interval used to monitor MariaDB servers. It is defaulted if not provided.",
                  "type": "string"
                },
                "module": {
                  "description": "Module is the module to use to monitor MariaDB servers. It is mandatory when no MariaDB reference is provided.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the identifier of the monitor. It is defaulted if not provided.",
                  "type": "string"
                },
                "params": {
                  "description": "Params defines extra parameters to pass to the monitor.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-common-monitor-parameters/.\nMonitor specific parameter are also suported:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-galera-monitor/#galera-monitor-optional-parameters.\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-monitor/#configuration.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "suspend": {
                  "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
                  "type": "boolean"
                }
              }
            },
            "podDisruptionBudget": {
              "description": "PodDisruptionBudget defines the budget for replica availability.",
              "type": "object",
              "properties": {
                "maxUnavailable": {
                  "description": "MaxUnavailable defines the number of maximum unavailable Pods.",
                  "x-kubernetes-int-or-string": true
                },
                "minAvailable": {
                  "description": "MinAvailable defines the number of minimum available Pods.",
                  "x-kubernetes-int-or-string": true
                }
              }
            },
            "replicas": {
              "description": "Replicas indicates the number of desired instances.",
              "type": "integer",
              "format": "int32"
            },
            "requeueInterval": {
              "description": "RequeueInterval is used to perform requeue reconciliations.",
              "type": "string"
            },
            "services": {
              "description": "Services define how the traffic is forwarded to the MariaDB servers.",
              "type": "array",
              "items": {
                "description": "Services define how the traffic is forwarded to the MariaDB servers.",
                "type": "object",
                "required": [
                  "listener",
                  "name",
                  "router"
                ],
                "properties": {
                  "listener": {
                    "description": "MaxScaleListener defines how the MaxScale server will listen for connections.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the identifier of the listener. It is defaulted if not provided",
                        "type": "string"
                      },
                      "params": {
                        "description": "Params defines extra parameters to pass to the listener.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#listener_1.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "port": {
                        "description": "Port is the network port where the MaxScale server will listen.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "protocol": {
                        "description": "Protocol is the MaxScale protocol to use when communicating with the client. If not provided, it defaults to MariaDBProtocol.",
                        "type": "string"
                      },
                      "suspend": {
                        "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
                        "type": "boolean"
                      }
                    }
                  },
                  "name": {
                    "description": "Name is the identifier of the MaxScale service.",
                    "type": "string"
                  },
                  "params": {
                    "description": "Params defines extra parameters to pass to the service.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#service_1.\nRouter specific parameter are also suported:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-readwritesplit/#configuration.\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-readconnroute/#configuration.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "router": {
                    "description": "Router is the type of router to use.",
                    "type": "string",
                    "enum": [
                      "readwritesplit",
                      "readconnroute"
                    ]
                  },
                  "suspend": {
                    "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
                    "type": "boolean"
                  }
                }
              }
            },
            "updateStrategy": {
              "description": "UpdateStrategy defines the update strategy for the StatefulSet object.",
              "type": "object",
              "properties": {
                "rollingUpdate": {
                  "description": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.",
                  "type": "object",
                  "properties": {
                    "maxUnavailable": {
                      "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding up. This can not be 0.\nDefaults to 1. This field is alpha-level and is only honored by servers that enable the\nMaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to\nReplicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it\nwill be counted towards MaxUnavailable.",
                      "x-kubernetes-int-or-string": true
                    },
                    "partition": {
                      "description": "Partition indicates the ordinal at which the StatefulSet should be partitioned\nfor updates. During a rolling update, all pods from ordinal Replicas-1 to\nPartition are updated. All pods from ordinal Partition-1 to 0 remain untouched.\nThis is helpful in being able to do a canary based deployment. The default value is 0.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "type": {
                  "description": "Type indicates the type of the StatefulSetUpdateStrategy.\nDefault is RollingUpdate.",
                  "type": "string"
                }
              }
            }
          }
        },
        "maxScaleRef": {
          "description": "MaxScaleRef is a reference to a MaxScale resource to be used with the current MariaDB.\nProviding this field implies delegating high availability tasks such as primary failover to MaxScale.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          }
        },
        "metrics": {
          "description": "Metrics configures metrics and how to scrape them.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enabled is a flag to enable Metrics",
              "type": "boolean"
            },
            "exporter": {
              "description": "Exporter defines the metrics exporter container.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Affinity to be used in the Pod.",
                  "type": "object",
                  "properties": {
                    "antiAffinityEnabled": {
                      "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
                      "type": "boolean"
                    },
                    "podAntiAffinity": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                            "type": "object",
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                                "type": "object",
                                "required": [
                                  "topologyKey"
                                ],
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                            "type": "object",
                            "required": [
                              "topologyKey"
                            ],
                            "properties": {
                              "labelSelector": {
                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    }
                  }
                },
                "image": {
                  "description": "Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.\nOnly mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                "imagePullSecrets": {
                  "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
                  "type": "array",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "nodeSelector": {
                  "description": "NodeSelector to be used in the Pod.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "podMetadata": {
                  "description": "PodMetadata defines extra metadata for the Pod.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "podSecurityContext": {
                  "description": "SecurityContext holds pod-level security attributes and common container settings.",
                  "type": "object",
                  "properties": {
                    "appArmorProfile": {
                      "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                          "type": "string"
                        }
                      }
                    },
                    "fsGroup": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "fsGroupChangePolicy": {
                      "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                      "type": "string"
                    },
                    "runAsGroup": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "type": "object",
                      "properties": {
                        "level": {
                          "description": "Level is SELinux level label that applies to the container.",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a SELinux role label that applies to the container.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is a SELinux type label that applies to the container.",
                          "type": "string"
                        },
                        "user": {
                          "description": "User is a SELinux user label that applies to the container.",
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  }
                },
                "port": {
                  "description": "Port where the exporter will be listening for connections.",
                  "type": "integer",
                  "format": "int32"
                },
                "priorityClassName": {
                  "description": "PriorityClassName to be used in the Pod.",
                  "type": "string"
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "SecurityContext holds container-level security attributes.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "description": "Adds and removes POSIX capabilities from running containers.",
                      "type": "object",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "type": "array",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                },
                "tolerations": {
                  "description": "Tolerations to be used in the Pod.",
                  "type": "array",
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                    "type": "object",
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": "string"
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "passwordSecretKeyRef": {
              "description": "PasswordSecretKeyRef is a reference to the password of the monitoring user used by the exporter.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "generate": {
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "serviceMonitor": {
              "description": "ServiceMonitor defines the ServiceMonior object.",
              "type": "object",
              "properties": {
                "interval": {
                  "description": "Interval for scraping metrics.",
                  "type": "string"
                },
                "jobLabel": {
                  "description": "JobLabel to add to the ServiceMonitor object.",
                  "type": "string"
                },
                "prometheusRelease": {
                  "description": "PrometheusRelease is the release label to add to the ServiceMonitor object.",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "description": "ScrapeTimeout defines the timeout for scraping metrics.",
                  "type": "string"
                }
              }
            },
            "username": {
              "description": "Username is the username of the monitoring user used by the exporter.",
              "type": "string"
            }
          }
        },
        "myCnf": {
          "description": "MyCnf allows to specify the my.cnf file mounted by Mariadb.\nUpdating this field will trigger an update to the Mariadb resource.",
          "type": "string"
        },
        "myCnfConfigMapKeyRef": {
          "description": "MyCnfConfigMapKeyRef is a reference to the my.cnf config file provided via a ConfigMap.\nIf not provided, it will be defaulted with a reference to a ConfigMap containing the MyCnf field.\nIf the referred ConfigMap is labeled with \"k8s.mariadb.com/watch\", an update to the Mariadb resource will be triggered when the ConfigMap is updated.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "nodeSelector": {
          "description": "NodeSelector to be used in the Pod.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "passwordHashSecretKeyRef": {
          "description": "PasswordHashSecretKeyRef is a reference to the password hash to be used by the initial User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password hash.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "passwordPlugin": {
          "description": "PasswordPlugin is a reference to the password plugin and arguments to be used by the initial User.",
          "type": "object",
          "properties": {
            "pluginArgSecretKeyRef": {
              "description": "PluginArgSecretKeyRef is a reference to the arguments to be provided to the authentication plugin for the User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the authentication plugin arguments.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "pluginNameSecretKeyRef": {
              "description": "PluginNameSecretKeyRef is a reference to the authentication plugin to be used by the User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the authentication plugin.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            }
          }
        },
        "passwordSecretKeyRef": {
          "description": "PasswordSecretKeyRef is a reference to a Secret that contains the password to be used by the initial User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "generate": {
              "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
              "type": "boolean"
            },
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget defines the budget for replica availability.",
          "type": "object",
          "properties": {
            "maxUnavailable": {
              "description": "MaxUnavailable defines the number of maximum unavailable Pods.",
              "x-kubernetes-int-or-string": true
            },
            "minAvailable": {
              "description": "MinAvailable defines the number of minimum available Pods.",
              "x-kubernetes-int-or-string": true
            }
          }
        },
        "podMetadata": {
          "description": "PodMetadata defines extra metadata for the Pod.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "podSecurityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings.",
          "type": "object",
          "properties": {
            "appArmorProfile": {
              "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                  "type": "string"
                }
              }
            },
            "fsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "fsGroupChangePolicy": {
              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
              "type": "string"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            },
            "seLinuxOptions": {
              "description": "SELinuxOptions are the labels to be applied to the container",
              "type": "object",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": "string"
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": "string"
                }
              }
            },
            "seccompProfile": {
              "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                  "type": "string"
                }
              }
            },
            "supplementalGroups": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "x-kubernetes-list-type": "atomic"
            }
          }
        },
        "port": {
          "description": "Port where the instances will be listening for connections.",
          "type": "integer",
          "format": "int32"
        },
        "primaryConnection": {
          "description": "PrimaryConnection defines a template to configure the primary Connection object.\nThis Connection provides the initial User access to the initial Database.\nIt will make use of the PrimaryService to route network traffic to the primary Pod.",
          "type": "object",
          "properties": {
            "healthCheck": {
              "description": "HealthCheck to be used in the Connection.",
              "type": "object",
              "properties": {
                "interval": {
                  "description": "Interval used to perform health checks.",
                  "type": "string"
                },
                "retryInterval": {
                  "description": "RetryInterval is the interval used to perform health check retries.",
                  "type": "string"
                }
              }
            },
            "params": {
              "description": "Params to be used in the Connection.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "port": {
              "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
              "type": "integer",
              "format": "int32"
            },
            "secretName": {
              "description": "SecretName to be used in the Connection.",
              "type": "string"
            },
            "secretTemplate": {
              "description": "SecretTemplate to be used in the Connection.",
              "type": "object",
              "properties": {
                "databaseKey": {
                  "description": "DatabaseKey to be used in the Secret.",
                  "type": "string"
                },
                "format": {
                  "description": "Format to be used in the Secret.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "HostKey to be used in the Secret.",
                  "type": "string"
                },
                "key": {
                  "description": "Key to be used in the Secret.",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata to be added to the Secret object.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "passwordKey": {
                  "description": "PasswordKey to be used in the Secret.",
                  "type": "string"
                },
                "portKey": {
                  "description": "PortKey to be used in the Secret.",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "UsernameKey to be used in the Secret.",
                  "type": "string"
                }
              }
            },
            "serviceName": {
              "description": "ServiceName to be used in the Connection.",
              "type": "string"
            }
          }
        },
        "primaryService": {
          "description": "PrimaryService defines a template to configure the primary Service object.\nThe network traffic of this Service will be routed to the primary Pod.",
          "type": "object",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "AllocateLoadBalancerNodePorts Service field.",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy Service field.",
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP Service field.",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "LoadBalancerSourceRanges Service field.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "metadata": {
              "description": "Metadata to be added to the Service metadata.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "sessionAffinity": {
              "description": "SessionAffinity Service field.",
              "type": "string"
            },
            "type": {
              "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
              "type": "string",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ]
            }
          }
        },
        "priorityClassName": {
          "description": "PriorityClassName to be used in the Pod.",
          "type": "string"
        },
        "readinessProbe": {
          "description": "ReadinessProbe to be used in the Container.",
          "type": "object",
          "properties": {
            "exec": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
              "type": "object",
              "properties": {
                "command": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "failureThreshold": {
              "type": "integer",
              "format": "int32"
            },
            "httpGet": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                  "type": "string"
                }
              }
            },
            "initialDelaySeconds": {
              "type": "integer",
              "format": "int32"
            },
            "periodSeconds": {
              "type": "integer",
              "format": "int32"
            },
            "successThreshold": {
              "type": "integer",
              "format": "int32"
            },
            "timeoutSeconds": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "replicas": {
          "description": "Replicas indicates the number of desired instances.",
          "type": "integer",
          "format": "int32"
        },
        "replicasAllowEvenNumber": {
          "description": "disables the validation check for an odd number of replicas.",
          "type": "boolean"
        },
        "replication": {
          "description": "Replication configures high availability via replication. This feature is still in alpha, use Galera if you are looking for a more production-ready HA.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enabled is a flag to enable Replication.",
              "type": "boolean"
            },
            "primary": {
              "description": "Primary is the replication configuration for the primary node.",
              "type": "object",
              "properties": {
                "automaticFailover": {
                  "description": "AutomaticFailover indicates whether the operator should automatically update PodIndex to perform an automatic primary failover.",
                  "type": "boolean"
                },
                "podIndex": {
                  "description": "PodIndex is the StatefulSet index of the primary node. The user may change this field to perform a manual switchover.",
                  "type": "integer"
                }
              }
            },
            "probesEnabled": {
              "description": "ProbesEnabled indicates to use replication specific liveness and readiness probes.\nThis probes check that the primary can receive queries and that the replica has the replication thread running.",
              "type": "boolean"
            },
            "replica": {
              "description": "ReplicaReplication is the replication configuration for the replica nodes.",
              "type": "object",
              "properties": {
                "connectionRetries": {
                  "description": "ConnectionRetries to be used when the replica connects to the primary.",
                  "type": "integer"
                },
                "connectionTimeout": {
                  "description": "ConnectionTimeout to be used when the replica connects to the primary.",
                  "type": "string"
                },
                "gtid": {
                  "description": "Gtid indicates which Global Transaction ID should be used when connecting a replica to the master.\nSee: https://mariadb.com/kb/en/gtid/#using-current_pos-vs-slave_pos.",
                  "type": "string",
                  "enum": [
                    "CurrentPos",
                    "SlavePos"
                  ]
                },
                "replPasswordSecretKeyRef": {
                  "description": "ReplPasswordSecretKeyRef provides a reference to the Secret to use as password for the replication user.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "generate": {
                      "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "syncTimeout": {
                  "description": "SyncTimeout defines the timeout for a replica to be synced with the primary when performing a primary switchover.\nIf the timeout is reached, the replica GTID will be reset and the switchover will continue.",
                  "type": "string"
                },
                "waitPoint": {
                  "description": "WaitPoint defines whether the transaction should wait for ACK before committing to the storage engine.\nMore info: https://mariadb.com/kb/en/semisynchronous-replication/#rpl_semi_sync_master_wait_point.",
                  "type": "string",
                  "enum": [
                    "AfterSync",
                    "AfterCommit"
                  ]
                }
              }
            },
            "syncBinlog": {
              "description": "SyncBinlog indicates whether the binary log should be synchronized to the disk after every event.\nIt trades off performance for consistency.\nSee: https://mariadb.com/kb/en/replication-and-binary-log-system-variables/#sync_binlog.",
              "type": "boolean"
            }
          }
        },
        "resources": {
          "description": "Resouces describes the compute resource requirements.",
          "type": "object",
          "properties": {
            "limits": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              }
            }
          }
        },
        "rootEmptyPassword": {
          "description": "RootEmptyPassword indicates if the root password should be empty. Don't use this feature in production, it is only intended for development and test environments.",
          "type": "boolean"
        },
        "rootPasswordSecretKeyRef": {
          "description": "RootPasswordSecretKeyRef is a reference to a Secret key containing the root password.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "generate": {
              "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
              "type": "boolean"
            },
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "secondaryConnection": {
          "description": "SecondaryConnection defines a template to configure the secondary Connection object.\nThis Connection provides the initial User access to the initial Database.\nIt will make use of the SecondaryService to route network traffic to the secondary Pods.",
          "type": "object",
          "properties": {
            "healthCheck": {
              "description": "HealthCheck to be used in the Connection.",
              "type": "object",
              "properties": {
                "interval": {
                  "description": "Interval used to perform health checks.",
                  "type": "string"
                },
                "retryInterval": {
                  "description": "RetryInterval is the interval used to perform health check retries.",
                  "type": "string"
                }
              }
            },
            "params": {
              "description": "Params to be used in the Connection.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "port": {
              "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
              "type": "integer",
              "format": "int32"
            },
            "secretName": {
              "description": "SecretName to be used in the Connection.",
              "type": "string"
            },
            "secretTemplate": {
              "description": "SecretTemplate to be used in the Connection.",
              "type": "object",
              "properties": {
                "databaseKey": {
                  "description": "DatabaseKey to be used in the Secret.",
                  "type": "string"
                },
                "format": {
                  "description": "Format to be used in the Secret.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "HostKey to be used in the Secret.",
                  "type": "string"
                },
                "key": {
                  "description": "Key to be used in the Secret.",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata to be added to the Secret object.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "passwordKey": {
                  "description": "PasswordKey to be used in the Secret.",
                  "type": "string"
                },
                "portKey": {
                  "description": "PortKey to be used in the Secret.",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "UsernameKey to be used in the Secret.",
                  "type": "string"
                }
              }
            },
            "serviceName": {
              "description": "ServiceName to be used in the Connection.",
              "type": "string"
            }
          }
        },
        "secondaryService": {
          "description": "SecondaryService defines a template to configure the secondary Service object.\nThe network traffic of this Service will be routed to the secondary Pods.",
          "type": "object",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "AllocateLoadBalancerNodePorts Service field.",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy Service field.",
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP Service field.",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "LoadBalancerSourceRanges Service field.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "metadata": {
              "description": "Metadata to be added to the Service metadata.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "sessionAffinity": {
              "description": "SessionAffinity Service field.",
              "type": "string"
            },
            "type": {
              "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
              "type": "string",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ]
            }
          }
        },
        "securityContext": {
          "description": "SecurityContext holds security configuration that will be applied to a container.",
          "type": "object",
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean"
            },
            "capabilities": {
              "description": "Adds and removes POSIX capabilities from running containers.",
              "type": "object",
              "properties": {
                "add": {
                  "description": "Added capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "drop": {
                  "description": "Removed capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              }
            },
            "privileged": {
              "type": "boolean"
            },
            "readOnlyRootFilesystem": {
              "type": "boolean"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "service": {
          "description": "Service defines a template to configure the general Service object.\nThe network traffic of this Service will be routed to all Pods.",
          "type": "object",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "AllocateLoadBalancerNodePorts Service field.",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy Service field.",
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP Service field.",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "LoadBalancerSourceRanges Service field.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "metadata": {
              "description": "Metadata to be added to the Service metadata.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "sessionAffinity": {
              "description": "SessionAffinity Service field.",
              "type": "string"
            },
            "type": {
              "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
              "type": "string",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ]
            }
          }
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to be used by the Pods.",
          "type": "string"
        },
        "servicePorts": {
          "description": "ServicePorts is the list of additional named ports to be added to the Services created by the operator.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#serviceport-v1-core",
            "type": "object",
            "required": [
              "name",
              "port"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "sidecarContainers": {
          "description": "SidecarContainers to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "Container object definition.",
            "type": "object",
            "required": [
              "image"
            ],
            "properties": {
              "args": {
                "description": "Args to be used in the Container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "description": "Command to be used in the Container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "image": {
                "description": "Image name to be used by the container. The supported format is `<image>:<tag>`.",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                "type": "string",
                "enum": [
                  "Always",
                  "Never",
                  "IfNotPresent"
                ]
              },
              "name": {
                "description": "Name to be given to the container.",
                "type": "string"
              },
              "resources": {
                "description": "Resouces describes the compute resource requirements.",
                "type": "object",
                "properties": {
                  "limits": {
                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "volumeMounts": {
                "description": "VolumeMounts to be used in the Container.",
                "type": "array",
                "items": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "subPath": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "storage": {
          "description": "Storage defines the storage options to be used for provisioning the PVCs mounted by MariaDB.",
          "type": "object",
          "properties": {
            "ephemeral": {
              "description": "Ephemeral indicates whether to use ephemeral storage in the PVCs. It is only compatible with non HA MariaDBs.",
              "type": "boolean"
            },
            "resizeInUseVolumes": {
              "description": "ResizeInUseVolumes indicates whether the PVCs can be resized. The 'StorageClassName' used should have 'allowVolumeExpansion' set to 'true' to allow resizing.\nIt defaults to true.",
              "type": "boolean"
            },
            "size": {
              "description": "Size of the PVCs to be mounted by MariaDB. Required if not provided in 'VolumeClaimTemplate'. It superseeds the storage size specified in 'VolumeClaimTemplate'.",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "storageClassName": {
              "description": "StorageClassName to be used to provision the PVCS. It superseeds the 'StorageClassName' specified in 'VolumeClaimTemplate'.\nIf not provided, the default 'StorageClass' configured in the cluster is used.",
              "type": "string"
            },
            "volumeClaimTemplate": {
              "description": "VolumeClaimTemplate provides a template to define the PVCs.",
              "type": "object",
              "properties": {
                "accessModes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "metadata": {
                  "description": "Metadata to be added to the PVC metadata.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "resources": {
                  "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  }
                },
                "selector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        }
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "storageClassName": {
                  "type": "string"
                }
              }
            },
            "waitForVolumeResize": {
              "description": "WaitForVolumeResize indicates whether to wait for the PVCs to be resized before marking the MariaDB object as ready. This will block other operations such as cluster recovery while the resize is in progress.\nIt defaults to true.",
              "type": "boolean"
            }
          }
        },
        "suspend": {
          "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
          "type": "boolean"
        },
        "timeZone": {
          "description": "TimeZone sets the default timezone. If not provided, it defaults to SYSTEM and the timezone data is not loaded.",
          "type": "string"
        },
        "tolerations": {
          "description": "Tolerations to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            }
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#topologyspreadconstraint-v1-core.",
            "type": "object",
            "required": [
              "maxSkew",
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "properties": {
              "labelSelector": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "matchLabelKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "maxSkew": {
                "type": "integer",
                "format": "int32"
              },
              "minDomains": {
                "type": "integer",
                "format": "int32"
              },
              "nodeAffinityPolicy": {
                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                "type": "string"
              },
              "nodeTaintsPolicy": {
                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                "type": "string"
              },
              "topologyKey": {
                "type": "string"
              },
              "whenUnsatisfiable": {
                "type": "string"
              }
            }
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy defines how a MariaDB resource is updated.",
          "type": "object",
          "properties": {
            "autoUpdateDataPlane": {
              "description": "AutoUpdateDataPlane indicates whether the Galera data-plane version (agent and init containers) should be automatically updated based on the operator version. It defaults to false.\nUpdating the operator will trigger updates on all the MariaDB instances that have this flag set to true. Thus, it is recommended to progressively set this flag after having updated the operator.",
              "type": "boolean"
            },
            "rollingUpdate": {
              "description": "RollingUpdate defines parameters for the RollingUpdate type.",
              "type": "object",
              "properties": {
                "maxUnavailable": {
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding up. This can not be 0.\nDefaults to 1. This field is alpha-level and is only honored by servers that enable the\nMaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to\nReplicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it\nwill be counted towards MaxUnavailable.",
                  "x-kubernetes-int-or-string": true
                },
                "partition": {
                  "description": "Partition indicates the ordinal at which the StatefulSet should be partitioned\nfor updates. During a rolling update, all pods from ordinal Replicas-1 to\nPartition are updated. All pods from ordinal Partition-1 to 0 remain untouched.\nThis is helpful in being able to do a canary based deployment. The default value is 0.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "type": {
              "description": "Type defines the type of updates. One of `ReplicasFirstPrimaryLast`, `RollingUpdate` or `OnDelete`. If not defined, it defaults to `ReplicasFirstPrimaryLast`.",
              "type": "string",
              "enum": [
                "ReplicasFirstPrimaryLast",
                "RollingUpdate",
                "OnDelete",
                "Never"
              ]
            }
          }
        },
        "username": {
          "description": "Username is the initial username to be created by the operator once MariaDB is ready. It has all privileges on the initial database.\nThe initial User will have ALL PRIVILEGES in the initial Database.",
          "type": "string"
        },
        "volumeMounts": {
          "description": "VolumeMounts to be used in the Container.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
            "type": "object",
            "required": [
              "mountPath",
              "name"
            ],
            "properties": {
              "mountPath": {
                "type": "string"
              },
              "name": {
                "description": "This must match the Name of a Volume.",
                "type": "string"
              },
              "readOnly": {
                "type": "boolean"
              },
              "subPath": {
                "type": "string"
              }
            }
          }
        },
        "volumes": {
          "description": "Volumes to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volume-v1-core.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "csi": {
                "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
                "type": "object",
                "required": [
                  "driver"
                ],
                "properties": {
                  "driver": {
                    "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                    "type": "string"
                  },
                  "nodePublishSecretRef": {
                    "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "readOnly": {
                    "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                    "type": "boolean"
                  },
                  "volumeAttributes": {
                    "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "emptyDir": {
                "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling.",
                "type": "object",
                "properties": {
                  "medium": {
                    "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                    "type": "string"
                  },
                  "sizeLimit": {
                    "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "nfs": {
                "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling.",
                "type": "object",
                "required": [
                  "path",
                  "server"
                ],
                "properties": {
                  "path": {
                    "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "boolean"
                  },
                  "server": {
                    "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                  }
                }
              },
              "persistentVolumeClaim": {
                "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system).",
                "type": "object",
                "required": [
                  "claimName"
                ],
                "properties": {
                  "claimName": {
                    "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "An odd number of MariaDB instances (mariadb.spec.replicas) is required to avoid split brain situations. Use 'mariadb.spec.replicasAllowEvenNumber: true' to disable this validation.",
          "rule": "self.replicas %2 == 1 || self.replicasAllowEvenNumber"
        }
      ]
    },
    "status": {
      "description": "MariaDBStatus defines the observed state of MariaDB",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions for the Mariadb object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        },
        "currentPrimary": {
          "description": "CurrentPrimary is the primary Pod.",
          "type": "string"
        },
        "currentPrimaryPodIndex": {
          "description": "CurrentPrimaryPodIndex is the primary Pod index.",
          "type": "integer"
        },
        "galeraRecovery": {
          "description": "GaleraRecovery is the Galera recovery current state.",
          "type": "object",
          "properties": {
            "bootstrap": {
              "description": "Bootstrap indicates when and in which Pod the cluster bootstrap process has been performed.",
              "type": "object",
              "properties": {
                "pod": {
                  "type": "string"
                },
                "time": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "podsRestarted": {
              "description": "PodsRestarted that the Pods have been restarted after the cluster bootstrap.",
              "type": "boolean"
            },
            "recovered": {
              "description": "State is a per Pod representation of the sequence recovery process.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "required": [
                  "seqno",
                  "uuid"
                ],
                "properties": {
                  "seqno": {
                    "type": "integer"
                  },
                  "uuid": {
                    "type": "string"
                  }
                }
              }
            },
            "state": {
              "description": "State is a per Pod representation of the Galera state file (grastate.dat).",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "required": [
                  "safeToBootstrap",
                  "seqno",
                  "uuid",
                  "version"
                ],
                "properties": {
                  "safeToBootstrap": {
                    "type": "boolean"
                  },
                  "seqno": {
                    "type": "integer"
                  },
                  "uuid": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "replicas": {
          "description": "Replicas indicates the number of current instances.",
          "type": "integer",
          "format": "int32"
        },
        "replicationStatus": {
          "description": "ReplicationStatus is the replication current state for each Pod.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "k8s.mariadb.com",
      "kind": "MariaDB",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}