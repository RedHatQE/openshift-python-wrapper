{
  "description": "EncryptionKeyRotationCronJob is the Schema for the encryptionkeyrotationcronjobs API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "EncryptionKeyRotationCronJobSpec defines the desired state of EncryptionKeyRotationCronJob",
      "type": "object",
      "required": [
        "jobTemplate",
        "schedule"
      ],
      "properties": {
        "concurrencyPolicy": {
          "description": "Specifies how to treat concurrent executions of a Job.\nValid values are:\n- \"Forbid\" (default): forbids concurrent runs, skipping next run if\n  previous run hasn't finished yet;\n- \"Replace\": cancels currently running job and replaces it\n  with a new one",
          "type": "string",
          "enum": [
            "Forbid",
            "Replace"
          ]
        },
        "failedJobsHistoryLimit": {
          "description": "The number of failed finished jobs to retain. Value must be non-negative integer.\nDefaults to 1.",
          "type": "integer",
          "format": "int32",
          "maximum": 60,
          "minimum": 0
        },
        "jobTemplate": {
          "description": "Specifies the job that will be created when executing a CronJob.",
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Standard object's metadata of the jobs created from this template.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "type": "object"
            },
            "spec": {
              "description": "Specification of the desired behavior of the job.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
              "type": "object",
              "required": [
                "target"
              ],
              "properties": {
                "backOffLimit": {
                  "description": "BackOffLimit specifies the number of retries allowed before marking reclaim\nspace operation as failed. If not specified, defaults to 6. Maximum allowed\nvalue is 60 and minimum allowed value is 0.",
                  "type": "integer",
                  "format": "int32",
                  "maximum": 60,
                  "minimum": 0
                },
                "retryDeadlineSeconds": {
                  "description": "RetryDeadlineSeconds specifies the duration in seconds relative to the\nstart time that the operation may be retried; value MUST be positive integer.\nIf not specified, defaults to 600 seconds. Maximum allowed\nvalue is 1800.",
                  "type": "integer",
                  "format": "int64",
                  "maximum": 1800,
                  "minimum": 0
                },
                "target": {
                  "description": "Target represents tvolume target on which operation will be\nperformed.",
                  "type": "object",
                  "properties": {
                    "persistentVolumeClaim": {
                      "description": "PersistentVolumeClaim specifies the target PersistentVolumeClaim name.",
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "persistentVolumeClaim is immutable",
                          "rule": "self == oldSelf"
                        }
                      ]
                    }
                  }
                },
                "timeout": {
                  "description": "Timeout specifies the timeout in seconds for the grpc request sent to the\nCSI driver.\nMinimum allowed value is 60.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 60
                }
              }
            }
          }
        },
        "schedule": {
          "description": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
          "type": "string",
          "pattern": ".+"
        },
        "startingDeadlineSeconds": {
          "description": "Optional deadline in seconds for starting the job if it misses scheduled\ntime for any reason.  Missed jobs executions will be counted as failed ones.",
          "type": "integer",
          "format": "int64"
        },
        "successfulJobsHistoryLimit": {
          "description": "The number of successful finished jobs to retain. Value must be non-negative integer.\nDefaults to 3.",
          "type": "integer",
          "format": "int32",
          "maximum": 60,
          "minimum": 0
        },
        "suspend": {
          "description": "This flag tells the controller to suspend subsequent executions, it does\nnot apply to already started executions.  Defaults to false.",
          "type": "boolean"
        }
      }
    },
    "status": {
      "description": "EncryptionKeyRotationCronJobStatus defines the observed state of EncryptionKeyRotationCronJob",
      "type": "object",
      "properties": {
        "active": {
          "description": "A pointer to currently running job.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "lastScheduleTime": {
          "description": "Information when was the last time the job was successfully scheduled.",
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulTime": {
          "description": "Information when was the last time the job successfully completed.",
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "csiaddons.openshift.io",
      "kind": "EncryptionKeyRotationCronJob",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}