{
  "description": "GrafanaLibraryPanel is the Schema for the grafanalibrarypanels API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "GrafanaLibraryPanelSpec defines the desired state of GrafanaLibraryPanel",
      "type": "object",
      "required": [
        "instanceSelector"
      ],
      "properties": {
        "allowCrossNamespaceImport": {
          "description": "Allow the Operator to match this resource with Grafanas outside the current namespace",
          "type": "boolean"
        },
        "configMapRef": {
          "description": "model from configmap",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "The key to select.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "optional": {
              "description": "Specify whether the ConfigMap or its key must be defined",
              "type": "boolean"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "contentCacheDuration": {
          "description": "Cache duration for models fetched from URLs",
          "type": "string"
        },
        "datasources": {
          "description": "maps required data sources to existing ones",
          "type": "array",
          "items": {
            "description": "GrafanaResourceDatasource is used to set the datasource name of any templated datasources in\ncontent definitions (e.g., dashboard JSON).",
            "type": "object",
            "required": [
              "datasourceName",
              "inputName"
            ],
            "properties": {
              "datasourceName": {
                "type": "string"
              },
              "inputName": {
                "type": "string"
              }
            }
          }
        },
        "envFrom": {
          "description": "environments variables from secrets or config maps",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "configMapKeyRef": {
                "description": "Selects a key of a ConfigMap.",
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "key": {
                    "description": "The key to select.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "optional": {
                    "description": "Specify whether the ConfigMap or its key must be defined",
                    "type": "boolean"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "secretKeyRef": {
                "description": "Selects a key of a Secret.",
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": "boolean"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              }
            }
          }
        },
        "envs": {
          "description": "environments variables as a map",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "description": "Inline env value",
                "type": "string"
              },
              "valueFrom": {
                "description": "Reference on value source, might be the reference on a secret or config map",
                "type": "object",
                "properties": {
                  "configMapKeyRef": {
                    "description": "Selects a key of a ConfigMap.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "secretKeyRef": {
                    "description": "Selects a key of a Secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              }
            }
          }
        },
        "folderRef": {
          "description": "Name of a `GrafanaFolder` resource in the same namespace",
          "type": "string"
        },
        "folderUID": {
          "description": "UID of the target folder for this dashboard",
          "type": "string"
        },
        "grafanaCom": {
          "description": "grafana.com/dashboards",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer"
            },
            "revision": {
              "type": "integer"
            }
          }
        },
        "gzipJson": {
          "description": "GzipJson the model's JSON compressed with Gzip. Base64-encoded when in YAML.",
          "type": "string",
          "format": "byte"
        },
        "instanceSelector": {
          "description": "Selects Grafana instances for import",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                }
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "message": "spec.instanceSelector is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "json": {
          "description": "model json",
          "type": "string"
        },
        "jsonnet": {
          "description": "Jsonnet",
          "type": "string"
        },
        "jsonnetLib": {
          "description": "Jsonnet project build",
          "type": "object",
          "required": [
            "fileName",
            "gzipJsonnetProject"
          ],
          "properties": {
            "fileName": {
              "type": "string"
            },
            "gzipJsonnetProject": {
              "type": "string",
              "format": "byte"
            },
            "jPath": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "plugins": {
          "description": "plugins",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "version"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          }
        },
        "resyncPeriod": {
          "description": "How often the resource is synced, defaults to 10m0s if not set",
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
        },
        "uid": {
          "description": "Manually specify the uid, overwrites uids already present in the json model.\nCan be any string consisting of alphanumeric characters, - and _ with a maximum length of 40.",
          "type": "string",
          "maxLength": 40,
          "pattern": "^[a-zA-Z0-9-_]+$",
          "x-kubernetes-validations": [
            {
              "message": "spec.uid is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "url": {
          "description": "model url",
          "type": "string"
        },
        "urlAuthorization": {
          "description": "authorization options for model from url",
          "type": "object",
          "properties": {
            "basicAuth": {
              "type": "object",
              "properties": {
                "password": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "username": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              }
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "message": "Only one of folderUID or folderRef can be declared at the same time",
          "rule": "(has(self.folderUID) && !(has(self.folderRef))) || (has(self.folderRef) && !(has(self.folderUID))) || !(has(self.folderRef) && (has(self.folderUID)))"
        },
        {
          "message": "spec.uid is immutable",
          "rule": "((!has(oldSelf.uid) && !has(self.uid)) || (has(oldSelf.uid) && has(self.uid)))"
        },
        {
          "message": "disabling spec.allowCrossNamespaceImport requires a recreate to ensure desired state",
          "rule": "!oldSelf.allowCrossNamespaceImport || (oldSelf.allowCrossNamespaceImport && self.allowCrossNamespaceImport)"
        }
      ]
    },
    "status": {
      "description": "GrafanaLibraryPanelStatus defines the observed state of GrafanaLibraryPanel",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Results when synchonizing resource with Grafana instances",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        },
        "contentCache": {
          "type": "string",
          "format": "byte"
        },
        "contentTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "contentUrl": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "lastResync": {
          "description": "Last time the resource was synchronized with Grafana instances",
          "type": "string",
          "format": "date-time"
        },
        "uid": {
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "grafana.integreatly.org",
      "kind": "GrafanaLibraryPanel",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}