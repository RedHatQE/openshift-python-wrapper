{
  "description": "Backup is a Velero resource that represents the capture of Kubernetes\ncluster state at a point in time (API objects and associated volume state).",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "BackupSpec defines the specification for a Velero backup.",
      "type": "object",
      "properties": {
        "csiSnapshotTimeout": {
          "description": "CSISnapshotTimeout specifies the time used to wait for CSI VolumeSnapshot status turns to\nReadyToUse during creation, before returning error as timeout.\nThe default value is 10 minute.",
          "type": "string"
        },
        "datamover": {
          "description": "DataMover specifies the data mover to be used by the backup.\nIf DataMover is \"\" or \"velero\", the built-in data mover will be used.",
          "type": "string"
        },
        "defaultVolumesToFsBackup": {
          "description": "DefaultVolumesToFsBackup specifies whether pod volume file system backup should be used\nfor all volumes by default."
        },
        "defaultVolumesToRestic": {
          "description": "DefaultVolumesToRestic specifies whether restic should be used to take a\nbackup of all pod volumes by default.\n\n\nDeprecated: this field is no longer used and will be removed entirely in future. Use DefaultVolumesToFsBackup instead."
        },
        "excludedClusterScopedResources": {
          "description": "ExcludedClusterScopedResources is a slice of cluster-scoped\nresource type names to exclude from the backup.\nIf set to \"*\", all cluster-scoped resource types are excluded.\nThe default value is empty."
        },
        "excludedNamespaceScopedResources": {
          "description": "ExcludedNamespaceScopedResources is a slice of namespace-scoped\nresource type names to exclude from the backup.\nIf set to \"*\", all namespace-scoped resource types are excluded.\nThe default value is empty."
        },
        "excludedNamespaces": {
          "description": "ExcludedNamespaces contains a list of namespaces that are not\nincluded in the backup."
        },
        "excludedResources": {
          "description": "ExcludedResources is a slice of resource names that are not\nincluded in the backup."
        },
        "hooks": {
          "description": "Hooks represent custom behaviors that should be executed at different phases of the backup.",
          "type": "object",
          "properties": {
            "resources": {
              "description": "Resources are hooks that should be executed when backing up individual instances of a resource."
            }
          }
        },
        "includeClusterResources": {
          "description": "IncludeClusterResources specifies whether cluster-scoped resources\nshould be included for consideration in the backup."
        },
        "includedClusterScopedResources": {
          "description": "IncludedClusterScopedResources is a slice of cluster-scoped\nresource type names to include in the backup.\nIf set to \"*\", all cluster-scoped resource types are included.\nThe default value is empty, which means only related\ncluster-scoped resources are included."
        },
        "includedNamespaceScopedResources": {
          "description": "IncludedNamespaceScopedResources is a slice of namespace-scoped\nresource type names to include in the backup.\nThe default value is \"*\"."
        },
        "includedNamespaces": {
          "description": "IncludedNamespaces is a slice of namespace names to include objects\nfrom. If empty, all namespaces are included."
        },
        "includedResources": {
          "description": "IncludedResources is a slice of resource names to include\nin the backup. If empty, all resources are included."
        },
        "itemOperationTimeout": {
          "description": "ItemOperationTimeout specifies the time used to wait for asynchronous BackupItemAction operations\nThe default value is 4 hour.",
          "type": "string"
        },
        "labelSelector": {
          "description": "LabelSelector is a metav1.LabelSelector to filter with\nwhen adding individual objects to the backup. If empty\nor nil, all objects are included. Optional.",
          "x-kubernetes-map-type": "atomic"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "orLabelSelectors": {
          "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with\nwhen adding individual objects to the backup. If multiple provided\nthey will be joined by the OR operator. LabelSelector as well as\nOrLabelSelectors cannot co-exist in backup request, only one of them\ncan be used."
        },
        "orderedResources": {
          "description": "OrderedResources specifies the backup order of resources of specific Kind.\nThe map key is the resource name and value is a list of object names separated by commas.\nEach resource name has format \"namespace/objectname\".  For cluster resources, simply use \"objectname\".",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourcePolicy": {
          "description": "ResourcePolicy specifies the referenced resource policies that backup should follow",
          "type": "object",
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "apiGroup": {
              "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the type of resource being referenced",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of resource being referenced",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "snapshotMoveData": {
          "description": "SnapshotMoveData specifies whether snapshot data should be moved"
        },
        "snapshotVolumes": {
          "description": "SnapshotVolumes specifies whether to take snapshots\nof any PV's referenced in the set of objects included\nin the Backup."
        },
        "storageLocation": {
          "description": "StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored.",
          "type": "string"
        },
        "ttl": {
          "description": "TTL is a time.Duration-parseable string describing how long\nthe Backup should be retained for.",
          "type": "string"
        },
        "uploaderConfig": {
          "description": "UploaderConfig specifies the configuration for the uploader."
        },
        "volumeSnapshotLocations": {
          "description": "VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "status": {
      "description": "BackupStatus captures the current status of a Velero backup.",
      "type": "object",
      "properties": {
        "backupItemOperationsAttempted": {
          "description": "BackupItemOperationsAttempted is the total number of attempted\nasync BackupItemAction operations for this backup.",
          "type": "integer"
        },
        "backupItemOperationsCompleted": {
          "description": "BackupItemOperationsCompleted is the total number of successfully completed\nasync BackupItemAction operations for this backup.",
          "type": "integer"
        },
        "backupItemOperationsFailed": {
          "description": "BackupItemOperationsFailed is the total number of async\nBackupItemAction operations for this backup which ended with an error.",
          "type": "integer"
        },
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time a backup was completed.\nCompletion time is recorded even on failed backups.\nCompletion time is recorded before uploading the backup object.\nThe server's time is used for CompletionTimestamps",
          "format": "date-time"
        },
        "csiVolumeSnapshotsAttempted": {
          "description": "CSIVolumeSnapshotsAttempted is the total number of attempted\nCSI VolumeSnapshots for this backup.",
          "type": "integer"
        },
        "csiVolumeSnapshotsCompleted": {
          "description": "CSIVolumeSnapshotsCompleted is the total number of successfully\ncompleted CSI VolumeSnapshots for this backup.",
          "type": "integer"
        },
        "errors": {
          "description": "Errors is a count of all error messages that were generated during\nexecution of the backup.  The actual errors are in the backup's log\nfile in object storage.",
          "type": "integer"
        },
        "expiration": {
          "description": "Expiration is when this Backup is eligible for garbage-collection.",
          "format": "date-time"
        },
        "failureReason": {
          "description": "FailureReason is an error that caused the entire backup to fail.",
          "type": "string"
        },
        "formatVersion": {
          "description": "FormatVersion is the backup format version, including major, minor, and patch version.",
          "type": "string"
        },
        "hookStatus": {
          "description": "HookStatus contains information about the status of the hooks."
        },
        "phase": {
          "description": "Phase is the current state of the Backup.",
          "type": "string",
          "enum": [
            "New",
            "FailedValidation",
            "InProgress",
            "WaitingForPluginOperations",
            "WaitingForPluginOperationsPartiallyFailed",
            "Finalizing",
            "FinalizingPartiallyFailed",
            "Completed",
            "PartiallyFailed",
            "Failed",
            "Deleting"
          ]
        },
        "progress": {
          "description": "Progress contains information about the backup's execution progress. Note\nthat this information is best-effort only -- if Velero fails to update it\nduring a backup for any reason, it may be inaccurate/stale."
        },
        "startTimestamp": {
          "description": "StartTimestamp records the time a backup was started.\nSeparate from CreationTimestamp, since that value changes\non restores.\nThe server's time is used for StartTimestamps",
          "format": "date-time"
        },
        "validationErrors": {
          "description": "ValidationErrors is a slice of all validation errors (if\napplicable)."
        },
        "version": {
          "description": "Version is the backup format major version.\nDeprecated: Please see FormatVersion",
          "type": "integer"
        },
        "volumeSnapshotsAttempted": {
          "description": "VolumeSnapshotsAttempted is the total number of attempted\nvolume snapshots for this backup.",
          "type": "integer"
        },
        "volumeSnapshotsCompleted": {
          "description": "VolumeSnapshotsCompleted is the total number of successfully\ncompleted volume snapshots for this backup.",
          "type": "integer"
        },
        "warnings": {
          "description": "Warnings is a count of all warning messages that were generated during\nexecution of the backup. The actual warnings are in the backup's log\nfile in object storage.",
          "type": "integer"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "Backup",
      "version": "v1"
    }
  ],
  "x-kubernetes-selectable-fields": [],
  "$schema": "http://json-schema.org/schema#"
}