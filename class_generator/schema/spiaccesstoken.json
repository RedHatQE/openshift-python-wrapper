{
  "description": "SPIAccessToken is the Schema for the spiaccesstokens API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "SPIAccessTokenSpec defines the desired state of SPIAccessToken",
      "type": "object",
      "required": [
        "serviceProviderUrl"
      ],
      "properties": {
        "permissions": {
          "description": "Permissions is a collection of operator-defined permissions (which are translated to service-provider-specific scopes) and potentially additional service-provider-specific scopes that are not covered by the operator defined abstraction. The permissions are used in SPIAccessTokenBinding objects to express the requirements on the tokens as well as in the SPIAccessToken objects to express the \"capabilities\" of the token.",
          "type": "object",
          "properties": {
            "additionalScopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": {
              "type": "array",
              "items": {
                "description": "Permission is an element of Permissions and express a requirement on the service provider scopes in an agnostic manner.",
                "type": "object",
                "required": [
                  "area",
                  "type"
                ],
                "properties": {
                  "area": {
                    "description": "Area express the \"area\" in the service provider scopes to which the permission is required.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the permission required",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "serviceProviderUrl": {
          "type": "string"
        }
      }
    },
    "status": {
      "description": "SPIAccessTokenStatus defines the observed state of SPIAccessToken",
      "type": "object",
      "required": [
        "errorMessage",
        "errorReason",
        "oAuthUrl",
        "phase"
      ],
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "errorReason": {
          "description": "SPIAccessTokenErrorReason is the enumeration of reasons for the token being invalid",
          "type": "string"
        },
        "oAuthUrl": {
          "type": "string"
        },
        "phase": {
          "description": "SPIAccessTokenPhase is the reconciliation phase of the SPIAccessToken object",
          "type": "string"
        },
        "tokenMetadata": {
          "description": "TokenMetadata is data about the token retrieved from the service provider. This data can be used for matching the tokens with the token bindings.",
          "type": "object",
          "required": [
            "lastRefreshTime"
          ],
          "properties": {
            "lastRefreshTime": {
              "description": "LastRefreshTime is the Unix-epoch timestamp of the last time the metadata has been refreshed from the service provider. The operator is configured with a TTL for this information and automatically refreshes the metadata when it is needed but is found stale.",
              "type": "integer",
              "format": "int64"
            },
            "scopes": {
              "description": "Scopes is the list of OAuth scopes that this token possesses",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "serviceProviderState": {
              "description": "ServiceProviderState is an opaque state specific to the service provider. This includes data that the operator uses during token matching, etc.",
              "type": "string",
              "format": "byte"
            },
            "userId": {
              "description": "UserId is the user id in the service provider that this token impersonates as",
              "type": "string"
            },
            "username": {
              "description": "Username is the username in the service provider that this token impersonates as",
              "type": "string"
            }
          }
        },
        "uploadUrl": {
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "appstudio.redhat.com",
      "kind": "SPIAccessToken",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}