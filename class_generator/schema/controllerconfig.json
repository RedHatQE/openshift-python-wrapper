{
  "description": "ControllerConfig describes configuration for MachineConfigController. This is currently only used to drive the MachineConfig objects generated by the TemplateController. \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ControllerConfigSpec is the spec for ControllerConfig resource.",
      "type": "object",
      "required": [
        "baseOSContainerImage",
        "cloudProviderConfig",
        "clusterDNSIP",
        "images",
        "ipFamilies",
        "kubeAPIServerServingCAData",
        "releaseImage",
        "rootCAData"
      ],
      "properties": {
        "additionalTrustBundle": {
          "description": "additionalTrustBundle is a certificate bundle that will be added to the nodes trusted certificate store.",
          "format": "byte"
        },
        "baseOSContainerImage": {
          "description": "BaseOSContainerImage is the new-format container image for operating system updates.",
          "type": "string"
        },
        "baseOSExtensionsContainerImage": {
          "description": "BaseOSExtensionsContainerImage is the matching extensions container for the new-format container",
          "type": "string"
        },
        "cloudProviderCAData": {
          "description": "cloudProvider specifies the cloud provider CA data",
          "format": "byte"
        },
        "cloudProviderConfig": {
          "description": "cloudProviderConfig is the configuration for the given cloud provider",
          "type": "string"
        },
        "clusterDNSIP": {
          "description": "clusterDNSIP is the cluster DNS IP address",
          "type": "string"
        },
        "dns": {
          "description": "dns holds the cluster dns details",
          "required": [
            "spec",
            "kind",
            "apiVersion"
          ],
          "properties": {
            "apiVersion": {
              "description": "apiVersion defines the versioned schema of this representation of an object. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": "string"
            },
            "kind": {
              "description": "kind is a string value representing the type of this object. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "metadata": {
              "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            }
          },
          "x-kubernetes-embedded-resource": true
        },
        "etcdDiscoveryDomain": {
          "description": "etcdDiscoveryDomain is deprecated, use Infra.Status.EtcdDiscoveryDomain instead",
          "type": "string"
        },
        "imageRegistryBundleData": {
          "description": "imageRegistryBundleData is the ImageRegistryData",
          "type": "array",
          "items": {
            "description": "ImageRegistryBundle contains information for writing image registry certificates",
            "type": "object",
            "required": [
              "data",
              "file"
            ],
            "properties": {
              "data": {
                "description": "data holds the contents of the bundle that will be written to the file location",
                "type": "string",
                "format": "byte"
              },
              "file": {
                "description": "file holds the name of the file where the bundle will be written to disk",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "imageRegistryBundleUserData": {
          "description": "imageRegistryBundleUserData is Image Registry Data provided by the user",
          "type": "array",
          "items": {
            "description": "ImageRegistryBundle contains information for writing image registry certificates",
            "type": "object",
            "required": [
              "data",
              "file"
            ],
            "properties": {
              "data": {
                "description": "data holds the contents of the bundle that will be written to the file location",
                "type": "string",
                "format": "byte"
              },
              "file": {
                "description": "file holds the name of the file where the bundle will be written to disk",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "images": {
          "description": "images is map of images that are used by the controller to render templates under ./templates/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "infra": {
          "description": "infra holds the infrastructure details",
          "required": [
            "spec",
            "kind",
            "apiVersion"
          ],
          "properties": {
            "apiVersion": {
              "description": "apiVersion defines the versioned schema of this representation of an object. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": "string"
            },
            "kind": {
              "description": "kind is a string value representing the type of this object. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "metadata": {
              "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
            }
          },
          "x-kubernetes-embedded-resource": true
        },
        "internalRegistryPullSecret": {
          "description": "internalRegistryPullSecret is the pull secret for the internal registry, used by rpm-ostree to pull images from the internal registry if present",
          "format": "byte"
        },
        "ipFamilies": {
          "description": "ipFamilies indicates the IP families in use by the cluster network",
          "type": "string"
        },
        "kubeAPIServerServingCAData": {
          "description": "kubeAPIServerServingCAData managed Kubelet to API Server Cert... Rotated automatically",
          "type": "string",
          "format": "byte"
        },
        "network": {
          "description": "Network contains additional network related information",
          "required": [
            "mtuMigration"
          ]
        },
        "networkType": {
          "description": "networkType holds the type of network the cluster is using XXX: this is temporary and will be dropped as soon as possible in favor of a better support to start network related services the proper way. Nobody is also changing this once the cluster is up and running the first time, so, disallow regeneration if this changes.",
          "type": "string"
        },
        "osImageURL": {
          "description": "OSImageURL is the old-format container image that contains the OS update payload.",
          "type": "string"
        },
        "platform": {
          "description": "platform is deprecated, use Infra.Status.PlatformStatus.Type instead",
          "type": "string"
        },
        "proxy": {
          "description": "proxy holds the current proxy configuration for the nodes"
        },
        "pullSecret": {
          "description": "pullSecret is the default pull secret that needs to be installed on all machines.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "releaseImage": {
          "description": "releaseImage is the image used when installing the cluster",
          "type": "string"
        },
        "rootCAData": {
          "description": "rootCAData specifies the root CA data",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "status": {
      "description": "ControllerConfigStatus is the status for ControllerConfig",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions represents the latest available observations of current state.",
          "type": "array",
          "items": {
            "description": "ControllerConfigStatusCondition contains condition information for ControllerConfigStatus",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the time of the last update to the current status object.",
                "format": "date-time"
              },
              "message": {
                "description": "message provides additional information about the current condition. This is only to be consumed by humans.",
                "type": "string"
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition.  Reasons are PascalCase",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type specifies the state of the operator's reconciliation functionality.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "controllerCertificates": {
          "description": "controllerCertificates represents the latest available observations of the automatically rotating certificates in the MCO.",
          "type": "array",
          "items": {
            "description": "ControllerCertificate contains info about a specific cert.",
            "type": "object",
            "required": [
              "bundleFile",
              "signer",
              "subject"
            ],
            "properties": {
              "bundleFile": {
                "description": "bundleFile is the larger bundle a cert comes from",
                "type": "string"
              },
              "notAfter": {
                "description": "notAfter is the upper boundary for validity",
                "type": "string",
                "format": "date-time"
              },
              "notBefore": {
                "description": "notBefore is the lower boundary for validity",
                "type": "string",
                "format": "date-time"
              },
              "signer": {
                "description": "signer is the  cert Issuer",
                "type": "string"
              },
              "subject": {
                "description": "subject is the cert subject",
                "type": "string"
              }
            }
          },
          "x-kubernetes-list-type": "atomic"
        },
        "observedGeneration": {
          "description": "observedGeneration represents the generation observed by the controller.",
          "type": "integer",
          "format": "int64"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "machineconfiguration.openshift.io",
      "kind": "ControllerConfig",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}