{
  "description": "ImageRepository is the Schema for the imagerepositories API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ImageRepositorySpec defines the desired state of ImageRepository",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Credentials management.",
          "type": "object",
          "properties": {
            "regenerate-token": {
              "description": "RegenerateToken defines a request to refresh image accessing credentials.\nRefreshes both, push and pull tokens.\nThe field gets cleared after the refresh.",
              "type": "boolean"
            },
            "verify-linking": {
              "description": "VerifyLinking defines a request to verify and fix\nsecret linking in pipeline service account.\nThe field gets cleared after fixing.",
              "type": "boolean"
            }
          }
        },
        "image": {
          "description": "Requested image repository configuration.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the image within configured Quay organization.\nIf ommited, then defaults to \"cr-namespace/cr-name\".\nThis field cannot be changed after the resource creation.",
              "type": "string",
              "pattern": "^[a-z0-9][.a-z0-9_-]*(/[a-z0-9][.a-z0-9_-]*)*$"
            },
            "visibility": {
              "description": "Visibility defines whether the image is publicly visible.\nAllowed values are public and private.\n\"public\" is the default.",
              "type": "string",
              "enum": [
                "public",
                "private"
              ]
            }
          }
        },
        "notifications": {
          "description": "Notifications defines configuration for image repository notifications.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "config": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Email is the email address to send notifications to.",
                    "type": "string"
                  },
                  "url": {
                    "description": "Webhook is the URL to send notifications to.",
                    "type": "string"
                  }
                }
              },
              "event": {
                "type": "string",
                "enum": [
                  "repo_push"
                ]
              },
              "method": {
                "type": "string",
                "enum": [
                  "email",
                  "webhook"
                ]
              },
              "title": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "ImageRepositoryStatus defines the observed state of ImageRepository",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Credentials contain information related to image repository credentials.",
          "type": "object",
          "properties": {
            "generationTimestamp": {
              "description": "GenerationTime shows timestamp when the current credentials were generated.",
              "type": "string",
              "format": "date-time"
            },
            "pull-robot-account": {
              "description": "PullRobotAccountName is present only if ImageRepository has labels that connect it to Application and Component.\nHolds name of the quay robot account with real (pull only) permissions from the generated repository.",
              "type": "string"
            },
            "pull-secret": {
              "description": "PullSecretName is present only if ImageRepository has labels that connect it to Application and Component.\nHolds name of the dockerconfig secret with credentials to pull only from the generated repository.\nThe secret might not be present in the same namespace as ImageRepository, but created in other environments.",
              "type": "string"
            },
            "push-robot-account": {
              "description": "PushRobotAccountName holds name of the quay robot account with write (push and pull) permissions into the generated repository.",
              "type": "string"
            },
            "push-secret": {
              "description": "PushSecretName holds name of the dockerconfig secret with credentials to push (and pull) into the generated repository.",
              "type": "string"
            }
          }
        },
        "image": {
          "description": "Image describes actual state of the image repository.",
          "type": "object",
          "properties": {
            "url": {
              "description": "URL is the full image repository url to push into / pull from.",
              "type": "string"
            },
            "visibility": {
              "description": "Visibility shows actual generated image repository visibility.",
              "type": "string"
            }
          }
        },
        "message": {
          "description": "Message shows error information for the request.\nIt could contain non critical error, like failed to change image visibility,\nwhile the state is ready and image resitory could be used.",
          "type": "string"
        },
        "notifications": {
          "description": "Notifications shows the status of the notifications configuration.",
          "type": "array",
          "items": {
            "description": "NotificationStatus shows the status of the notification configuration.",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          }
        },
        "state": {
          "description": "State shows if image repository could be used.\n\"ready\" means repository was created and usable,\n\"failed\" means that the image repository creation request failed.",
          "type": "string"
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "appstudio.redhat.com",
      "kind": "ImageRepository",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}