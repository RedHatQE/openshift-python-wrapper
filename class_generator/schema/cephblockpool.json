{
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "compressionMode": {
          "enum": [
            "none",
            "passive",
            "aggressive",
            "force",
            ""
          ]
        },
        "crushRoot": {},
        "deviceClass": {},
        "enableCrushUpdates": {
          "type": "boolean"
        },
        "enableRBDStats": {
          "type": "boolean"
        },
        "erasureCoded": {
          "type": "object",
          "required": [
            "codingChunks",
            "dataChunks"
          ],
          "properties": {
            "algorithm": {
              "type": "string"
            },
            "codingChunks": {
              "type": "integer",
              "minimum": 0
            },
            "dataChunks": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "failureDomain": {
          "type": "string"
        },
        "mirroring": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "mode": {
              "type": "string"
            },
            "peers": {},
            "snapshotSchedules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "name": {
          "type": "string",
          "enum": [
            ".rgw.root",
            ".nfs",
            ".mgr"
          ]
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-preserve-unknown-fields": true
        },
        "quotas": {},
        "replicated": {
          "type": "object",
          "required": [
            "size"
          ],
          "properties": {
            "hybridStorage": {
              "required": [
                "primaryDeviceClass",
                "secondaryDeviceClass"
              ]
            },
            "replicasPerFailureDomain": {
              "type": "integer",
              "minimum": 1
            },
            "requireSafeReplicaSize": {
              "type": "boolean"
            },
            "size": {
              "type": "integer",
              "minimum": 0
            },
            "subFailureDomain": {
              "type": "string"
            },
            "targetSizeRatio": {
              "type": "number"
            }
          }
        },
        "statusCheck": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      }
    },
    "status": {
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "ceph.rook.io",
      "kind": "CephBlockPool",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}