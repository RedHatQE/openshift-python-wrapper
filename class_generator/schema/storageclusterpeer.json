{
  "description": "StorageClusterPeer is the Schema for the storageclusterpeers API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "StorageClusterPeerSpec defines the desired state of StorageClusterPeer",
      "type": "object",
      "required": [
        "localCluster",
        "remoteCluster"
      ],
      "properties": {
        "blockPoolMirroring": {
          "description": "BlockPoolMirroring indicates ceph block mirroring between block pool on the local and remote clusters",
          "type": "object",
          "required": [
            "selector"
          ],
          "properties": {
            "selector": {
              "description": "Selector is used to select blockPools by label",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    }
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "matchLabels": {
                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "x-kubernetes-map-type": "atomic"
            }
          }
        },
        "localCluster": {
          "description": "LocalCluster specifies the spec required for the local cluster",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name holds the name of the local ODF cluster",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic"
            }
          }
        },
        "remoteCluster": {
          "description": "RemoteCluster specifies the spec required for the remote cluster",
          "type": "object",
          "required": [
            "apiEndpoint",
            "onboardingTicket",
            "storageClusterName"
          ],
          "properties": {
            "apiEndpoint": {
              "description": "ApiEndpoint is the URI of the ODF api server",
              "type": "string"
            },
            "onboardingTicket": {
              "description": "OnboardingTicket holds an identity information required by the local ODF cluster to onboard.",
              "type": "string"
            },
            "storageClusterName": {
              "description": "StorageClusterName holds the namespacedName of the Remote ODF Cluster",
              "type": "object",
              "required": [
                "name",
                "namespace"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "description": "StorageClusterPeerStatus defines the observed state of StorageClusterPeer",
      "type": "object"
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "ocs.openshift.io",
      "kind": "StorageClusterPeer",
      "version": "v1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}