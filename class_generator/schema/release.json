{
  "description": "Release is the Schema for the releases API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ReleaseSpec defines the desired state of Release.",
      "type": "object",
      "required": [
        "releasePlan",
        "snapshot"
      ],
      "properties": {
        "data": {
          "description": "Data is an unstructured key used for providing data for the managed Release Pipeline",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "gracePeriodDays": {
          "description": "GracePeriodDays is the number of days a Release should be kept\nThis value is used to define the Release ExpirationTime",
          "type": "integer"
        },
        "releasePlan": {
          "description": "ReleasePlan to use for this particular Release",
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "snapshot": {
          "description": "Snapshot to be released",
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        }
      }
    },
    "status": {
      "description": "ReleaseStatus defines the observed state of Release.",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Artifacts is an unstructured key used for storing all the artifacts generated by the managed Release Pipeline",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "attribution": {
          "description": "Attribution contains information about the entity authorizing the release",
          "type": "object",
          "properties": {
            "author": {
              "description": "Author is the username that the release is attributed to",
              "type": "string"
            },
            "standingAuthorization": {
              "description": "StandingAuthorization indicates whether the release is attributed through a ReleasePlan",
              "type": "boolean"
            }
          }
        },
        "automated": {
          "description": "Automated indicates whether the Release was created as part of an automated process or manually by an end-user",
          "type": "boolean"
        },
        "collectors": {
          "description": "Collectors is an unstructured key used for storing all the collectors results generated by the Collectors Pipeline",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "collectorsProcessing": {
          "description": "CollectorsProcessing contains information about the release collectors processing",
          "type": "object",
          "properties": {
            "managedCollectorsProcessing": {
              "description": "ManagedCollectorsProcessing contains information about the release managed collectors processing",
              "type": "object",
              "properties": {
                "completionTime": {
                  "description": "CompletionTime is the time when the Release processing was completed",
                  "type": "string",
                  "format": "date-time"
                },
                "pipelineRun": {
                  "description": "PipelineRun contains the namespaced name of the managed Release PipelineRun executed as part of this release",
                  "type": "string",
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "roleBinding": {
                  "description": "RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun\nexecuted as part of this release",
                  "type": "string",
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "startTime": {
                  "description": "StartTime is the time when the Release processing started",
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "tenantCollectorsProcessing": {
              "description": "TenantCollectorsProcessing contains information about the release tenant collectors processing",
              "type": "object",
              "properties": {
                "completionTime": {
                  "description": "CompletionTime is the time when the Release processing was completed",
                  "type": "string",
                  "format": "date-time"
                },
                "pipelineRun": {
                  "description": "PipelineRun contains the namespaced name of the managed Release PipelineRun executed as part of this release",
                  "type": "string",
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "roleBinding": {
                  "description": "RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun\nexecuted as part of this release",
                  "type": "string",
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "startTime": {
                  "description": "StartTime is the time when the Release processing started",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "completionTime": {
          "description": "CompletionTime is the time when a Release was completed",
          "type": "string",
          "format": "date-time"
        },
        "conditions": {
          "description": "Conditions represent the latest available observations for the release",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            }
          }
        },
        "expirationTime": {
          "description": "ExpirationTime is the time when a Release can be purged",
          "type": "string",
          "format": "date-time"
        },
        "finalProcessing": {
          "description": "FinalProcessing contains information about the release final processing",
          "type": "object",
          "properties": {
            "completionTime": {
              "description": "CompletionTime is the time when the Release processing was completed",
              "type": "string",
              "format": "date-time"
            },
            "pipelineRun": {
              "description": "PipelineRun contains the namespaced name of the managed Release PipelineRun executed as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "roleBinding": {
              "description": "RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun\nexecuted as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "startTime": {
              "description": "StartTime is the time when the Release processing started",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "managedProcessing": {
          "description": "ManagedProcessing contains information about the release managed processing",
          "type": "object",
          "properties": {
            "completionTime": {
              "description": "CompletionTime is the time when the Release processing was completed",
              "type": "string",
              "format": "date-time"
            },
            "pipelineRun": {
              "description": "PipelineRun contains the namespaced name of the managed Release PipelineRun executed as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "roleBinding": {
              "description": "RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun\nexecuted as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "startTime": {
              "description": "StartTime is the time when the Release processing started",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "startTime": {
          "description": "StartTime is the time when a Release started",
          "type": "string",
          "format": "date-time"
        },
        "target": {
          "description": "Target references where this release is intended to be released to",
          "type": "string",
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "tenantProcessing": {
          "description": "TenantProcessing contains information about the release tenant processing",
          "type": "object",
          "properties": {
            "completionTime": {
              "description": "CompletionTime is the time when the Release processing was completed",
              "type": "string",
              "format": "date-time"
            },
            "pipelineRun": {
              "description": "PipelineRun contains the namespaced name of the managed Release PipelineRun executed as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "roleBinding": {
              "description": "RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun\nexecuted as part of this release",
              "type": "string",
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?\\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "startTime": {
              "description": "StartTime is the time when the Release processing started",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "validation": {
          "description": "Validation contains information about the release validation",
          "type": "object",
          "properties": {
            "failedPostValidation": {
              "description": "FailedPostValidation indicates whether the Release was marked as invalid after being initially marked as valid",
              "type": "boolean"
            },
            "time": {
              "description": "Time is the time when the Release was validated or when the validation state changed",
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "appstudio.redhat.com",
      "kind": "Release",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}